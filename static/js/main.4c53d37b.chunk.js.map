{"version":3,"sources":["components/StyledComponents/Flex.jsx","components/StyledComponents/Button.jsx","toolKitRedux/toolkitSlice.js","components/Homepage/Homepage.jsx","components/Reports/slots.js","components/Reports/SaturationReport/OnionSaturationCard.jsx","components/StyledComponents/Title.jsx","components/StyledComponents/Select.js","axios/axios.js","toolKitRedux/saturationPeriodReportSlice.js","components/Reports/SaturationReport/SaturationByperiodPage/SaturationByPeriodPage.jsx","components/StyledComponents/StyledLink.jsx","components/Reports/SaturationReport/SaturationByOnionsPage/SaturationByOnionsPage.jsx","components/Reports/Reports.jsx","components/WeatherControlPage/WeatherControlPage.jsx","components/StyledComponents/TextContent.jsx","components/Page404/Page404.jsx","components/Reports/Charts/ChartOfBigOnions.jsx","components/Reports/Charts/ChartOfSmallOnions.jsx","components/Reports/Charts/ChartsPage.jsx","components/Navbar/Navbar.jsx","App.jsx","toolKitRedux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","justify","margin","width","height","padding","bColor","tDecoration","bBorder","Flex","StyledButton","button","bcolor","color","bradius","border","Button","type","toolkitSlice","createSlice","name","initialState","count","todos","reducers","increment","state","decrement","addTodo","action","push","payload","removeLastTodo","pop","actions","Homepage","dispatch","useDispatch","useSelector","toolkit","onClick","prompt","a","setTimeout","map","todo","slotsRegular","OnionSaturationCard","city","saturation","saturationAtSlotData","id","difference","reason_saturation","area","level_sat","StyledTitle","span","decoration","fSize","fWeight","textAlign","cursor","display","Title","SelectStyle","background","borderRadius","appearance","outline","aideApiAxios","axios","create","baseURL","headers","Authorization","axiosGetSaturatedOnionsByPeriod","createAsyncThunk","periodStart","periodEnd","getState","rejectWithValue","get","saturatedOnions","statusText","Error","data","message","axiosGetSaturatedOnionAnalyseObject","onionCode","saturatedOnionData","onionReportObject","console","log","JSON","parse","getSaturationReport","getUniqueSaturatedOnionCodes","saturatedUniqueOnionCodesArray","saturationPeriodReport","Promise","all","periodReport","setError","status","error","saturationPeriodReportSlice","saturatedOnionsObjectsArray","level_saturation","setPeriodOfReport","allSaturatedOnionCodes","reduce","accum","onion","some","obj","filter","index","indexOf","addOnionObjToPeriodReport","extraReducers","fulfilled","rejected","pending","SaturationByPeriodPage","useState","setSaturationPeriodReport","sendRequestForReport","setSendRequestForReport","selectChangeHandler","e","target","value","substr","getSaturatedOnionsByPeriod","getOnionSaturationReportObject","onionName","slotStart","slotEnd","response","getSatReport","saturatedOnionsFilteredBySlotsPeriod","allCodesOfSaturatedOnionsAtSelectedPeriod","uniqueCodesOfSaturatedOnions","reportArray","useEffect","report","length","fetchData","style","onChange","slot","preventDefault","key","SNavLink","NavLink","text_align","background_color","radius","StyledNavLink","to","text","SaturationByOnionsPage","startPeriodSlotSelected","setStartPeriodSlotSelected","endPeriodSlotSelected","setEndPeriodSlotSelected","slotStartHour","slotEndHour","Reports","useRouteMatch","path","url","exact","stylesForStyledLink","component","WeatherControlPage","StyledSpan","TextContent","Page404","ChartOfBigOnions","ChartOfSmallOnions","ChartsPage","Navbar","GlobalStyle","createGlobalStyle","App","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"wKAGMA,EAAaC,IAAOC,IAAV,8PAEI,SAAAC,GAAK,OAAIA,EAAMC,WAAa,SAC/B,qBAAEC,OAAoB,aAClB,qBAAEC,SAAwB,aACnC,qBAAEC,QAAsB,OACzB,qBAAEC,OAAoB,UACrB,qBAAEC,QAAsB,UACvB,qBAAEC,SAAwB,OACjB,qBAAEC,QAAsB,iBACzB,qBAAEC,aAAgC,UACpC,qBAAEC,SAAwB,MAG9B,SAASC,EAAKX,GACzB,OAAO,cAACH,EAAD,eAAgBG,I,aCfrBY,EAAed,IAAOe,OAAV,qMACL,qBAAGR,OAAqB,WACb,qBAAGS,QAAuB,kBACrC,qBAAGC,OAAqB,WAEtB,qBAAGR,SAAyB,SACtB,qBAAGS,SAAyB,SACnC,qBAAGC,QAAuB,qBAIzB,SAASC,EAAOlB,GAC3B,OAAO,cAACY,EAAD,aAAcO,KAAMnB,EAAMmB,MAAUnB,I,6CCLzCoB,EAAeC,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVC,MAAO,GACPC,MAAO,CAAC,6CAAW,mDAAY,yCAEnCC,SAAU,CACNC,UADM,SACIC,GACNA,EAAMJ,MAAQI,EAAMJ,MAAQ,GAEhCK,UAJM,SAIID,GACNA,EAAMJ,MAAQI,EAAMJ,MAAQ,GAEhCM,QAPM,SAOEF,EAAOG,GACXH,EAAMH,MAAMO,KAAKD,EAAOE,UAE5BC,eAVM,SAUSN,GACXA,EAAMH,MAAMU,UAKjB,EACHf,EAAagB,QADFT,EAAR,EAAQA,UAAWE,EAAnB,EAAmBA,UAAWC,EAA9B,EAA8BA,QAASI,EAAvC,EAAuCA,eAE/Bd,IAAf,QCIeiB,EA1BE,WACb,IAAMC,EAAWC,cACXf,EAAQgB,aAAY,SAACZ,GAAD,OAAWA,EAAMa,QAAQjB,SAC7CC,EAAQe,aAAY,SAACZ,GAAD,OAAWA,EAAMa,QAAQhB,SAEnD,OACI,eAACd,EAAD,WACI,8BAAMa,IACN,cAACN,EAAD,CAAQwB,QAAS,kBAAMJ,EAASX,MAAhC,oEACA,cAACT,EAAD,CAAQwB,QAAS,kBAAMJ,EAAST,MAAhC,oEACA,cAACX,EAAD,CAAQwB,QAAS,kBAAMJ,EAASR,EAAQa,YAAxC,uFAGA,cAACzB,EAAD,CAAQwB,QAAS,kBAAMJ,EAASJ,MAAhC,wIAGA,cAAChB,EAAD,CAAQwB,QAAS,kBAAMJ,EDzB/B,uCAAO,WAAOA,GAAP,SAAAM,EAAA,sDACHC,YAAW,WACPP,EAASR,EAAQ,iBAClB,KAHA,2CAAP,wDCyBQ,sHAGCL,EAAMqB,KAAI,SAACC,GAAD,OACP,8BAAMA,W,QChCTC,EAAe,CACxB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SCDWC,EArBa,SAACjD,GACzB,OACI,gCACI,6BAAKA,EAAMkD,OACX,8BACKlD,EAAMmD,WAAWL,KAAI,SAACM,EAAsBC,GAAvB,OAClB,8BAAeD,GAALC,QAGlB,8BAAMrD,EAAMsD,aACZ,8BAAMtD,EAAMuD,oBAGZ,gCACI,+BAAOvD,EAAMwD,OACb,+BAAOxD,EAAMyD,mBCdvBC,EAAc5D,IAAO6D,KAAV,uSACF,qBAAGzD,OAAqB,YAC5B,qBAAGE,QAAuB,OAC3B,qBAAGW,OAAqB,WACd,qBAAG6C,YAA+B,UACxC,qBAAGC,OAAqB,SACtB,qBAAGC,SAAyB,SAClC,qBAAGzD,OAAqB,UACvB,qBAAGC,QAAuB,UAC1B,qBAAGF,QAAuB,OACtB,qBAAG2D,WAA6B,WACpC,qBAAGC,QAAuB,MACzB,qBAAGC,SAAyB,YACpB,qBAAExD,aAAgC,UACjC,qBAAED,QAAsB,iBAG9B,SAAS0D,EAAMlE,GAC7B,OAAO,cAAC0D,EAAD,eAAiB1D,ICrBlB,I,EAAMmE,EAAc,CACvBC,WAAY,OACZC,aAAc,OACdtD,MAAO,QACPR,QAAS,MACT+D,WAAY,OACZjE,MAAO,SACPY,OAAQ,kBACRsD,QAAS,OACTnE,OAAQ,U,QCLCoE,E,OAAeC,EAAMC,OAAO,CACrCC,QAHW,+BAIXC,QAAS,CACLC,cAAc,SAAD,OANA,+C,QCERC,EAAkCC,YAC3C,oDAD2D,uCAE3D,qCAAAnC,EAAA,6DACMoC,EADN,EACMA,YAAaC,EADnB,EACmBA,UADnB,EAEMC,SAFN,EAEgB5C,SAAU6C,EAF1B,EAE0BA,gBAF1B,kBAKsCX,EAAaY,IAAb,sCACKJ,EADL,gBACwBC,EADxB,gBALtC,UAQ2C,QAH7BI,EALd,QAQ4BC,WAR5B,sBASkB,IAAIC,MAAM,6JAT5B,gCAWeF,EAAgBG,MAX/B,2DAaeL,EAAgB,KAAMM,UAbrC,0DAF2D,yDAoBlDC,EAAsCX,YAC/C,iDAD+D,uCAE/D,yCAAAnC,EAAA,6DACM+C,EADN,EACMA,UAAWX,EADjB,EACiBA,YAAaC,EAD9B,EAC8BA,UACxBE,EAFN,EAEMA,gBAFN,EAEuB7C,SAFvB,kBAKyCkC,EAAaY,IAAb,oBAChBO,EADgB,YACHX,EADG,YACYC,IANrD,UAKcW,EALd,OAScC,EAAoBD,EAAmBJ,KAC7CM,QAAQC,IAAIC,KAAKC,MAAMJ,IACe,OAAlCD,EAAmBN,WAX/B,uBAYkB,IAAIC,MAAM,6JAZ5B,iCAceS,KAAKC,MAAMJ,IAd1B,2DAgBeV,EAAgB,KAAMM,UAhBrC,0DAF+D,yDAuBtDS,EAAsBnB,YAC/B,wCAD+C,uCAE/C,yCAAAnC,EAAA,6DAAkBoC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,UAAe3C,EAA9C,EAA8CA,SAAU4C,EAAxD,EAAwDA,SAAxD,SACU5C,EACFwC,EAAgC,CAAEE,cAAaC,eAFvD,uBAIU3C,EAAS6D,KAJnB,cAMUC,EACFlB,IAAWmB,uBAAuBD,+BAP1C,SAQ+BE,QAAQC,IAC/BH,EAA+BtD,IAA/B,uCAAmC,WAAO6C,GAAP,SAAA/C,EAAA,6DAC/BkD,QAAQC,IAAIJ,GADmB,SAEzBrD,EACFoD,EAAoC,CAChCC,YACAX,cACAC,eANuB,gCASxBC,IAAWmB,uBAAuBR,mBATV,2CAAnC,wDATR,cAQUW,EARV,OAqBIV,QAAQC,MACRD,QAAQC,IAAIS,GAtBhB,kBAuBWA,GAvBX,4CAF+C,yDA6B7CC,EAAW,SAAC7E,EAAOG,GACrBH,EAAM8E,OAAS,WACf9E,EAAM+E,MAAQ5E,EAAOE,SAQnB2E,EAA8BvF,YAAY,CAC5CC,KAAM,oBACNC,aAAc,CACVmF,OAAQ,KACRC,MAAO,KACP3B,YAAa,KACbC,UAAW,KACX4B,4BAA6B,GAC7BT,+BAAgC,GAChCP,kBAAmB,GACnBW,aAAc,CACV,CACItD,KAAM,GACNI,WAAY,GACZC,kBAAmB,GACnBC,KAAM,GACNL,WAAY,CAAC,IACb2D,iBAAkB,OAI9BpF,SAAU,CACNqF,kBADM,SACYnF,EAAOG,GACrB+D,QAAQC,IAAIhE,EAAOE,SACnBL,EAAMoD,YAAcjD,EAAOE,QAAQ+C,YACnCpD,EAAMqD,UAAYlD,EAAOE,QAAQgD,WAGrCkB,6BAPM,SAOuBvE,GACzB,IAAMoF,EACFpF,EAAMiF,4BAA4BI,QAAO,SAACC,EAAOC,GAI7C,OAHKD,EAAME,MAAK,SAACC,GAAD,OAASA,EAAInE,OAASiE,EAAMjE,SACxCgE,EAAMlF,KAAKmF,EAAMjE,MAEdgE,IACR,IAEPtF,EAAMwE,+BACFY,EAAuBM,QACnB,SAAC3B,EAAW4B,GAAZ,OACIP,EAAuBQ,QAAQ7B,KAAe4B,MAG9DE,0BAtBM,SAsBoB7F,EAAOG,GAC7BH,EAAMyE,uBAAuBrE,KAAKD,EAAOE,WAGjDyF,eAAa,mBACR5C,EAAgC6C,WAAY,SAAC/F,EAAOG,GACjDH,EAAM8E,OAAS,WACf9E,EAAMiF,4BAA8B9E,EAAOE,WAHtC,cAKR6C,EAAgC8C,SAAWnB,GALnC,cAMRf,EAAoCiC,WAAY,SAAC/F,EAAOG,GACrDH,EAAM8E,OAAS,WACf9E,EAAMiE,kBAAoB9D,EAAOE,WAR5B,cAURyD,EAAoCkC,SAAWnB,GAVvC,cAWRP,EAAoByB,WAAY,SAAC/F,EAAOG,GACrCH,EAAM8E,OAAS,WACf9E,EAAM4E,aAAezE,EAAOE,WAbvB,cAeRiE,EAAoB2B,SAnEV,SAACjG,GAChBA,EAAM8E,OAAS,UACf9E,EAAM+E,MAAQ,QAkDD,KAmBV,EACHC,EAA4BxE,QADjB2E,EAAR,EAAQA,kBAAmBZ,EAA3B,EAA2BA,6BAGnBS,IAAf,QC3Ie,SAASkB,IACpB,IAUMxF,EAAWC,cACjB,EAAgEC,aAC5D,SAACZ,GAAD,OAAWA,EAAMyE,0BADbK,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAAO3B,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,UAAWuB,EAA/C,EAA+CA,aAI/C,EACIuB,mBAhBgB,CAChB,CACI7E,KAAM,GACNI,WAAY,GACZC,kBAAmB,GACnBC,KAAM,GACNL,WAAY,CAAC,IACb2D,iBAAkB,OAQ1B,mBAA+BkB,GAA/B,WAGA,EAAwDD,oBAAS,GAAjE,mBAAOE,EAAP,KAA6BC,EAA7B,KAEA,SAASC,EAAoBC,GACzB,IAAM9G,EAAO8G,EAAEC,OAAO/G,KACT,4BAATA,EACAgB,EACIyE,EAAkB,CACd/B,YAAaoD,EAAEC,OAAOC,MAAMC,OAAO,EAAG,GACtCtD,UAAWA,KAGH,0BAAT3D,GACPgB,EACIyE,EAAkB,CACd/B,YAAaA,EACbC,UAAWmD,EAAEC,OAAOC,MAAMC,OAAO,EAAG,MAlCP,SAwC9BC,EAxC8B,gFAwC7C,WAA0CxD,EAAaC,GAAvD,SAAArC,EAAA,+EAEqB4B,EAAaY,IAAb,sCACsBJ,EADtB,gBACyCC,EADzC,eAFrB,+EAMQa,QAAQC,IAAI,mCAAZ,MANR,kFAxC6C,+BAmD9B0C,EAnD8B,kFAmD7C,WACIC,EACAC,EACAC,GAHJ,eAAAhG,EAAA,+EAM+B4B,EAAaY,IAAb,oBACNsD,EADM,YACOC,EADP,YACoBC,IAPnD,cAMcC,EANd,gBASqB7C,KAAKC,MAAM4C,EAASrD,MATzC,wEAWQM,QAAQC,IAAR,MAXR,0DAnD6C,+BAkE9B+C,EAlE8B,gFAkE7C,WAA4BH,EAAWC,GAAvC,qBAAAhG,EAAA,sEAEc4F,EAA2BG,EAAWC,GAFpD,cACUG,EADV,OAGMvD,KACIwD,EACFD,EAAqC9B,QAAO,SAACC,EAAOC,GAIhD,OAHKD,EAAME,MAAK,SAACC,GAAD,OAASA,EAAInE,OAASiE,EAAMjE,SACxCgE,EAAMlF,KAAKmF,EAAMjE,MAEdgE,IACR,IAVX,SAac8B,EAA0C1B,QAC5C,SAAC3B,EAAW4B,GAAZ,OACIyB,EAA0CxB,QACtC7B,KACE4B,KAjBtB,cAYU0B,EAZV,gBAoB8B3C,QAAQC,IAC9B0C,EAA6BnG,IAA7B,uCAAiC,WAAOxB,GAAP,SAAAsB,EAAA,sEAChB6F,EACTnH,EACAqH,EACAC,GAJyB,mFAAjC,sDAMG,KA3BX,cAoBUM,EApBV,yBA6BWA,GA7BX,6CAlE6C,sBAiH7C,OAfAC,qBAAU,WAAM,4CACZ,4BAAAvG,EAAA,sEACyBkG,EAAa9D,EAAaC,GADnD,QACUmE,EADV,QAEeC,OAAS,GAChBrB,EAA0BoB,GAHlC,4CADY,uBAAC,WAAD,wBAOZE,KACD,CAACrB,IAEJkB,qBAAU,WACN7G,EAAS4D,EAAoB,CAAElB,YAAa,KAAMC,UAAW,UAE9D,IAGC,eAACtE,EAAD,CAAMV,UAAW,SAAUC,MAAO,SAAUE,OAAQ,YAApD,UACI,cAACO,EAAD,CAAMR,QAAS,SAAf,SACI,uBAAM4B,OAAO,IAAb,UACI,wBACIwH,MAAOpF,EACP7C,KAAK,0BACL+B,GAAG,IACHiF,MAAK,UAAKtD,EAAL,OACLwE,SAAU,SAACpB,GAAD,OAAOD,EAAoBC,IALzC,SAOKpF,EAAaF,KAAI,SAAC2G,EAAMpG,GAAP,OACd,wBAAQiF,MAAOmB,EAAf,SACKA,GADqBpG,QAKlC,wBACIkG,MAAOpF,EACP7C,KAAK,wBACL+B,GAAG,IACHiF,MAAK,UAAKrD,EAAL,OACLuE,SAAU,SAACpB,GAAD,OAAOD,EAAoBC,IALzC,SAOKpF,EAAaF,KAAI,SAAC2G,EAAMpG,GAAP,OACd,wBAAQiF,MAAOmB,EAAf,SACKA,GADqBpG,QAKlC,cAACnC,EAAD,CACIwB,QAAS,SAAC0F,GACNA,EAAEsB,iBACFxB,GAAyBD,IAE7BnH,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,OAAQ,kBARZ,uCAcR,eAACN,EAAD,CAAMV,UAAW,SAAUI,MAAO,MAAlC,UACI,cAAC6D,EAAD,CACIJ,QAAS,MADb,mIAE2BkB,EAF3B,4BAEgDC,EAFhD,SAGA,8BACKuB,EAAa1D,KAAI,SAACqE,EAAO9D,GACtB,GAAI8D,EACA,OAAO,wBAAC,EAAD,2BAAyBA,GAAzB,IAAgCwC,IAAKtG,aAKhD,YAAXqD,GAAwB,4CACxBC,GAAS,qDAAwBA,Q,gBCrLxCiD,GAAW9J,YAAO+J,IAAP/J,CAAH,gYACD,qBAAGiB,OAAqB,WACd,qBAAG6C,YAA+B,UACxC,qBAAGC,OAAqB,SAC5B,qBAAGxD,OAAqB,UACvB,qBAAGC,QAAuB,UACzB,qBAAGC,SAAyB,OAC7B,qBAAGH,QAAuB,OACtB,qBAAG0J,YAA+B,WACtC,qBAAG9F,QAAuB,MACzB,qBAAGC,SAAyB,YACpB,qBAAGxD,aAAiC,UACnC,qBAAGsJ,kBAA2C,YACjD,qBAAGC,QAAuB,SACjC,qBAAG/I,QAAuB,MAczBgJ,GARO,SAACjK,GACnB,OACI,cAAC4J,GAAD,yBAAUM,GAAIlK,EAAMkK,IAAQlK,GAA5B,aACKA,EAAMmK,SC8JJC,GAhLgB,WAC3B,IAWA,EACIrC,mBAAS,SADb,mBAAOsC,EAAP,KAAgCC,EAAhC,KAEA,EAA0DvC,mBAAS,SAAnE,mBAAOwC,EAAP,KAA8BC,EAA9B,KACA,EACIzC,mBAfgB,CAChB,CACI7E,KAAM,GACNI,WAAY,GACZC,kBAAmB,GACnBC,KAAM,GACNL,WAAY,CAAC,IACb2D,iBAAkB,OAO1B,mBAAOT,EAAP,KAA+B2B,EAA/B,KAEA,EAAwDD,oBAAS,GAAjE,mBAAOE,EAAP,KAA6BC,EAA7B,KAEA,SAASC,EAAoBC,GACzB,IAAM9G,EAAO8G,EAAEC,OAAO/G,KACT,4BAATA,EACAgJ,EAA2BlC,EAAEC,OAAOC,OACpB,0BAAThH,GACPkJ,EAAyBpC,EAAEC,OAAOC,OAxBT,SA4BlBE,EA5BkB,gFA4BjC,WAA0CxD,EAAaC,GAAvD,SAAArC,EAAA,+EAEqB4B,EAAaY,IAAb,sCACsBJ,EADtB,gBACyCC,EADzC,eAFrB,+EAMQa,QAAQC,IAAI,mCAAZ,MANR,kFA5BiC,+BAuClB0C,EAvCkB,kFAuCjC,WACIC,EACAC,EACAC,GAHJ,eAAAhG,EAAA,+EAM+B4B,EAAaY,IAAb,oBACNsD,EADM,YACOC,EADP,YACoBC,IAPnD,cAMcC,EANd,gBAUqB7C,KAAKC,MAAM4C,EAASrD,MAVzC,wEAYQM,QAAQC,IAAR,MAZR,0DAvCiC,+BAuDlB+C,EAvDkB,gFAuDjC,WAA4BH,EAAWC,GAAvC,yBAAAhG,EAAA,6DACU6H,EAAgB9B,EAAUJ,OAAO,EAAG,GACpCmC,EAAc9B,EAAQL,OAAO,EAAG,GAF1C,SAKcC,EAA2BiC,EAAeC,GALxD,cAIU3B,EAJV,OAMMvD,KAEIwD,EACFD,EAAqC9B,QAAO,SAACC,EAAOC,GAIhD,OAHKD,EAAME,MAAK,SAACC,GAAD,OAASA,EAAInE,OAASiE,EAAMjE,SACxCgE,EAAMlF,KAAKmF,EAAMjE,MAEdgE,IACR,IAdX,SAiBc8B,EAA0C1B,QAC5C,SAAC3B,EAAW4B,GAAZ,OACIyB,EAA0CxB,QACtC7B,KACE4B,KArBtB,cAgBU0B,EAhBV,iBAwB8B3C,QAAQC,IAC9B0C,EAA6BnG,IAA7B,uCAAiC,WAAOxB,GAAP,SAAAsB,EAAA,sEAChB6F,EACTnH,EACAmJ,EACAC,GAJyB,mFAAjC,sDAMG,KA/BX,eAwBUxB,EAxBV,yBAiCWA,GAjCX,6CAvDiC,sBAwGjC,OAbAC,qBAAU,WAAM,4CACZ,4BAAAvG,EAAA,sEACyBkG,EACjBuB,EACAE,GAHR,QACUnB,EADV,QAKeC,OAAS,GAChBrB,EAA0BoB,GANlC,4CADY,uBAAC,WAAD,wBAUZE,KACD,CAACrB,IAGA,eAACtH,EAAD,CAAMV,UAAW,SAAUC,MAAO,SAAUE,OAAQ,YAApD,UACI,cAACO,EAAD,CAAMR,QAAS,SAAf,SACI,uBAAM4B,OAAO,IAAb,UACI,wBACIwH,MAAOpF,EACP7C,KAAK,0BACL+B,GAAG,IACHiF,MAAO+B,EACPb,SAAU,SAACpB,GAAD,OAAOD,EAAoBC,IALzC,SAOKpF,EAAaF,KAAI,SAAC2G,EAAMpG,GAAP,OACd,wBAAQiF,MAAOmB,EAAf,SACKA,GADqBpG,QAKlC,wBACIkG,MAAOpF,EACP7C,KAAK,wBACL+B,GAAG,IACHiF,MAAOiC,EACPf,SAAU,SAACpB,GAAD,OAAOD,EAAoBC,IALzC,SAOKpF,EAAaF,KAAI,SAAC2G,EAAMpG,GAAP,OACd,wBAAQiF,MAAOmB,EAAf,SACKA,GADqBpG,QAKlC,cAACnC,EAAD,CACIwB,QAAS,SAAC0F,GACNA,EAAEsB,iBACFxB,GAAyBD,IAE7BnH,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,OAAQ,kBARZ,6BAcR,eAACN,EAAD,CAAMV,UAAW,SAAUI,MAAO,MAAlC,UACI,cAAC6D,EAAD,CACIJ,QAAS,MADb,mIAE2BuG,EAF3B,yBAEyDE,KACzD,8BACKlE,EAAuBgD,OAAS,EAC7BhD,EAAuBvD,KAAI,SAACqE,EAAO9D,GAC/B,GAAI8D,EACA,OACI,wBAAC,EAAD,2BAAyBA,GAAzB,IAAgCwC,IAAKtG,QAKjD,eAACa,EAAD,WACK,IADL,sIAGQmG,EACF,IAJN,gBAKQE,EALR,kEC5ITI,GAvBC,WACZ,MAAsBC,cAAdC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACI,eAACnK,EAAD,WACI,cAAC,GAAD,yBACIoK,OAAK,EACLb,GAAE,UAAKY,IACHE,IAHR,IAIIb,KAAM,YAEV,cAAC,GAAD,yBACID,GAAE,UAAKY,EAAL,YACEE,IAFR,IAGIb,KAAM,YAGV,cAAC,IAAD,CAAOY,OAAK,EAACF,KAAI,UAAKA,GAAQI,UAAWb,KACzC,cAAC,IAAD,CAAOS,KAAI,UAAKA,EAAL,WAAoBI,UAAWnD,QChBvCoD,GARY,WACvB,OACI,qECDFC,GAAarL,IAAO6D,KAAV,mQACN,qBAAG5C,OAAqB,WACd,qBAAG6C,YAA+B,UACxC,qBAAGC,OAAqB,SACtB,qBAAGC,SAAyB,SAClC,qBAAGzD,OAAqB,UACvB,qBAAGC,QAAuB,UAC1B,qBAAGF,QAAuB,OACtB,qBAAG2D,WAA6B,WACpC,qBAAGC,QAAuB,MACzB,qBAAGC,SAAyB,YACpB,qBAAExD,aAAgC,UACjC,qBAAED,QAAsB,iBAG9B,SAAS4K,GAAYpL,GACnC,OAAO,cAACmL,GAAD,eAAgBnL,ICfT,SAASqL,KACpB,OACI,cAAC1K,EAAD,CAAMP,OAAO,OAAOD,QAAQ,SAASD,MAAM,SAA3C,SACI,cAACkL,GAAD,CAAarH,UAAU,SAAS3D,OAAO,WAAWyD,MAAM,MAAxD,+GCLZ,I,GAQeyH,GARU,WACrB,OACI,oDCMOC,GARY,WACvB,OACI,qDCUOC,GAVI,WACf,OACI,8CAEI,cAAC,GAAD,IACA,cAAC,GAAD,QCCCR,GAAsB,CAC/B3K,MAAO,MACPE,QAAS,MACTyJ,OAAQ,OACRD,iBAAkB,iBAClB9I,OAAQ,kBACR6I,WAAY,UAiDD2B,GA9CA,WACX,MAAsBb,cAAtB,EAAQC,KAAR,EAAcC,IAEd,OACI,eAACnK,EAAD,CAAMV,UAAW,SAAjB,UACI,eAACU,EAAD,CACIL,OAAQ,MACRE,OAAQ,iBACRD,QAAS,UACTJ,QAAS,eACTO,QAAS,mBALb,UAOI,cAAC,GAAD,yBACIqK,OAAK,GACDC,IAFR,IAGId,GAAI,SACJC,KAAM,UAEV,cAAC,GAAD,2BACQa,IADR,IAEId,GAAI,eACJC,KAAM,YAEV,cAAC,GAAD,2BACQa,IADR,IAEId,GAAI,gBACJC,KAAM,aAEV,cAAC,GAAD,2BACQa,IADR,IAEId,GAAI,gBACJC,KAAM,gBAId,eAAC,IAAD,WACI,cAAC,IAAD,CAAOY,OAAK,EAACF,KAAM,SAAUI,UAAW5I,IACxC,cAAC,IAAD,CAAOwI,KAAM,eAAgBI,UAAWO,KACxC,cAAC,IAAD,CAAOX,KAAM,gBAAiBI,UAAWN,KACzC,cAAC,IAAD,CAAOE,KAAM,gBAAiBI,UAAWC,KACzC,cAAC,IAAD,CAAOL,KAAK,IAAII,UAAWI,YCxDrCK,GAAcC,YAAH,sKAmBFC,OATf,WACI,OACI,qCACI,cAACF,GAAD,IACA,cAAC,GAAD,Q,SCbNG,GAAcC,aAAgB,CAChCrJ,QAASrB,EACTiF,uBAAwBO,IAGfmF,GAAQC,YAAe,CAChCC,QAASJ,KCFbK,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.4c53d37b.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFlex = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  align-items: ${({align}) => align || 'stretch'};\n  justify-content: ${({justify}) => justify || 'stretch'};\n  margin: ${({margin}) => margin || '0'};\n  width: ${({width}) => width || '100%'};\n  height: ${({height}) => height || '100%'};\n  padding: ${({padding}) => padding || '0'};\n  background-color: ${({bColor}) => bColor || 'transparent'};\n  text-decoration: ${({tDecoration}) => tDecoration || 'none'};\n  border-bottom: ${({bBorder}) => bBorder || ''};\n`\n\nexport default function Flex(props) {\n    return <StyledFlex {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    width: ${({ width }) => width || '100px'};\n    background-color: ${({ bcolor }) => bcolor || 'rgb(0, 0 ,0)'};\n    color: ${({ color }) => color || 'white'};\n    font-weight: 500;\n    padding: ${({ padding }) => padding || '7px'};\n    border-radius: ${({ bradius }) => bradius || '5px'};\n    border: ${({ border }) => border || '2px solid white'};\n    cursor: pointer;\n`\n\nexport default function Button(props) {\n    return <StyledButton type={props.type} {...props} />\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const addAsyncTodo = () => {\n    return async (dispatch) => {\n        setTimeout(() => {\n            dispatch(addTodo('ASYNC TODO'))\n        }, 2000)\n    }\n}\n\nconst toolkitSlice = createSlice({\n    name: 'toolkit',\n    initialState: {\n        count: 21,\n        todos: ['Умыться', 'Покушать', 'Уснуть'],\n    },\n    reducers: {\n        increment(state) {\n            state.count = state.count + 1\n        },\n        decrement(state) {\n            state.count = state.count - 1\n        },\n        addTodo(state, action) {\n            state.todos.push(action.payload)\n        },\n        removeLastTodo(state) {\n            state.todos.pop()\n        },\n    },\n})\n\nexport const { increment, decrement, addTodo, removeLastTodo } =\n    toolkitSlice.actions\nexport default toolkitSlice.reducer\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport Button from '../StyledComponents/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    addAsyncTodo,\n    addTodo,\n    decrement,\n    increment,\n    removeLastTodo,\n} from '../../toolKitRedux/toolkitSlice'\n\nconst Homepage = () => {\n    const dispatch = useDispatch()\n    const count = useSelector((state) => state.toolkit.count)\n    const todos = useSelector((state) => state.toolkit.todos)\n\n    return (\n        <Flex>\n            <div>{count}</div>\n            <Button onClick={() => dispatch(increment())}>Инкремент</Button>\n            <Button onClick={() => dispatch(decrement())}>Декремент</Button>\n            <Button onClick={() => dispatch(addTodo(prompt()))}>\n                Добавить туду\n            </Button>\n            <Button onClick={() => dispatch(removeLastTodo())}>\n                Удалить последний туду\n            </Button>\n            <Button onClick={() => dispatch(addAsyncTodo())}>\n                Добавить асинк туду\n            </Button>\n            {todos.map((todo) => (\n                <div>{todo}</div>\n            ))}\n        </Flex>\n    )\n}\n\nexport default Homepage\n","export const slotsRegular = [\n    '00:00',\n    '01:00',\n    '02:00',\n    '03:00',\n    '04:00',\n    '05:00',\n    '06:00',\n    '07:00',\n    '08:00',\n    '09:00',\n    '10:00',\n    '11:00',\n    '12:00',\n    '13:00',\n    '14:00',\n    '15:00',\n    '16:00',\n    '17:00',\n    '18:00',\n    '19:00',\n    '20:00',\n    '21:00',\n    '22:00',\n    '23:00',\n]\n\nexport const slotsFlexible = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react'\n\nconst OnionSaturationCard = (props) => {\n    return (\n        <div>\n            <h1>{props.city}</h1>\n            <div>\n                {props.saturation.map((saturationAtSlotData, id) => (\n                    <div key={id}>{saturationAtSlotData}</div>\n                ))}\n            </div>\n            <div>{props.difference}</div>\n            <div>{props.reason_saturation}</div>\n            {/*<div>Заранее расширяли слоты - постепенно заполнялись.</div>*/}\n            {/*<div>Заранее расширяли слоты - слабо заполнялись.</div>*/}\n            <div>\n                <span>{props.area}</span>\n                <span>{props.level_sat}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default OnionSaturationCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.span`\n\ttext-align: ${({ align }) => align || 'center'};\n\tmargin: ${({ margin }) => margin || '0'};\n\tcolor: ${({ color }) => color || 'white'};\n\ttext-decoration: ${({ decoration }) => decoration || 'none'};\n\tfont-size: ${({ fSize }) => fSize || '2em'};\n\tfont-weight: ${({ fWeight }) => fWeight || '300'};\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tmargin: ${({ margin }) => margin || '0'};\n\ttext-align: ${({ textAlign }) => textAlign || 'start'};\n\tcursor: ${({ cursor }) => cursor || ''};\n\tdisplay: ${({ display }) => display || 'inline'};\n\ttext-decoration: ${({tDecoration}) => tDecoration || 'none'};\n\tbackground-color: ${({bColor}) => bColor || 'transparent'};\n`\n\nexport default function Title(props) {\n\treturn <StyledTitle {...props} />\n}\n","export const SelectStyle = {\n    background: 'none',\n    borderRadius: '10px',\n    color: 'white',\n    padding: '8px',\n    appearance: 'none',\n    width: '3.5rem',\n    border: '3px solid white',\n    outline: 'none',\n    margin: '0 10px'\n}","import axios from 'axios'\nconst ACCESS_TOKEN = '0a4fcce5995c4f7478bd0b891b265a73d0289ba4'\nconst apiURL = 'http://www.aideindustries.tk'\n\nexport const aideApiAxios = axios.create({\n    baseURL: apiURL,\n    headers: {\n        Authorization: `Token ${ACCESS_TOKEN}`,\n    },\n})\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../axios/axios'\n\nexport const axiosGetSaturatedOnionsByPeriod = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionsByPeriod',\n    async function (\n        { periodStart, periodEnd },\n        { getState, dispatch, rejectWithValue }\n    ) {\n        try {\n            const saturatedOnions = await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=true`\n            )\n            if (saturatedOnions.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            return saturatedOnions.data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue, dispatch }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            const onionReportObject = saturatedOnionData.data\n            console.log(JSON.parse(onionReportObject))\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            return JSON.parse(onionReportObject)\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'saturation-period/getSaturationReport',\n    async function ({ periodStart, periodEnd }, { dispatch, getState }) {\n        await dispatch(\n            axiosGetSaturatedOnionsByPeriod({ periodStart, periodEnd })\n        )\n        await dispatch(getUniqueSaturatedOnionCodes())\n\n        const saturatedUniqueOnionCodesArray =\n            getState().saturationPeriodReport.saturatedUniqueOnionCodesArray\n        const periodReport = await Promise.all(\n            saturatedUniqueOnionCodesArray.map(async (onionCode) => {\n                console.log(onionCode)\n                await dispatch(\n                    axiosGetSaturatedOnionAnalyseObject({\n                        onionCode,\n                        periodStart,\n                        periodEnd,\n                    })\n                )\n                return getState().saturationPeriodReport.onionReportObject\n            })\n        )\n        console.log()\n        console.log(periodReport)\n        return periodReport\n    }\n)\n// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nconst saturationPeriodReportSlice = createSlice({\n    name: 'saturation-period',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '00',\n        periodEnd: '01',\n        saturatedOnionsObjectsArray: [],\n        saturatedUniqueOnionCodesArray: [],\n        onionReportObject: {},\n        periodReport: [\n            {\n                city: '',\n                difference: '',\n                reason_saturation: '',\n                area: '',\n                saturation: [''],\n                level_saturation: ' ',\n            },\n        ],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            console.log(action.payload)\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state) {\n            const allSaturatedOnionCodes =\n                state.saturatedOnionsObjectsArray.reduce((accum, onion) => {\n                    if (!accum.some((obj) => obj.city === onion.city)) {\n                        accum.push(onion.city)\n                    }\n                    return accum\n                }, [])\n\n            state.saturatedUniqueOnionCodesArray =\n                allSaturatedOnionCodes.filter(\n                    (onionCode, index) =>\n                        allSaturatedOnionCodes.indexOf(onionCode) === index\n                )\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.saturationPeriodReport.push(action.payload)\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionsByPeriod.fulfilled]: (state, action) => {\n            state.status = 'resolved'\n            state.saturatedOnionsObjectsArray = action.payload\n        },\n        [axiosGetSaturatedOnionsByPeriod.rejected]: setError,\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            state.status = 'resolved'\n            state.onionReportObject = action.payload\n        },\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state, action) => {\n            state.status = 'resolved'\n            state.periodReport = action.payload\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const { setPeriodOfReport, getUniqueSaturatedOnionCodes } =\n    saturationPeriodReportSlice.actions\n\nexport default saturationPeriodReportSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport { aideApiAxios } from '../../../../axios/axios'\nimport {\n    axiosGetSaturatedOnionAnalyseObject,\n    getSaturationReport,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/saturationPeriodReportSlice'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function SaturationByPeriodPage() {\n    const stateReport = [\n        {\n            city: '',\n            difference: '',\n            reason_saturation: '',\n            area: '',\n            saturation: [''],\n            level_saturation: ' ',\n        },\n    ]\n    const dispatch = useDispatch()\n    const { status, error, periodStart, periodEnd, periodReport } = useSelector(\n        (state) => state.saturationPeriodReport\n    )\n\n    const [saturationPeriodReport, setSaturationPeriodReport] =\n        useState(stateReport)\n\n    const [sendRequestForReport, setSendRequestForReport] = useState(false)\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    async function getSaturatedOnionsByPeriod(periodStart, periodEnd) {\n        try {\n            return await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=yes`\n            )\n        } catch (error) {\n            console.log('Error блин :', error)\n            return error\n        }\n    }\n\n    async function getOnionSaturationReportObject(\n        onionName,\n        slotStart,\n        slotEnd\n    ) {\n        try {\n            const response = await aideApiAxios.get(\n                `/analysis/${onionName}/${slotStart}/${slotEnd}`\n            )\n            return await JSON.parse(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function getSatReport(slotStart, slotEnd) {\n        const saturatedOnionsFilteredBySlotsPeriod = (\n            await getSaturatedOnionsByPeriod(slotStart, slotEnd)\n        ).data\n        const allCodesOfSaturatedOnionsAtSelectedPeriod =\n            saturatedOnionsFilteredBySlotsPeriod.reduce((accum, onion) => {\n                if (!accum.some((obj) => obj.city === onion.city)) {\n                    accum.push(onion.city)\n                }\n                return accum\n            }, [])\n\n        const uniqueCodesOfSaturatedOnions =\n            await allCodesOfSaturatedOnionsAtSelectedPeriod.filter(\n                (onionCode, index) =>\n                    allCodesOfSaturatedOnionsAtSelectedPeriod.indexOf(\n                        onionCode\n                    ) === index\n            )\n\n        const reportArray = await Promise.all(\n            uniqueCodesOfSaturatedOnions.map(async (name) => {\n                return await getOnionSaturationReportObject(\n                    name,\n                    slotStart,\n                    slotEnd\n                )\n            }, [])\n        )\n        return reportArray\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            const report = await getSatReport(periodStart, periodEnd)\n            if (report.length > 0) {\n                setSaturationPeriodReport(report)\n            }\n        }\n        fetchData()\n    }, [sendRequestForReport])\n\n    useEffect(() => {\n        dispatch(getSaturationReport({ periodStart: '00', periodEnd: '03' }))\n        // dispatch(axiosGetSaturatedOnionAnalyseObject({}))\n    }, [])\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'4em 0 0 0'}>\n            <Flex justify={'center'}>\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={`${periodStart}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={`${periodEnd}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setSendRequestForReport(!sendRequestForReport)\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report by period\n                    </Button>\n                </form>\n            </Flex>\n            <Flex direction={'column'} width={'50%'}>\n                <Title\n                    fWeight={'800'}\n                >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                <div>\n                    {periodReport.map((onion, id) => {\n                        if (onion) {\n                            return <OnionSaturationCard {...onion} key={id} />\n                        }\n                    })}\n                </div>\n            </Flex>\n            {status === 'loading' && <h2>Loading...</h2>}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst SNavLink = styled(NavLink)`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ text_align }) => text_align || 'start'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ background_color }) => background_color || 'violet'};\n    border-radius: ${({ radius }) => radius || '0px'};\n    border: ${({ border }) => border || ''};\n    &.active {\n        background-color: blueviolet;\n    }\n`\n\nconst StyledNavLink = (props) => {\n    return (\n        <SNavLink to={props.to} {...props}>\n            {props.text}\n        </SNavLink>\n    )\n}\n\nexport default StyledNavLink\n","import React, { useEffect, useState } from 'react'\nimport { aideApiAxios } from '../../../../axios/axios'\nimport Flex from '../../../StyledComponents/Flex'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport { slotsRegular } from '../../slots'\nimport Button from '../../../StyledComponents/Button'\nimport Title from '../../../StyledComponents/Title'\nimport OnionSaturationCard from '../OnionSaturationCard'\n\nconst SaturationByOnionsPage = () => {\n    const stateReport = [\n        {\n            city: '',\n            difference: '',\n            reason_saturation: '',\n            area: '',\n            saturation: [''],\n            level_saturation: ' ',\n        },\n    ]\n\n    const [startPeriodSlotSelected, setStartPeriodSlotSelected] =\n        useState('18:00')\n    const [endPeriodSlotSelected, setEndPeriodSlotSelected] = useState('21:00')\n    const [saturationPeriodReport, setSaturationPeriodReport] =\n        useState(stateReport)\n    const [sendRequestForReport, setSendRequestForReport] = useState(false)\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            setStartPeriodSlotSelected(e.target.value)\n        } else if (name === 'slotEndPeriodSelector') {\n            setEndPeriodSlotSelected(e.target.value)\n        }\n    }\n\n    async function getSaturatedOnionsByPeriod(periodStart, periodEnd) {\n        try {\n            return await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=yes`\n            )\n        } catch (error) {\n            console.log('Error блин :', error)\n            return error\n        }\n    }\n\n    async function getOnionSaturationReportObject(\n        onionName,\n        slotStart,\n        slotEnd\n    ) {\n        try {\n            const response = await aideApiAxios.get(\n                `/analysis/${onionName}/${slotStart}/${slotEnd}`\n            )\n            // console.log(JSON.parse(response.data))\n            return await JSON.parse(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function getSatReport(slotStart, slotEnd) {\n        const slotStartHour = slotStart.substr(0, 2)\n        const slotEndHour = slotEnd.substr(0, 2)\n\n        const saturatedOnionsFilteredBySlotsPeriod = (\n            await getSaturatedOnionsByPeriod(slotStartHour, slotEndHour)\n        ).data\n        // console.log(saturatedOnionsFilteredBySlotsPeriod)\n        const allCodesOfSaturatedOnionsAtSelectedPeriod =\n            saturatedOnionsFilteredBySlotsPeriod.reduce((accum, onion) => {\n                if (!accum.some((obj) => obj.city === onion.city)) {\n                    accum.push(onion.city)\n                }\n                return accum\n            }, [])\n\n        const uniqueCodesOfSaturatedOnions =\n            await allCodesOfSaturatedOnionsAtSelectedPeriod.filter(\n                (onionCode, index) =>\n                    allCodesOfSaturatedOnionsAtSelectedPeriod.indexOf(\n                        onionCode\n                    ) === index\n            )\n\n        const reportArray = await Promise.all(\n            uniqueCodesOfSaturatedOnions.map(async (name) => {\n                return await getOnionSaturationReportObject(\n                    name,\n                    slotStartHour,\n                    slotEndHour\n                )\n            }, [])\n        )\n        return reportArray\n    }\n\n    useEffect(() => {\n        async function fetchData() {\n            const report = await getSatReport(\n                startPeriodSlotSelected,\n                endPeriodSlotSelected\n            )\n            if (report.length > 0) {\n                setSaturationPeriodReport(report)\n            }\n        }\n        fetchData()\n    }, [sendRequestForReport])\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'4em 0 0 0'}>\n            <Flex justify={'center'}>\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={startPeriodSlotSelected}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={endPeriodSlotSelected}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setSendRequestForReport(!sendRequestForReport)\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report\n                    </Button>\n                </form>\n            </Flex>\n            <Flex direction={'column'} width={'50%'}>\n                <Title\n                    fWeight={'800'}\n                >{`Апдейт по сатурации с ${startPeriodSlotSelected} по ${endPeriodSlotSelected}`}</Title>\n                <div>\n                    {saturationPeriodReport.length > 0 ? (\n                        saturationPeriodReport.map((onion, id) => {\n                            if (onion) {\n                                return (\n                                    <OnionSaturationCard {...onion} key={id} />\n                                )\n                            }\n                        })\n                    ) : (\n                        <Title>\n                            {' '}\n                            🦾 Онионов с сатурацией с {\n                                startPeriodSlotSelected\n                            }{' '}\n                            по {endPeriodSlotSelected} не было 🦾\n                        </Title>\n                    )}\n                </div>\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default SaturationByOnionsPage\n","import React from 'react'\nimport SaturationByPeriodPage from './SaturationReport/SaturationByperiodPage/SaturationByPeriodPage'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport Flex from '../StyledComponents/Flex'\nimport { stylesForStyledLink } from '../Navbar/Navbar'\nimport SaturationByOnionsPage from './SaturationReport/SaturationByOnionsPage/SaturationByOnionsPage'\n\nconst Reports = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex>\n            <StyledNavLink\n                exact\n                to={`${url}`}\n                {...stylesForStyledLink}\n                text={'Onions'}\n            />\n            <StyledNavLink\n                to={`${url}/period`}\n                {...stylesForStyledLink}\n                text={'Period'}\n            />\n\n            <Route exact path={`${path}`} component={SaturationByOnionsPage} />\n            <Route path={`${path}/period`} component={SaturationByPeriodPage} />\n        </Flex>\n    )\n}\n\nexport default Reports\n","import React from 'react';\n\nconst WeatherControlPage = () => {\n    return (\n        <div>\n            Camcorders with weather at onions\n        </div>\n    );\n};\n\nexport default WeatherControlPage;","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n\tcolor: ${({ color }) => color || 'white'};\n\ttext-decoration: ${({ decoration }) => decoration || 'none'};\n\tfont-size: ${({ fSize }) => fSize || '1em'};\n\tfont-weight: ${({ fWeight }) => fWeight || '300'};\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tmargin: ${({ margin }) => margin || '0'};\n\ttext-align: ${({ textAlign }) => textAlign || 'start'};\n\tcursor: ${({ cursor }) => cursor || ''};\n\tdisplay: ${({ display }) => display || 'inline'};\n\ttext-decoration: ${({tDecoration}) => tDecoration || 'none'};\n\tbackground-color: ${({bColor}) => bColor || 'transparent'};\n`\n\nexport default function TextContent(props) {\n\treturn <StyledSpan {...props} />\n}\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport TextContent from '../StyledComponents/TextContent'\n\nexport default function Page404() {\n    return (\n        <Flex margin=\"auto\" justify=\"center\" align=\"center\">\n            <TextContent textAlign='center' margin='20% auto' fSize=\"4em\">😞 😞 😞 404: Page not found 😞😞😞</TextContent>\n        </Flex>\n    )\n}\n","import React from 'react';\n\nconst ChartOfBigOnions = () => {\n    return (\n        <div>\n            Big onions chart\n        </div>\n    );\n};\n\nexport default ChartOfBigOnions;","import React from 'react';\n\nconst ChartOfSmallOnions = () => {\n    return (\n        <div>\n            Samll onion chart\n        </div>\n    );\n};\n\nexport default ChartOfSmallOnions;","import React from 'react';\nimport ChartOfBigOnions from \"./ChartOfBigOnions\";\nimport ChartOfSmallOnions from \"./ChartOfSmallOnions\";\n\nconst ChartsPage = () => {\n    return (\n        <div>\n            Charts page\n            <ChartOfBigOnions />\n            <ChartOfSmallOnions/>\n        </div>\n    );\n};\n\nexport default ChartsPage;","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Homepage from '../Homepage/Homepage'\nimport Reports from '../Reports/Reports'\nimport WeatherControlPage from '../WeatherControlPage/WeatherControlPage'\nimport Page404 from '../Page404/Page404'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport ChartsPage from '../Reports/Charts/ChartsPage'\n\nexport const stylesForStyledLink = {\n    width: '10%',\n    padding: '9px',\n    radius: '15px',\n    background_color: 'rgb(93,68,165)',\n    border: '3px solid white',\n    text_align: 'center',\n}\n\nconst Navbar = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex direction={'column'}>\n            <Flex\n                height={'30%'}\n                bColor={'rgb(61,45,108)'}\n                padding={'7px 0px'}\n                justify={'space-evenly'}\n                bBorder={'3px dashed white'}\n            >\n                <StyledNavLink\n                    exact\n                    {...stylesForStyledLink}\n                    to={'/Aide/'}\n                    text={'Home'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/charts'}\n                    text={'Charts'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/reports'}\n                    text={'Reports'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/weather'}\n                    text={'Weather'}\n                />\n            </Flex>\n\n            <Switch>\n                <Route exact path={'/Aide/'} component={Homepage} />\n                <Route path={'/Aide/charts'} component={ChartsPage} />\n                <Route path={'/Aide/reports'} component={Reports} />\n                <Route path={'/Aide/weather'} component={WeatherControlPage} />\n                <Route path=\"*\" component={Page404} />\n            </Switch>\n        </Flex>\n    )\n}\n\nexport default Navbar\n","import { createGlobalStyle } from 'styled-components'\nimport Navbar from './components/Navbar/Navbar'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: rgb(61, 45, 108);\n    color: aliceblue;\n    font-family: Sans-Serif;\n  }\n`\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Navbar />\n        </>\n    )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport toolkitSlice from './toolkitSlice'\nimport saturationPeriodReportSlice from './saturationPeriodReportSlice'\n\nconst rootReducer = combineReducers({\n    toolkit: toolkitSlice,\n    saturationPeriodReport: saturationPeriodReportSlice,\n})\n\nexport const store = configureStore({\n    reducer: rootReducer,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {Provider} from \"react-redux\";\nimport {store} from \"./toolKitRedux/store\";\n\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
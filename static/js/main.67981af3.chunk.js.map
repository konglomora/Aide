{"version":3,"sources":["components/StyledComponents/Flex.jsx","components/StyledComponents/Button.jsx","toolKitRedux/toolkitSlice.js","components/Homepage/Homepage.jsx","components/Reports/slots.js","components/StyledComponents/Title.jsx","components/Reports/SaturationReport/Cards/OnionSaturationCard.jsx","components/StyledComponents/Select.js","axios/axios.js","axios/private/token.js","components/Reports/saturationReasons.js","toolKitRedux/setStatusFunctions.js","toolKitRedux/report-slices/saturationPeriodReportSlice.js","components/StyledComponents/TextContent.jsx","assets/img/logo.svg","components/StyledComponents/LoaderReact.jsx","components/Reports/SaturationReport/Pages/SaturationByPeriodPage.jsx","components/StyledComponents/StyledLink.jsx","components/Reports/codes.js","toolKitRedux/report-slices/saturationSelectedOnionsSlice.js","components/Reports/SaturationReport/Cards/OnionCodeCard.jsx","components/Reports/SaturationReport/Cards/AreaCodesCard.jsx","components/Reports/SaturationReport/Pages/SaturationBySelectedOnionPage.jsx","components/StyledComponents/Input.jsx","toolKitRedux/report-slices/weatherActionPlanSlice.js","components/Reports/WeatherActionPlanReport/Cards/OnionPrecipitationCard.jsx","axios/private/adminSlotsLink.js","components/Reports/WeatherActionPlanReport/Pages/WeatherActionPlan.jsx","components/Reports/Reports.jsx","components/WeatherControlPage/WeatherControlPage.jsx","components/Page404/Page404.jsx","components/Charts/ChartOfBigOnions.jsx","components/Charts/ChartOfSmallOnions.jsx","components/Charts/ChartsPage.jsx","components/Navbar/Navbar.jsx","assets/img/Background.svg","App.jsx","toolKitRedux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","wrap","justify","margin","width","height","mHeight","padding","bColor","background","bFilter","tDecoration","bBorder","tBorder","lBorder","rBorder","border","bRadius","cursor","position","top","left","right","bottom","Flex","StyledButton","button","bcolor","color","bradius","Button","type","toolkitSlice","createSlice","name","initialState","count","todos","reducers","increment","state","console","log","decrement","addTodo","action","push","payload","removeLastTodo","pop","actions","Homepage","useDispatch","useSelector","toolkit","slotsRegular","StyledTitle","span","decoration","fSize","fWeight","display","Title","OnionSaturationCard","city","saturation","map","saturationAtSlotData","id","difference","forAutoReport","reason_saturation","slotFilledStr","area","level_sat","SelectStyle","borderRadius","appearance","outline","aideApiAxios","axios","create","baseURL","headers","Authorization","lessCouriers","moreOrders","lessCouriersAndMoreOrders","hasSaturationButBetterThanD7","setError","status","error","setLoading","axiosGetSaturatedOnionsByPeriod","createAsyncThunk","a","periodStart","periodEnd","rejectWithValue","get","saturatedOnions","statusText","Error","data","message","axiosGetSaturatedOnionAnalyseObject","onionCode","dispatch","saturatedOnionData","JSON","parse","onionReportObject","charAt","getSaturationReport","getState","clearReport","getUniqueSaturatedOnionCodes","saturatedUniqueSortedOnionCodesArray","saturationPeriodReport","Promise","all","saturationReport","kyiv_report","mio_report","small_report","sortReportBySaturationReasons","saturationPeriodReportSlice","sortedReportBySaturationReason","lessCouriersSaturatedOnions","moreOrdersSaturatedOnions","lessCouriersAndMoreOrdersSaturatedOnions","saturatedOnionsObjectsArray","periodReport","setPeriodOfReport","allSaturatedOnionCodes","reduce","accum","onion","some","obj","uniqueOnionCodes","filter","index","indexOf","sort","addOnionObjToPeriodReport","saturationReason","extraReducers","fulfilled","rejected","isKyiv","isMio","pending","StyledSpan","textAlign","TextContent","LoaderReact","animate","motion","img","src","logo","alt","transition","duration","repeat","Infinity","repeatDelay","repeatType","ease","SaturationByPeriodPage","selectChangeHandler","e","target","value","substr","style","onChange","slot","onClick","preventDefault","length","onionReport","key","rotate","SNavLink","NavLink","text_align","background_color","radius","StyledNavLink","to","text","kyivCodes","mioCodes","smallCodes","onionCodesArray","selectedOnionsReport","selectedOnionsReportSlice","areaCodes","selectedOnionCodes","selectedOnionsByUser","selectOnion","codesArray","code","deselectOnion","includes","indexOfCodeAtInitialArray","splice","OnionCode","AreaCodesCard","cardTitle","codes","React","memo","onionCodesSelectHandler","outerText","title","StyledInput","input","borderColor","Input","placeholder","axiosGetPrecipitatedOnionsByDay","tomorrow","afterTomorrow","tomorrowPrecipitatedOnions","afterTomorrowPrecipitatedOnions","dataForTomorrow","dataForAfterTomorrow","precipitatedOnions","axiosGetPrecipitatedOnionPlanObject","precipitatedOnionData","getWeatherActionPlan","clearPlan","getUniquePrecipitatedOnionCodes","weatherActionPlan","uniquePrecipitatedPercentageCodes","tomorrowUniqueCodes","afterTomorrowUniqueCodes","afterTomorrowReport","tomorrowReport","weatherActionPlanSlice","period","tomorrowDate","moment","add","format","afterTomorrowDate","lastTimeUpdateOfTomorrow","lastTimeUpdateOfAfterTomorrow","precipitatedOnionsObjects","actionPlan","tomorrowPlan","kyiv_plan","mio_plan","small_plan","afterTomorrowPlan","setDaysOfPlan","uniqueTomorrowPrecipitatedOnionCodes","uniqueAfterTomorrowPrecipitatedOnionCodes","current","last_time_update","OnionPrecipitationCard","phrase","href","WeatherActionPlan","tomorrowPlanOnionCards","Object","keys","forEach","plan","planObject","nextId","afterTomorrowPlanOnionCards","dayCheckBoxChangeHandler","checked","stylesForStyledLink","Reports","useRouteMatch","path","url","exact","component","SaturationBySelectedOnionPage","WeatherControlPage","Page404","ChartOfBigOnions","ChartOfSmallOnions","ChartsPage","Navbar","GlobalStyle","createGlobalStyle","App","persistConfig","storage","whitelist","rootReducer","combineReducers","saturationSelectedOnionsSlice","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.67981af3.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.direction || 'row'};\n    align-items: ${({ align }) => align || 'stretch'};\n    flex-wrap: ${({ wrap }) => wrap || ''};\n    justify-content: ${({ justify }) => justify || 'stretch'};\n    margin: ${({ margin }) => margin || '0'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    min-height: ${({ mHeight }) => mHeight || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n    background: ${({ background }) => background || ''};\n    backdrop-filter: ${({ bFilter }) => bFilter || ''};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    border-bottom: ${({ bBorder }) => bBorder || ''};\n    border-top: ${({ tBorder }) => tBorder || ''};\n    border-left: ${({ lBorder }) => lBorder || ''};\n    border-right: ${({ rBorder }) => rBorder || ''};\n    border: ${({ border }) => border || ''};\n    border-radius: ${({ bRadius }) => bRadius || ''};\n    cursor: ${({ cursor }) => cursor || ''};\n    position: ${({ position }) => position || ''};\n    top: ${({ top }) => top || ''};\n    left: ${({ left }) => left || ''};\n    right: ${({ right }) => right || ''};\n    bottom: ${({ bottom }) => bottom || ''};\n`\n\nexport default function Flex(props) {\n    return <StyledFlex {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    width: ${({ width }) => width || '100px'};\n    background-color: ${({ bcolor }) => bcolor || 'rgb(0, 0 ,0)'};\n    color: ${({ color }) => color || 'white'};\n    font-weight: 500;\n    padding: ${({ padding }) => padding || '7px'};\n    border-radius: ${({ bradius }) => bradius || '5px'};\n    border: ${({ border }) => border || '2px solid white'};\n    cursor: pointer;\n`\n\nexport default function Button(props) {\n    return <StyledButton type={props.type} {...props} />\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const addAsyncTodo = () => {\n    return async (dispatch) => {\n        setTimeout(() => {\n            dispatch(addTodo('ASYNC TODO'))\n        }, 2000)\n    }\n}\n\nconst toolkitSlice = createSlice({\n    name: 'toolkit',\n    initialState: {\n        count: 21,\n        todos: ['Умыться', 'Покушать', 'Уснуть'],\n    },\n    reducers: {\n        increment(state) {\n            console.log(state.count)\n            state.count = state.count + 1\n        },\n        decrement(state) {\n            state.count = state.count - 1\n        },\n        addTodo(state, action) {\n            state.todos.push(action.payload)\n        },\n        removeLastTodo(state) {\n            state.todos.pop()\n        },\n    },\n})\n\nexport const { increment, decrement, addTodo, removeLastTodo } =\n    toolkitSlice.actions\nexport default toolkitSlice.reducer\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport Button from '../StyledComponents/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    addAsyncTodo,\n    addTodo,\n    decrement,\n    increment,\n    removeLastTodo,\n} from '../../toolKitRedux/toolkitSlice'\n\nconst Homepage = () => {\n    const dispatch = useDispatch()\n    const count = useSelector((state) => state.toolkit.count)\n    const todos = useSelector((state) => state.toolkit.todos)\n\n    return (\n        <Flex width={'90%'}>\n            {/*<div>{count}</div>*/}\n            {/*<Button onClick={() => dispatch(increment())}>Инкремент</Button>*/}\n            {/*<Button onClick={() => dispatch(decrement())}>Декремент</Button>*/}\n            {/*<Button onClick={() => dispatch(addTodo(prompt()))}>*/}\n            {/*    Добавить туду*/}\n            {/*</Button>*/}\n            {/*<Button onClick={() => dispatch(removeLastTodo())}>*/}\n            {/*    Удалить последний туду*/}\n            {/*</Button>*/}\n            {/*<Button onClick={() => dispatch(addAsyncTodo())}>*/}\n            {/*    Добавить асинк туду*/}\n            {/*</Button>*/}\n            {/*{todos.map((todo) => (*/}\n            {/*    <div>{todo}</div>*/}\n            {/*))}*/}\n        </Flex>\n    )\n}\n\nexport default Homepage\n","export const slotsRegular = [\n    '00:00',\n    '01:00',\n    '02:00',\n    '03:00',\n    '04:00',\n    '05:00',\n    '06:00',\n    '07:00',\n    '08:00',\n    '09:00',\n    '10:00',\n    '11:00',\n    '12:00',\n    '13:00',\n    '14:00',\n    '15:00',\n    '16:00',\n    '17:00',\n    '18:00',\n    '19:00',\n    '20:00',\n    '21:00',\n    '22:00',\n    '23:00',\n]\n\nexport const slotsFlexible = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.span`\n    text-align: ${({ align }) => align || 'center'};\n    margin: ${({ margin }) => margin || '0'};\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '2em'};\n    font-weight: ${({ fWeight }) => fWeight || '300'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    margin: ${({ margin }) => margin || '0'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n`\n\nexport default function Title(props) {\n    return <StyledTitle {...props} />\n}\n","import React from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\n\nconst OnionSaturationCard = (props) => {\n    return (\n        <Flex\n            border={'2px solid white'}\n            bRadius={'15px'}\n            padding={'15px'}\n            margin={'10px'}\n            width={'18%'}\n            mHeight={'100%'}\n            height={' '}\n            bColor={'rgb(24 25 26 / 78%);'}\n        >\n            <div>\n                <Title fWeight={'600'} fSize={'1.5em'}>\n                    {props.city}\n                </Title>\n                <div>\n                    {props.saturation.map((saturationAtSlotData, id) => (\n                        <div key={id}>{saturationAtSlotData}</div>\n                    ))}\n                </div>\n                <div>{props.difference}</div>\n                {props.forAutoReport ? (\n                    ''\n                ) : (\n                    <div>{props.reason_saturation}</div>\n                )}\n                <div>{props.slotFilledStr}</div>\n                <div>\n                    <span>{props.area}</span>\n                    <span>{props.level_sat}</span>\n                </div>\n            </div>\n            <div> </div>\n        </Flex>\n    )\n}\n\nexport default OnionSaturationCard\n","export const SelectStyle = {\n    background: 'none',\n    borderRadius: '10px',\n    color: 'white',\n    padding: '8px',\n    appearance: 'none',\n    width: '3.5rem',\n    border: '3px solid white',\n    outline: 'none',\n    margin: '0 10px'\n}","import axios from 'axios'\nimport { ACCESS_TOKEN2 } from './private/token'\nconst apiURL = 'https://www.aideindustries.tk'\n\nexport const aideApiAxios = axios.create({\n    baseURL: apiURL,\n    headers: {\n        Authorization: `Token ${ACCESS_TOKEN2}`,\n    },\n})\n","export const ACCESS_TOKEN = '0a4fcce5995c4f7478bd0b891b265a73d0289ba4'\nexport const ACCESS_TOKEN2 = 'ace68d53680920b040d5e419b048c4d99be6d65f'\n","export const lessCouriers = 'lessCouriersSaturatedOnions'\nexport const moreOrders = 'moreOrdersSaturatedOnions'\nexport const lessCouriersAndMoreOrders =\n    'lessCouriersAndMoreOrdersSaturatedOnions'\nexport const hasSaturationButBetterThanD7 = 'hasSaturationButBetterThanD7'\n","// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nexport { setError, setLoading }\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport {\n    hasSaturationButBetterThanD7,\n    lessCouriers,\n    lessCouriersAndMoreOrders,\n    moreOrders,\n} from '../../components/Reports/saturationReasons'\nimport { setError, setLoading } from '../setStatusFunctions'\n\nexport const axiosGetSaturatedOnionsByPeriod = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionsByPeriod',\n    async function ({ periodStart, periodEnd }, { rejectWithValue }) {\n        try {\n            const saturatedOnions = await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=yes`\n            )\n            if (saturatedOnions.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            return saturatedOnions.data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue, dispatch }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n\n            onionReportObject['forAutoReport'] = true\n\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n            // console.log(onionReportObject.reason_saturation)\n            if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации - уменьшилось количество активных курьеров в разрезе с прошлой неделей. '\n            ) {\n                onionReportObject['saturationReason'] = lessCouriers\n            } else if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации -  прирост количества заказов в разрезе с прошлой неделей.'\n            ) {\n                onionReportObject['saturationReason'] = moreOrders\n            } else if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации - прирост заказов и уменьшилось количество активных курьеров в сравнении с прошлой неделей. '\n            ) {\n                onionReportObject['saturationReason'] =\n                    lessCouriersAndMoreOrders\n            } else {\n                onionReportObject['saturationReason'] =\n                    hasSaturationButBetterThanD7\n            }\n\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'saturation-period/getSaturationReport',\n    async function ({ periodStart, periodEnd }, { dispatch, getState }) {\n        await dispatch(clearReport())\n        await dispatch(\n            axiosGetSaturatedOnionsByPeriod({ periodStart, periodEnd })\n        )\n        await dispatch(getUniqueSaturatedOnionCodes())\n\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().saturationPeriodReport\n                .saturatedUniqueSortedOnionCodesArray\n        const getAllAnalyseObjectsAction = await Promise.all(\n            saturatedUniqueSortedOnionCodesArray.map(async (onionCode) => {\n                await dispatch(\n                    axiosGetSaturatedOnionAnalyseObject({\n                        onionCode,\n                        periodStart,\n                        periodEnd,\n                    })\n                )\n            })\n        )\n\n        const saturationReport = [\n            ...getState().saturationPeriodReport.kyiv_report,\n            ...getState().saturationPeriodReport.mio_report,\n            ...getState().saturationPeriodReport.small_report,\n        ]\n        await dispatch(\n            sortReportBySaturationReasons({\n                saturationReport,\n            })\n        )\n    }\n)\n\nconst saturationPeriodReportSlice = createSlice({\n    name: 'saturation-period',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        sortedReportBySaturationReason: {\n            lessCouriersSaturatedOnions: [],\n            moreOrdersSaturatedOnions: [],\n            lessCouriersAndMoreOrdersSaturatedOnions: [],\n            hasSaturationButBetterThanD7: [],\n        },\n        saturatedOnionsObjectsArray: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state) {\n            const allSaturatedOnionCodes =\n                state.saturatedOnionsObjectsArray.reduce((accum, onion) => {\n                    if (!accum.some((obj) => obj.city === onion.city)) {\n                        accum.push(onion.city)\n                    }\n                    return accum\n                }, [])\n            const uniqueOnionCodes = allSaturatedOnionCodes.filter(\n                (onionCode, index) =>\n                    allSaturatedOnionCodes.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n            state.status = 'loading'\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        sortReportBySaturationReasons(state, action) {\n            const { saturationReport } = action.payload\n\n            saturationReport.map((onion) => {\n                if (onion.saturationReason === lessCouriers) {\n                    state.sortedReportBySaturationReason.lessCouriersSaturatedOnions.push(\n                        onion\n                    )\n                } else if (onion.saturationReason === moreOrders) {\n                    state.sortedReportBySaturationReason.moreOrdersSaturatedOnions.push(\n                        onion\n                    )\n                } else if (\n                    onion.saturationReason === lessCouriersAndMoreOrders\n                ) {\n                    state.sortedReportBySaturationReason.lessCouriersAndMoreOrdersSaturatedOnions.push(\n                        onion\n                    )\n                } else if (\n                    onion.saturationReason === hasSaturationButBetterThanD7\n                ) {\n                    state.sortedReportBySaturationReason.hasSaturationButBetterThanD7.push(\n                        onion\n                    )\n                }\n            })\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n            state.sortedReportBySaturationReason.lessCouriersSaturatedOnions =\n                state.sortedReportBySaturationReason.moreOrdersSaturatedOnions =\n                state.sortedReportBySaturationReason.lessCouriersAndMoreOrdersSaturatedOnions =\n                state.sortedReportBySaturationReason.hasSaturationButBetterThanD7 =\n                    []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionsByPeriod.fulfilled]: (state, action) => {\n            // Saving returned data from response that axiosGetSaturatedOnionsByPeriod done\n            state.saturatedOnionsObjectsArray = action.payload\n        },\n        [axiosGetSaturatedOnionsByPeriod.rejected]: setError,\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const isKyiv =\n                action.payload.city === 'KIE' || action.payload.city === 'KYI'\n            const isMio =\n                action.payload.city === 'DNP' ||\n                action.payload.city === 'KHA' ||\n                action.payload.city === 'LVI' ||\n                action.payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(action.payload)\n            } else if (isMio) {\n                state.mio_report.push(action.payload)\n            } else {\n                state.small_report.push(action.payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const {\n    setPeriodOfReport,\n    getUniqueSaturatedOnionCodes,\n    sortReportBySaturationReasons,\n    clearReport,\n} = saturationPeriodReportSlice.actions\n\nexport default saturationPeriodReportSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    font-weight: ${({ fWeight }) => fWeight || '300'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ textAlign }) => textAlign || 'center'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n`\n\nexport default function TextContent(props) {\n    return <StyledSpan {...props} />\n}\n","export default __webpack_public_path__ + \"static/media/logo.18ba0670.svg\";","import React from 'react'\nimport { motion } from 'framer-motion'\nimport logo from './../../assets/img/logo.svg'\nimport Flex from './Flex'\n\nconst LoaderReact = ({ animate }) => {\n    return (\n        <Flex\n            width={'30%'}\n            justify={'center'}\n            align={'center'}\n            margin={'15% 0 0 0'}\n        >\n            <motion.img\n                src={logo}\n                alt={'logo'}\n                // initial={{}}\n                animate={animate}\n                transition={{\n                    duration: 1,\n                    repeat: Infinity,\n                    repeatDelay: 0.2,\n                    repeatType: 'reverse',\n                    ease: 'easeInOut',\n                }}\n            />\n        </Flex>\n    )\n}\n\nexport default LoaderReact\n","import { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    getSaturationReport,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationPeriodReportSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\nimport LoaderReact from '../../../StyledComponents/LoaderReact'\nimport React from 'react'\nimport { motion } from 'framer-motion'\nimport logo from '../../../../assets/img/logo.svg'\n\nexport default function SaturationByPeriodPage() {\n    const dispatch = useDispatch()\n    const { status, error, periodStart, periodEnd } = useSelector(\n        (state) => state.saturationPeriodReport\n    )\n\n    const {\n        lessCouriersSaturatedOnions,\n        moreOrdersSaturatedOnions,\n        lessCouriersAndMoreOrdersSaturatedOnions,\n        hasSaturationButBetterThanD7,\n    } = useSelector(\n        (state) => state.saturationPeriodReport.sortedReportBySaturationReason\n    )\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getSaturationReport({\n                periodStart: periodStart,\n                periodEnd: periodEnd,\n            })\n        )\n    }\n\n    console.log(moreOrdersSaturatedOnions)\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'0em 0 0 0'}>\n            <Flex\n                justify={'center'}\n                padding={'1em 0'}\n                bBorder={'2px solid white'}\n                bFilter={'blur(2px)'}\n            >\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={`${periodStart}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={`${periodEnd}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            sendRequestForReport()\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report\n                    </Button>\n                </form>\n            </Flex>\n\n            <Flex direction={'column'} width={'90%'}>\n                <Flex>\n                    {lessCouriersSaturatedOnions.length > 0 && (\n                        <Flex wrap={'wrap'}>\n                            <Title\n                                margin={'10px 0px'}\n                                fWeight={'700'}\n                            >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                            <div> </div>\n                            <Flex\n                                wrap={'wrap'}\n                                border={'2px solid white'}\n                                justify={'space-evenly'}\n                                align={'stretch'}\n                                padding={'10px'}\n                                bRadius={'10px'}\n                                bFilter={'blur(2px)'}\n                                margin={'10px 0px'}\n                            >\n                                <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                    Уменьшилось количество активных курьеров в\n                                    разрезе с прошлой неделей:\n                                </TextContent>\n                                <div> </div>\n                                {lessCouriersSaturatedOnions.map(\n                                    (onionReport, id) => (\n                                        <OnionSaturationCard\n                                            {...onionReport}\n                                            key={id}\n                                        />\n                                    )\n                                )}\n                            </Flex>\n                        </Flex>\n                    )}\n                </Flex>\n                <Flex>\n                    {moreOrdersSaturatedOnions.length > 0 && (\n                        <Flex\n                            wrap={'wrap'}\n                            border={'2px solid white'}\n                            justify={'space-evenly'}\n                            align={'stretch'}\n                            padding={'10px'}\n                            bRadius={'10px'}\n                            bFilter={'blur(2px)'}\n                            margin={'10px 0px'}\n                        >\n                            <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                Прирост количества заказов в разрезе с прошлой\n                                неделей:\n                            </TextContent>\n                            <div> </div>\n                            {moreOrdersSaturatedOnions.map(\n                                (onionReport, id) => (\n                                    <OnionSaturationCard\n                                        {...onionReport}\n                                        key={id}\n                                    />\n                                )\n                            )}\n                        </Flex>\n                    )}\n                </Flex>\n                <Flex>\n                    {lessCouriersAndMoreOrdersSaturatedOnions.length > 0 && (\n                        <Flex\n                            wrap={'wrap'}\n                            border={'2px solid white'}\n                            justify={'space-evenly'}\n                            align={'stretch'}\n                            padding={'10px'}\n                            bRadius={'10px'}\n                            bFilter={'blur(2px)'}\n                            margin={'10px 0px'}\n                        >\n                            <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                Прирост заказов и уменьшилось количество\n                                активных курьеров в сравнении с прошлой неделей:\n                            </TextContent>\n                            <div> </div>\n                            {lessCouriersAndMoreOrdersSaturatedOnions.map(\n                                (onionReport, id) => (\n                                    <OnionSaturationCard\n                                        {...onionReport}\n                                        key={id}\n                                    />\n                                )\n                            )}\n                        </Flex>\n                    )}\n                </Flex>\n                <Flex>\n                    {hasSaturationButBetterThanD7.length > 0 && (\n                        <Flex\n                            wrap={'wrap'}\n                            border={'2px solid white'}\n                            justify={'space-evenly'}\n                            align={'stretch'}\n                            padding={'10px'}\n                            bRadius={'10px'}\n                            bFilter={'blur(2px)'}\n                            margin={'10px 0px'}\n                        >\n                            <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                Ситуация улучшилась относительно D-7:\n                            </TextContent>\n                            <div> </div>\n                            {hasSaturationButBetterThanD7.map(\n                                (onionReport, id) => (\n                                    <OnionSaturationCard\n                                        {...onionReport}\n                                        key={id}\n                                        forAutoReport={true}\n                                    />\n                                )\n                            )}\n                        </Flex>\n                    )}\n                </Flex>\n            </Flex>\n            {status === null && <LoaderReact />}\n            {status === 'loading' && <LoaderReact animate={{ rotate: 360 }} />}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst SNavLink = styled(NavLink)`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ text_align }) => text_align || 'start'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ background_color }) => background_color || ''};\n    border-radius: ${({ radius }) => radius || '0px'};\n    border: ${({ border }) => border || ''};\n    &.active {\n        color: rgb(186, 143, 255);\n    }\n`\n\nconst StyledNavLink = (props) => {\n    return (\n        <SNavLink to={props.to} {...props}>\n            {props.text}\n        </SNavLink>\n    )\n}\n\nexport default StyledNavLink\n","export const kyivCodes = ['KIE', 'KYI']\nexport const mioCodes = ['DNP', 'KHA', 'LVI', 'ODS']\nexport const smallCodes = [\n    'BRO',\n    'BTA',\n    'CHE',\n    'CHN',\n    'CHK',\n    'IRP',\n    'IVF',\n    'KAM',\n    'KHE',\n    'KHM',\n    'KRK',\n    'KRO',\n    'KRR',\n    'LUT',\n    'MKL',\n    'MPL',\n    'ODE',\n    'POL',\n    'RVN',\n    'SUM',\n    'TNP',\n    'UMA',\n    'UZH',\n    'VNT',\n    'ZHY',\n    'ZPR',\n]\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport { kyivCodes, mioCodes, smallCodes } from '../../components/Reports/codes'\nimport { setError, setLoading } from '../setStatusFunctions'\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'selected-onions/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'selected-onions/getSaturationReport',\n    async function (\n        { onionCodesArray, periodStart, periodEnd },\n        { dispatch, getState }\n    ) {\n        await dispatch(clearReport())\n        await dispatch(getUniqueSaturatedOnionCodes(onionCodesArray))\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().selectedOnionsReport.saturatedUniqueSortedOnionCodesArray\n        const getAllAnaluzeObjectsAction = await Promise.all(\n            saturatedUniqueSortedOnionCodesArray.map(async (onionCode) => {\n                await dispatch(\n                    axiosGetSaturatedOnionAnalyseObject({\n                        onionCode,\n                        periodStart,\n                        periodEnd,\n                    })\n                )\n            })\n        )\n    }\n)\n\nconst selectedOnionsReportSlice = createSlice({\n    name: 'selected-onions',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        areaCodes: [[...kyivCodes], [...mioCodes], [...smallCodes]],\n        selectedOnionCodes: [],\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        selectedOnionsByUser: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state, action) {\n            const { payload } = action\n            const uniqueOnionCodes = payload.filter(\n                (onionCode, index) => payload.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        selectOnion(state, action) {\n            // Удаляем из списка онионов выбранный онион и добавляем в массив который потом передаем для получения репорта\n            state.areaCodes = state.areaCodes.map((codesArray) =>\n                codesArray.filter((code) => code !== action.payload)\n            )\n            state.selectedOnionCodes.push(action.payload)\n        },\n        deselectOnion(state, action) {\n            const onionCode = action.payload\n            state.selectedOnionCodes = state.selectedOnionCodes.filter(\n                (code) => code !== onionCode\n            )\n\n            if (kyivCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = kyivCodes.indexOf(onionCode)\n                state.areaCodes[0].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else if (mioCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = mioCodes.indexOf(onionCode)\n                state.areaCodes[1].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else {\n                const indexOfCodeAtInitialArray = smallCodes.indexOf(onionCode)\n                state.areaCodes[2].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            }\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const { payload } = action\n            const isKyiv = payload.city === 'KIE' || payload.city === 'KYI'\n            const isMio =\n                payload.city === 'DNP' ||\n                payload.city === 'KHA' ||\n                payload.city === 'LVI' ||\n                payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(payload)\n            } else if (isMio) {\n                state.mio_report.push(payload)\n            } else {\n                state.small_report.push(payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.periodReport = [\n                ...state.kyiv_report,\n                ...state.mio_report,\n                ...state.small_report,\n            ]\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const {\n    setPeriodOfReport,\n    getUniqueSaturatedOnionCodes,\n    selectOnion,\n    deselectOnion,\n    clearReport,\n} = selectedOnionsReportSlice.actions\n\nexport default selectedOnionsReportSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\n\nconst OnionCode = ({ code, onClick, value }) => {\n    const backgroundColor = 'transparent'\n    const color = 'white'\n    const border = '3px solid white'\n\n    return (\n        <Flex\n            cursor={'pointer'}\n            border={border}\n            width={'3em'}\n            padding={'3px'}\n            bRadius={'5px'}\n            justify={'space-around'}\n            margin={'5px'}\n            bColor={backgroundColor}\n            onClick={(e) => onClick(e)}\n        >\n            <TextContent fWeight={400} color={color} textAlign={'center'}>\n                {`${code}`}\n            </TextContent>\n        </Flex>\n    )\n}\n\nexport default OnionCode\n","import Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport React from 'react'\nimport OnionCode from './OnionCodeCard'\n\nconst AreaCodesCard = ({ cardTitle, codes, onClick }) => {\n    return (\n        <Flex\n            direction={'column'}\n            width={`80%`}\n            bRadius={'5px'}\n            margin={'8px auto'}\n            padding={'10px'}\n        >\n            <TextContent width={' '} textAlign={'center'}>\n                {cardTitle}\n            </TextContent>\n            <Flex justify={'center'} wrap={'wrap'}>\n                {codes.map((code) => (\n                    <OnionCode key={code} code={code} onClick={onClick} />\n                ))}\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default AreaCodesCard\n","import React, { useEffect, useState } from 'react'\nimport { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    deselectOnion,\n    getSaturationReport,\n    selectOnion,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationSelectedOnionsSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AreaCodesCard from '../Cards/AreaCodesCard'\nimport Loader from 'react-loader-spinner'\nimport LoaderReact from '../../../StyledComponents/LoaderReact'\n\nexport default React.memo(function SaturationBySelectedOnion() {\n    const dispatch = useDispatch()\n    const {\n        status,\n        error,\n        periodStart,\n        periodEnd,\n        kyiv_report,\n        mio_report,\n        small_report,\n        areaCodes,\n        selectedOnionCodes,\n    } = useSelector((state) => state.selectedOnionsReport)\n\n    const saturationReport = [...kyiv_report, ...mio_report, ...small_report]\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    function onionCodesSelectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(selectOnion(onionCode))\n    }\n\n    function onionDeselectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(deselectOnion(onionCode))\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getSaturationReport({\n                onionCodesArray: selectedOnionCodes,\n                periodStart: periodStart,\n                periodEnd: periodEnd,\n            })\n        )\n    }\n\n    return (\n        <Flex direction={'column'}>\n            <Flex\n                width={'95%'}\n                align={'start'}\n                margin={'2em auto'}\n                direction={'column'}\n                border={'2px solid white'}\n                bFilter={'blur(2px)'}\n            >\n                <Flex\n                    direction={'row'}\n                    width={'100%'}\n                    justify={'space-evenly'}\n                    bBorder={'2px dashed white'}\n                >\n                    {areaCodes.map((onionCodesArray, index) => {\n                        const title =\n                            index === 0 ? 'Kyiv' : index === 1 ? 'MIO' : 'Small'\n                        const width = title === 'Small' ? '60%' : '10%'\n                        return (\n                            <AreaCodesCard\n                                width={width}\n                                key={title}\n                                cardTitle={title}\n                                codes={onionCodesArray}\n                                onClick={onionCodesSelectHandler}\n                            />\n                        )\n                    })}\n                </Flex>\n                <AreaCodesCard\n                    cardTitle=\"Selected onions for report\"\n                    codes={selectedOnionCodes}\n                    onClick={onionDeselectHandler}\n                />\n                <Flex\n                    justify={'center'}\n                    tBorder={'2px solid white'}\n                    padding={'15px 0'}\n                >\n                    <form action=\"#\">\n                        <select\n                            style={SelectStyle}\n                            name=\"slotStartPeriodSelector\"\n                            id=\"1\"\n                            value={`${periodStart}:00`}\n                            onChange={(e) => selectChangeHandler(e)}\n                        >\n                            {slotsRegular.map((slot, id) => (\n                                <option value={slot} key={id}>\n                                    {slot}\n                                </option>\n                            ))}\n                        </select>\n                        <select\n                            style={SelectStyle}\n                            name=\"slotEndPeriodSelector\"\n                            id=\"2\"\n                            value={`${periodEnd}:00`}\n                            onChange={(e) => selectChangeHandler(e)}\n                        >\n                            {slotsRegular.map((slot, id) => (\n                                <option value={slot} key={id}>\n                                    {slot}\n                                </option>\n                            ))}\n                        </select>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault()\n                                sendRequestForReport()\n                            }}\n                            bcolor={'black'}\n                            color={'white'}\n                            bradius={'10px'}\n                            border={'3px solid white'}\n                        >\n                            Get report\n                        </Button>\n                    </form>\n                </Flex>\n            </Flex>\n\n            {status === 'resolved' && saturationReport.length > 0 && (\n                <Flex\n                    wrap={'wrap'}\n                    width={'90%'}\n                    border={'2px solid white'}\n                    justify={'space-evenly'}\n                    align={'stretch'}\n                    padding={'10px'}\n                    bRadius={'10px'}\n                    bFilter={'blur(2px)'}\n                    margin={'10px auto'}\n                >\n                    <Title\n                        fWeight={'800'}\n                    >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                    {saturationReport.map((onionReport, id) => {\n                        if (status === 'resolved') {\n                            return (\n                                <OnionSaturationCard\n                                    {...onionReport}\n                                    key={id}\n                                />\n                            )\n                        }\n                    })}\n                </Flex>\n            )}\n            <Flex justify={'center'} align={'center'}>\n                {status === null && <LoaderReact />}\n                {status === 'loading' && (\n                    <LoaderReact animate={{ rotate: 360 }} />\n                )}\n                {error && <h2>An error occurred: {error}</h2>}\n            </Flex>\n        </Flex>\n    )\n})\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n    height: 2em;\n    width: ${(props) => props.width || '100px'};\n    padding: 20px 10px;\n    margin: ${({ margin }) => margin || '0'};\n    border: 1px solid white;\n    border-color: ${({ borderColor }) => borderColor};\n    background-color: ${({ background }) => background || 'transparent'};\n    color: ${({ color }) => color || 'white'};\n    border-radius: 2px;\n    &:hover,\n    &:focus {\n        outline: none;\n    }\n`\n\nexport default function Input(props) {\n    return (\n        <StyledInput\n            {...props}\n            type={props.type}\n            placeholder={props.placeholder}\n        />\n    )\n}\n","import { createAsyncThunk, createSlice, current } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport { setError, setLoading } from '../setStatusFunctions'\nimport moment from 'moment'\n\nexport const axiosGetPrecipitatedOnionsByDay = createAsyncThunk(\n    'weather-action-plan/axiosGetPrecipitatedOnionsByDay',\n    async function ({ tomorrow, afterTomorrow }, { rejectWithValue }) {\n        if (tomorrow && afterTomorrow) {\n            try {\n                const tomorrowPrecipitatedOnions = await aideApiAxios.get(\n                    `weather/filter?tomorrow=yes&prep=low`\n                )\n                const afterTomorrowPrecipitatedOnions = await aideApiAxios.get(\n                    `weather/filter?nex_day=yes&prep=low`\n                )\n                if (\n                    tomorrowPrecipitatedOnions.statusText !== 'OK' ||\n                    afterTomorrowPrecipitatedOnions.statusText !== 'OK'\n                ) {\n                    throw new Error('Error from server came up!')\n                }\n\n                return {\n                    dataForTomorrow: tomorrowPrecipitatedOnions.data,\n                    dataForAfterTomorrow: afterTomorrowPrecipitatedOnions.data,\n                    tomorrow: tomorrow,\n                    afterTomorrow: afterTomorrow,\n                }\n            } catch (error) {\n                return rejectWithValue(error.message)\n            }\n        } else if (tomorrow && !afterTomorrow) {\n            try {\n                const precipitatedOnions = await aideApiAxios.get(\n                    `weather/filter?tomorrow=yes&prep=low`\n                )\n                if (precipitatedOnions.statusText !== 'OK') {\n                    throw new Error('Error from server came up!')\n                }\n                return {\n                    data: precipitatedOnions.data,\n                    tomorrow: tomorrow,\n                    afterTomorrow: afterTomorrow,\n                }\n            } catch (error) {\n                return rejectWithValue(error.message)\n            }\n        } else if (afterTomorrow && !tomorrow) {\n            try {\n                const precipitatedOnions = await aideApiAxios.get(\n                    `weather/filter?nex_day=yes&prep=low`\n                )\n                if (precipitatedOnions.statusText !== 'OK') {\n                    throw new Error('Error from server came up!')\n                }\n                return {\n                    data: precipitatedOnions.data,\n                    tomorrow: tomorrow,\n                    afterTomorrow: afterTomorrow,\n                }\n            } catch (error) {\n                return rejectWithValue(error.message)\n            }\n        } else if (!tomorrow && !afterTomorrow) {\n            return { tomorrow: tomorrow, afterTomorrow: afterTomorrow }\n        }\n    }\n)\n\nexport const axiosGetPrecipitatedOnionPlanObject = createAsyncThunk(\n    'weather-action-plan/axiosGetPrecipitatedOnionPlanObject',\n    async function (\n        { onionCode, tomorrow, afterTomorrow },\n        { rejectWithValue }\n    ) {\n        if (tomorrow) {\n            try {\n                const precipitatedOnionData = await aideApiAxios.get(\n                    `weather/report/${onionCode}?tomorrow=yes`\n                )\n                if (precipitatedOnionData.statusText !== 'OK') {\n                    throw new Error('Error from server came up!')\n                }\n                const data = await JSON.parse(precipitatedOnionData.data)\n                return {\n                    precipitatedOnionData: data,\n                    tomorrow: tomorrow,\n                    afterTomorrow: afterTomorrow,\n                }\n            } catch (error) {\n                return rejectWithValue(error)\n            }\n        } else if (afterTomorrow) {\n            try {\n                const precipitatedOnionData = await aideApiAxios.get(\n                    `weather/report/${onionCode}?next_day=yes`\n                )\n                if (precipitatedOnionData.statusText !== 'OK') {\n                    throw new Error('Error from server came up!')\n                }\n                const data = await JSON.parse(precipitatedOnionData.data)\n                return {\n                    precipitatedOnionData: data,\n                    tomorrow: tomorrow,\n                    afterTomorrow: afterTomorrow,\n                }\n            } catch (error) {\n                return rejectWithValue(error)\n            }\n        }\n    }\n)\n\nexport const getWeatherActionPlan = createAsyncThunk(\n    'weather-action-plan/getWeatherActionPlan',\n    async function ({ tomorrow, afterTomorrow }, { dispatch, getState }) {\n        await dispatch(clearPlan())\n\n        await dispatch(\n            axiosGetPrecipitatedOnionsByDay({ tomorrow, afterTomorrow })\n        )\n        await dispatch(getUniquePrecipitatedOnionCodes())\n        const { tomorrowUniqueCodes, afterTomorrowUniqueCodes } =\n            getState().weatherActionPlan.uniquePrecipitatedPercentageCodes\n\n        if (tomorrowUniqueCodes.length > 0) {\n            const getActionPlanForAllCodes = await Promise.all(\n                tomorrowUniqueCodes.map(async (onionCode) => {\n                    const afterTomorrowReport = false\n                    await dispatch(\n                        axiosGetPrecipitatedOnionPlanObject({\n                            onionCode,\n                            tomorrow,\n                            afterTomorrowReport,\n                        })\n                    )\n                })\n            )\n        }\n\n        if (afterTomorrowUniqueCodes.length > 0) {\n            const getActionPlanForAllCodes = await Promise.all(\n                afterTomorrowUniqueCodes.map(async (onionCode) => {\n                    const tomorrowReport = false\n                    await dispatch(\n                        axiosGetPrecipitatedOnionPlanObject({\n                            onionCode,\n                            tomorrowReport,\n                            afterTomorrow,\n                        })\n                    )\n                })\n            )\n        }\n    }\n)\n\nconst weatherActionPlanSlice = createSlice({\n    name: 'weather-action-plan',\n    initialState: {\n        status: null,\n        error: null,\n        period: {\n            tomorrow: true,\n            afterTomorrow: true,\n            tomorrowDate: moment().add(1, 'days').format('DD.MM.YYYY'),\n            afterTomorrowDate: moment().add(2, 'days').format('DD.MM.YYYY'),\n            lastTimeUpdateOfTomorrow: '',\n            lastTimeUpdateOfAfterTomorrow: '',\n        },\n        precipitatedOnionsObjects: {\n            tomorrow: [],\n            afterTomorrow: [],\n        },\n        uniquePrecipitatedPercentageCodes: {\n            tomorrowUniqueCodes: [],\n            afterTomorrowUniqueCodes: [],\n        },\n        actionPlan: {\n            tomorrowPlan: {\n                kyiv_plan: [],\n                mio_plan: [],\n                small_plan: [],\n            },\n            afterTomorrowPlan: {\n                kyiv_plan: [],\n                mio_plan: [],\n                small_plan: [],\n            },\n        },\n    },\n    reducers: {\n        setDaysOfPlan(state, action) {\n            state.period.tomorrow = action.payload.tomorrow\n            state.period.afterTomorrow = action.payload.afterTomorrow\n        },\n        clearPlan(state) {\n            state.precipitatedOnionsObjects.tomorrow =\n                state.precipitatedOnionsObjects.afterTomorrow = []\n            state.uniquePrecipitatedPercentageCodes.tomorrowUniqueCodes =\n                state.uniquePrecipitatedPercentageCodes.afterTomorrowUniqueCodes =\n                    []\n            state.actionPlan = {\n                tomorrowPlan: {\n                    kyiv_plan: [],\n                    mio_plan: [],\n                    small_plan: [],\n                },\n                afterTomorrowPlan: {\n                    kyiv_plan: [],\n                    mio_plan: [],\n                    small_plan: [],\n                },\n            }\n        },\n        getUniquePrecipitatedOnionCodes(state) {\n            // console.log(current(state.precipitatedOnionsObjects.tomorrow))\n            // console.log(current(state.precipitatedOnionsObjects.afterTomorrow))\n\n            if (state.precipitatedOnionsObjects.tomorrow.length > 0) {\n                const tomorrowAllPrecipitatedOnionCodes =\n                    state.precipitatedOnionsObjects.tomorrow.reduce(\n                        (accum, onion) => {\n                            if (!accum.some((obj) => obj.city === onion.city)) {\n                                accum.push(onion.city)\n                            }\n                            return accum\n                        },\n                        []\n                    )\n                const uniqueTomorrowPrecipitatedOnionCodes =\n                    tomorrowAllPrecipitatedOnionCodes.filter(\n                        (code, index, codes) => {\n                            return codes.indexOf(code) === index\n                        }\n                    )\n                state.uniquePrecipitatedPercentageCodes.tomorrowUniqueCodes =\n                    uniqueTomorrowPrecipitatedOnionCodes.sort()\n            }\n\n            if (state.precipitatedOnionsObjects.afterTomorrow.length > 0) {\n                const afterTomorrowAllPrecipitatedOnionCodes =\n                    state.precipitatedOnionsObjects.afterTomorrow.reduce(\n                        (accum, onion) => {\n                            if (!accum.some((obj) => obj.city === onion.city)) {\n                                accum.push(onion.city)\n                            }\n                            return accum\n                        },\n                        []\n                    )\n                const uniqueAfterTomorrowPrecipitatedOnionCodes =\n                    afterTomorrowAllPrecipitatedOnionCodes.filter(\n                        (code, index, codes) => {\n                            return codes.indexOf(code) === index\n                        }\n                    )\n\n                state.uniquePrecipitatedPercentageCodes.afterTomorrowUniqueCodes =\n                    uniqueAfterTomorrowPrecipitatedOnionCodes.sort()\n            }\n            console.log(current(state.precipitatedOnionsObjects.tomorrow))\n            console.log(current(state.precipitatedOnionsObjects.afterTomorrow))\n        },\n    },\n    extraReducers: {\n        [axiosGetPrecipitatedOnionsByDay.fulfilled]: (state, action) => {\n            const { tomorrow, afterTomorrow } = action.payload\n\n            if (tomorrow && afterTomorrow) {\n                state.precipitatedOnionsObjects.tomorrow =\n                    action.payload.dataForTomorrow\n\n                state.precipitatedOnionsObjects.afterTomorrow =\n                    action.payload.dataForAfterTomorrow\n            } else if (tomorrow && !afterTomorrow) {\n                state.precipitatedOnionsObjects.tomorrow = action.payload.data\n            } else if (afterTomorrow && !tomorrow) {\n                state.precipitatedOnionsObjects.afterTomorrow =\n                    action.payload.data\n            } else if (!tomorrow && !afterTomorrow) {\n                state.precipitatedOnionsObjects.tomorrow = []\n                state.precipitatedOnionsObjects.afterTomorrow = []\n            }\n        },\n        [axiosGetPrecipitatedOnionsByDay.rejected]: setError,\n        [axiosGetPrecipitatedOnionPlanObject.fulfilled]: (state, action) => {\n            const { tomorrow, afterTomorrow } = action.payload\n            const { city } = action.payload.precipitatedOnionData\n            const precipitatedOnionData = action.payload.precipitatedOnionData\n\n            if (tomorrow) {\n                state.period.lastTimeUpdateOfTomorrow =\n                    precipitatedOnionData.last_time_update\n                if (city === 'KIE' || city === 'KYI') {\n                    state.actionPlan.tomorrowPlan.kyiv_plan.push(\n                        precipitatedOnionData\n                    )\n                } else if (\n                    city === 'DNP' ||\n                    city === 'KHA' ||\n                    city === 'LVI' ||\n                    city === 'ODS'\n                ) {\n                    state.actionPlan.tomorrowPlan.mio_plan.push(\n                        precipitatedOnionData\n                    )\n                } else {\n                    state.actionPlan.tomorrowPlan.small_plan.push(\n                        precipitatedOnionData\n                    )\n                }\n            } else if (afterTomorrow) {\n                console.log(current(precipitatedOnionData.last_time_update))\n                state.period.lastTimeUpdateOfAfterTomorrow =\n                    precipitatedOnionData.last_time_update\n                if (city === 'KIE' || city === 'KYI') {\n                    state.actionPlan.afterTomorrowPlan.kyiv_plan.push(\n                        precipitatedOnionData\n                    )\n                } else if (\n                    city === 'DNP' ||\n                    city === 'KHA' ||\n                    city === 'LVI' ||\n                    city === 'ODS'\n                ) {\n                    state.actionPlan.afterTomorrowPlan.mio_plan.push(\n                        precipitatedOnionData\n                    )\n                } else {\n                    state.actionPlan.afterTomorrowPlan.small_plan.push(\n                        precipitatedOnionData\n                    )\n                }\n            }\n        },\n        [axiosGetPrecipitatedOnionPlanObject.rejected]: setError,\n        [getWeatherActionPlan.pending]: setLoading,\n        [getWeatherActionPlan.fulfilled]: (state) => {\n            state.status = 'resolved'\n        },\n        [getWeatherActionPlan.rejected]: setError,\n    },\n})\n\nexport const { setDaysOfPlan, clearPlan, getUniquePrecipitatedOnionCodes } =\n    weatherActionPlanSlice.actions\n\nexport default weatherActionPlanSlice.reducer\n","import React from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport { onionSlotsLink } from '../../../../axios/private/adminSlotsLink'\n// tomorrow\nconst OnionPrecipitationCard = ({\n    city,\n    last_time_update,\n    phrase,\n    tomorrow,\n    afterTomorrow,\n}) => {\n    return (\n        <Flex\n            border={'2px solid white'}\n            bRadius={'15px'}\n            padding={'15px'}\n            margin={'10px'}\n            width={'30%'}\n            mHeight={'100%'}\n            height={' '}\n            bColor={'rgb(24 25 26 / 78%);'}\n        >\n            <div>\n                <a\n                    href={`${onionSlotsLink}'/'${city}/2021-10-15`}\n                    target={'blank'}\n                >\n                    <Title fWeight={'600'} fSize={'1.5em'}>\n                        {city}\n                    </Title>\n                </a>\n\n                {/*<div>{`Last time update: ${last_time_update} `}</div>*/}\n                <div>{phrase}</div>\n            </div>\n            <div> </div>\n        </Flex>\n    )\n}\n\nexport default OnionPrecipitationCard\n","export const onionSlotsLink =\n    'https://beta-admin.glovoapp.com/couriers/schedule/slots/'\n","import React from 'react'\nimport nextId from 'react-id-generator'\nimport Flex from '../../../StyledComponents/Flex'\nimport Button from '../../../StyledComponents/Button'\nimport Input from '../../../StyledComponents/Input'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    getWeatherActionPlan,\n    setDaysOfPlan,\n} from '../../../../toolKitRedux/report-slices/weatherActionPlanSlice'\nimport LoaderReact from '../../../StyledComponents/LoaderReact'\nimport OnionPrecipitationCard from '../Cards/OnionPrecipitationCard'\nimport Title from '../../../StyledComponents/Title'\nimport TextContent from '../../../StyledComponents/TextContent'\n\nconst WeatherActionPlan = () => {\n    const dispatch = useDispatch()\n    const {\n        status,\n        error,\n        period,\n        uniquePrecipitatedPercentageCodes,\n        actionPlan,\n    } = useSelector((state) => state.weatherActionPlan)\n\n    const {\n        tomorrow,\n        afterTomorrow,\n        tomorrowDate,\n        afterTomorrowDate,\n        lastTimeUpdateOfTomorrow,\n        lastTimeUpdateOfAfterTomorrow,\n    } = period\n    const { tomorrowUniqueCodes, afterTomorrowUniqueCodes } =\n        uniquePrecipitatedPercentageCodes\n    const { tomorrowPlan, afterTomorrowPlan } = actionPlan\n\n    const tomorrowPlanOnionCards = []\n\n    // console.log('tomorrowPlan', tomorrowPlan)\n    // console.log('afterTomorrowPlan', afterTomorrowPlan)\n\n    if (tomorrowUniqueCodes.length > 0) {\n        Object.keys(tomorrowPlan).forEach((plan) => {\n            tomorrow[plan].forEach((planObject, id) => {\n                console.log(planObject)\n                tomorrowPlanOnionCards.push(\n                    <OnionPrecipitationCard {...planObject} key={nextId()} />\n                )\n            })\n        })\n    }\n    // console.log({ tomorrowUniqueCodes }, { afterTomorrowUniqueCodes })\n    const afterTomorrowPlanOnionCards = []\n    if (afterTomorrowUniqueCodes.length > 0) {\n        Object.keys(afterTomorrowPlan).forEach((plan) => {\n            afterTomorrowPlan[plan].forEach((planObject, id) => {\n                afterTomorrowPlanOnionCards.push(\n                    <OnionPrecipitationCard {...planObject} key={nextId()} />\n                )\n            })\n        })\n    }\n\n    function dayCheckBoxChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'tomorrow') {\n            dispatch(\n                setDaysOfPlan({\n                    tomorrow: e.target.checked,\n                    afterTomorrow: afterTomorrow,\n                })\n            )\n        } else if (name === 'afterTomorrow') {\n            dispatch(\n                setDaysOfPlan({\n                    tomorrow: tomorrow,\n                    afterTomorrow: e.target.checked,\n                })\n            )\n        }\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getWeatherActionPlan({\n                tomorrow: tomorrow,\n                afterTomorrow: afterTomorrow,\n            })\n        )\n    }\n\n    return (\n        <Flex direction={'column'} align={'center'}>\n            <Flex justify={'center'} align={'center'} margin={'1em'}>\n                <Button onClick={(e) => sendRequestForReport()}>\n                    Get action plan\n                </Button>\n                <label>\n                    <Input\n                        type={'checkbox'}\n                        checked={period.tomorrow}\n                        name=\"tomorrow\"\n                        onChange={(e) => dayCheckBoxChangeHandler(e)}\n                    />\n                    <span>For tomorrow</span>\n                </label>\n                <label>\n                    <Input\n                        type={'checkbox'}\n                        checked={period.afterTomorrow}\n                        name=\"afterTomorrow\"\n                        onChange={(e) => dayCheckBoxChangeHandler(e)}\n                    />\n                    <span>For day after tomorrow</span>\n                </label>\n            </Flex>\n\n            {status === 'resolved' && tomorrowPlanOnionCards.length > 0 && (\n                <Flex>\n                    <Title> Вероятность на завтра({tomorrowDate})</Title>\n                    <TextContent>\n                        Обновление данных было произведено:{' '}\n                        {lastTimeUpdateOfTomorrow}\n                    </TextContent>\n                    {tomorrowPlanOnionCards}\n                </Flex>\n            )}\n            {status === 'resolved' && tomorrowPlanOnionCards.length === 0 && (\n                <Flex>\n                    <Title>\n                        Вероятность на завтра ({tomorrowDate}) отсутствует :)\n                    </Title>\n                    <TextContent>\n                        Обновление данных было произведено:\n                        {lastTimeUpdateOfTomorrow}\n                    </TextContent>\n                    {tomorrowPlanOnionCards}\n                </Flex>\n            )}\n\n            {status === 'resolved' && afterTomorrowPlanOnionCards.length > 0 && (\n                <Flex direction={'column'} align={'center'}>\n                    <Title>\n                        Вероятность на послезавтра ({afterTomorrowDate})\n                    </Title>\n                    <TextContent>\n                        Обновление данных было произведено:\n                        {lastTimeUpdateOfAfterTomorrow}\n                    </TextContent>\n                    {afterTomorrowPlanOnionCards}\n                </Flex>\n            )}\n            {status === 'resolved' && afterTomorrowPlanOnionCards.length === 0 && (\n                <Flex direction={'column'} align={'center'}>\n                    <Title>\n                        Вероятность на послезавтра ({afterTomorrowDate})\n                        отсутствует :)\n                    </Title>\n                    <TextContent>\n                        Обновление данных было произведено:\n                        {lastTimeUpdateOfAfterTomorrow}\n                    </TextContent>\n                    {afterTomorrowPlanOnionCards}\n                </Flex>\n            )}\n            {status === null && <LoaderReact />}\n            {status === 'loading' && <LoaderReact animate={{ rotate: 360 }} />}\n            {status === 'error' && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n}\n\nexport default WeatherActionPlan\n","import React from 'react'\nimport SaturationByPeriodPage from './SaturationReport/Pages/SaturationByPeriodPage'\nimport { Redirect, Route, useRouteMatch } from 'react-router-dom'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport Flex from '../StyledComponents/Flex'\nimport SaturationBySelectedOnionPage from './SaturationReport/Pages/SaturationBySelectedOnionPage.jsx'\nimport WeatherActionPlan from './WeatherActionPlanReport/Pages/WeatherActionPlan'\n\nconst stylesForStyledLink = {\n    width: '20%',\n    height: '2em',\n    radius: '15px',\n    text_align: 'center',\n}\n\nconst Reports = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex direction={'column'} width={'90%'}>\n            <Flex\n                justify={'space-evenly'}\n                bBorder={'3px solid white'}\n                padding={'20px 0px 10px'}\n                bColor={'rgb(24,25,26)'}\n            >\n                <StyledNavLink\n                    to={`${url}/period`}\n                    {...stylesForStyledLink}\n                    text={'Saturation report'}\n                />\n                <StyledNavLink\n                    to={`${url}/onion-select`}\n                    {...stylesForStyledLink}\n                    text={'Onions saturation'}\n                    width={'300px'}\n                />\n                <StyledNavLink\n                    to={`${url}/action-plan`}\n                    {...stylesForStyledLink}\n                    text={'Action plan'}\n                    width={'300px'}\n                />\n            </Flex>\n            <Route\n                exact\n                path={`${path}/period`}\n                component={SaturationByPeriodPage}\n            />\n            <Route\n                path={`${path}/onion-select`}\n                component={SaturationBySelectedOnionPage}\n            />\n            <Route path={`${path}/action-plan`} component={WeatherActionPlan} />\n            <Route exact path={path}>\n                <Redirect to={`${path}/period`} />\n            </Route>\n        </Flex>\n    )\n}\n\nexport default Reports\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\n\nconst WeatherControlPage = () => {\n    return <Flex width={'90%'}>Camcorders with weather at onions</Flex>\n}\n\nexport default WeatherControlPage\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport TextContent from '../StyledComponents/TextContent'\n\nexport default function Page404() {\n    return (\n        <Flex margin=\"auto\" justify=\"center\" align=\"center\">\n            <TextContent textAlign='center' margin='20% auto' fSize=\"4em\">😞 😞 😞 404: Page not found 😞😞😞</TextContent>\n        </Flex>\n    )\n}\n","import React from 'react';\n\nconst ChartOfBigOnions = () => {\n    return (\n        <div>\n            Big onions chart\n        </div>\n    );\n};\n\nexport default ChartOfBigOnions;","import React from 'react';\n\nconst ChartOfSmallOnions = () => {\n    return (\n        <div>\n            Samll onion chart\n        </div>\n    );\n};\n\nexport default ChartOfSmallOnions;","import React from 'react'\nimport ChartOfBigOnions from './ChartOfBigOnions'\nimport ChartOfSmallOnions from './ChartOfSmallOnions'\nimport Flex from '../StyledComponents/Flex'\n\nconst ChartsPage = () => {\n    return (\n        <Flex width={'90%'}>\n            Charts page\n            <ChartOfBigOnions />\n            <ChartOfSmallOnions />\n        </Flex>\n    )\n}\n\nexport default ChartsPage\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Homepage from '../Homepage/Homepage'\nimport Reports from '../Reports/Reports'\nimport WeatherControlPage from '../WeatherControlPage/WeatherControlPage'\nimport Page404 from '../Page404/Page404'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport ChartsPage from '../Charts/ChartsPage'\nimport Button from '../StyledComponents/Button'\n\nexport const stylesForStyledLink = {\n    width: '90%',\n    height: '3em',\n    radius: '15px',\n    text_align: 'center',\n}\n\nconst Navbar = () => {\n    const { path, url } = useRouteMatch()\n    function clearLocalStorage() {\n        localStorage.clear()\n    }\n\n    return (\n        <Flex>\n            <Flex\n                height={' '}\n                mHeight={'100vh'}\n                width={'10%'}\n                bColor={'rgb(37,37,38)'}\n                padding={' 1em 1.1em'}\n                rBorder={'2px solid white'}\n                align={'center'}\n                direction={'column'}\n            >\n                <StyledNavLink\n                    exact\n                    {...stylesForStyledLink}\n                    to={'/Aide/'}\n                    text={'Home 🏠'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/charts'}\n                    text={'Charts 📈'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/weather'}\n                    text={'Weather ⛈'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/reports'}\n                    text={'Reports 📰'}\n                />\n            </Flex>\n\n            <Switch>\n                <Route exact path={'/Aide/'} component={Homepage} />\n                <Route path={'/Aide/charts'} component={ChartsPage} />\n                <Route path={'/Aide/reports'} component={Reports} />\n                <Route path={'/Aide/weather'} component={WeatherControlPage} />\n                <Route path=\"*\" component={Page404} />\n            </Switch>\n        </Flex>\n    )\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/Background.67dc55cf.svg\";","import { createGlobalStyle } from 'styled-components'\nimport Navbar from './components/Navbar/Navbar'\nimport img from './assets/img/Background.svg'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-size: 45%;\n    background-color: rgb(55, 56, 70);\n    background-image: url(${img});\n    color: aliceblue;\n    font-family: Sans-Serif;\n  }\n`\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Navbar />\n        </>\n    )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport toolkitSlice from './toolkitSlice'\nimport saturationPeriodReportSlice from './report-slices/saturationPeriodReportSlice'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport saturationSelectedOnionsSlice from './report-slices/saturationSelectedOnionsSlice'\nimport weatherActionPlanSlice from './report-slices/weatherActionPlanSlice'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: [''],\n}\n\nconst rootReducer = combineReducers({\n    toolkit: toolkitSlice,\n    saturationPeriodReport: saturationPeriodReportSlice,\n    selectedOnionsReport: saturationSelectedOnionsSlice,\n    weatherActionPlan: weatherActionPlanSlice,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n})\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistor }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { persistor, store } from './toolKitRedux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
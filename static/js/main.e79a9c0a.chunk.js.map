{"version":3,"sources":["components/Analytics/Slots.js","components/Analytics/OnionAnalytic.jsx","components/Analytics/Analytics.jsx","App.jsx","index.js"],"names":["slots","OnionAnalytic","props","city","saturation","map","saturationAtSlotData","id","difference","reason_saturation","area","level_saturation","Analytics","weekDataURL","getHighSaturatedOnions","url","a","axios","get","response","dataOfOnionsToday","data","console","error","filter","onion","Saturation","includes","split","join","slotStart","slotEnd","indexofStartSlotsPeriod","indexOf","indexofEndSlotsPeriod","todaySaturatedOnions","saturatedSlotOfOnion","Slot","indexOfSaturatedSlotStart","indexOfSaturatedSlotEnd","log","getSatReport","action","name","slot","value","onClick","e","preventDefault","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","document","getElementById"],"mappings":"8LAAaA,EAAQ,CACjB,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,S,OC9BWC,EAhBO,SAACC,GACnB,OACI,gCACI,6BAAKA,EAAMC,OACX,8BAAMD,EAAME,WAAWC,KAAI,SAACC,EAAsBC,GAAvB,OAA+B,8BAAgBD,GAANC,QACpE,8BAAML,EAAMM,aACZ,8BAAMN,EAAMO,oBACZ,gCAEI,+BAAOP,EAAMQ,OACb,+BAAOR,EAAMS,0BCPd,SAASC,IACpB,IACMC,EAAc,yCAFY,SAKjBC,EALiB,8EAKhC,WAAsCC,GAAtC,iBAAAC,EAAA,+EAG+BC,IAAMC,IAAIH,GAHzC,OAGcI,EAHd,OAIQC,EAAoBD,EAASE,KAAKA,KAJ1C,gDAMQC,QAAQC,MAAR,MANR,yBASiBH,EAAkBI,QAAO,SAAAC,GAKlC,GADyB,IAArBA,EAAMC,YAAoBD,EAAMC,WAAWC,SAAS,OAE1BF,EAAMC,WAAWE,MAAM,KAAKC,KAAK,IALzB,IAO9B,OAAOJ,KAjBvB,mGALgC,kEAqChC,WAA4BK,EAAWC,GAAvC,mBAAAf,EAAA,6DAEQgB,EAA0BhC,EAAMiC,QAAQH,GACxCI,EAAwBlC,EAAMiC,QAAQF,GAH9C,SAKuCjB,EAAuBD,GAL9D,OAKUsB,EALV,OAM+CA,EAAqBX,QAAO,SAAAC,GACnE,IAAMW,EAAuBX,EAAMY,KAAKT,MAAM,OACxCU,EAA4BtC,EAAMiC,QAAQG,EAAqB,IAC/DG,EAA0BvC,EAAMiC,QAAQG,EAAqB,IAC3BJ,GAA2BM,GAA6BJ,GAAyBK,IAGrHjB,QAAQkB,IAAR,2BAAgCV,EAAhC,mCAAoEE,IACpEV,QAAQkB,IAAR,yBAA8BT,EAA9B,mCAAgEG,IAChEZ,QAAQkB,IAAR,yCAA8CJ,EAAqB,GAAnE,mCAAgGE,IAChGhB,QAAQkB,IAAR,uCAA4CJ,EAAqB,GAAjE,mCAA8FG,IAC9FjB,QAAQkB,IAAIf,OAjBxB,4CArCgC,6DA+DhCgB,CAAa,QAAS,SAiBtB,OACI,gCACI,uBAAMC,OAAO,IAAb,UACI,wBAAQC,KAAK,eAAepC,GAAG,IAA/B,SACKP,EAAMK,KAAI,SAACuC,EAAMrC,GAAP,OACP,wBAAQsC,MAAOD,EAAf,SACKA,GADqBrC,QAKlC,wBAAQoC,KAAK,eAAepC,GAAG,IAA/B,SACKP,EAAMK,KAAI,SAACuC,EAAMrC,GAAP,OACP,wBAAQsC,MAAOD,EAAf,SACKA,GADqBrC,QAKlC,wBACIuC,QAAS,SAAAC,GACLA,EAAEC,kBAFV,2BAQJ,8BAAK,cAAC,EAAD,eAvCC,CACV7C,KAAM,MACNK,WAAY,qHACZC,kBAAmB,kkBACnBC,KAAM,MACNN,WAAY,CACR,wBACA,qBACA,qBACA,sBAEJO,iBAAkB,mB,cC9EpBsC,EAAcC,YAAH,+KAmBFC,MATf,WACC,OACC,sBAAKC,UAAU,MAAf,UACC,cAACH,EAAD,IACA,cAACrC,EAAD,QCZHyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e79a9c0a.chunk.js","sourcesContent":["export const slots = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react';\n\nconst OnionAnalytic = (props) => {\n    return (\n        <div>\n            <h1>{props.city}</h1>\n            <div>{props.saturation.map((saturationAtSlotData, id) =>  <div key={id} >{saturationAtSlotData}</div>)}</div>\n            <div>{props.difference}</div>\n            <div>{props.reason_saturation}</div>\n            <div>\n\n                <span>{props.area}</span>\n                <span>{props.level_saturation}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default OnionAnalytic;","import axios from 'axios'\nimport React from 'react'\nimport {slots} from './Slots'\nimport OnionAnalytic from \"./OnionAnalytic\";\n\nexport default function Analytics() {\n    const todayDataURL = 'http://www.aideindustries.tk:5000/today'\n    const weekDataURL = 'http://www.aideindustries.tk:5000/week'\n    const averageURL = 'http://www.aideindustries.tk:5000/avrg/'\n\n    async function getHighSaturatedOnions(url) {\n        let dataOfOnionsToday\n        try {\n            const response = await axios.get(url)\n            dataOfOnionsToday = response.data.data\n        } catch (error) {\n            console.error(error)\n        }\n\n        return await dataOfOnionsToday.filter(onion => {\n            const firstLevelSaturationTrashHold = 150\n\n            const onionSaturationValid =\n                onion.Saturation !== 0 && onion.Saturation.includes('%')\n            if (onionSaturationValid) {\n                const saturationNumber = +onion.Saturation.split('%').join('')\n                if (saturationNumber > firstLevelSaturationTrashHold) {\n                    return onion\n                }\n            }\n        })\n    }\n\n\n    const city = {\n        City: \"DNP\",\n        Couriers: \"28\",\n        Orders: \"53\",\n        Saturation: \"179%\",\n        Slot: \"00:00 - 01:00\"\n    }\n\n    async function getSatReport(slotStart, slotEnd) {\n        // const selectedSlotsPeriod = `${slotStart} - ${slotEnd}`\n        let indexofStartSlotsPeriod = slots.indexOf(slotStart)\n        let indexofEndSlotsPeriod = slots.indexOf(slotEnd)\n\n        const todaySaturatedOnions = await getHighSaturatedOnions(weekDataURL)\n        const sturatedOnionsFiltredBySlotsPeriod = todaySaturatedOnions.filter(onion => {\n            const saturatedSlotOfOnion = onion.Slot.split(\" - \")\n            const indexOfSaturatedSlotStart = slots.indexOf(saturatedSlotOfOnion[0])\n            const indexOfSaturatedSlotEnd = slots.indexOf(saturatedSlotOfOnion[1])\n            const saturatedSlotIsAtSelectedPeriod = indexofStartSlotsPeriod <= indexOfSaturatedSlotStart && indexofEndSlotsPeriod >= indexOfSaturatedSlotEnd\n\n            if (saturatedSlotIsAtSelectedPeriod) {\n                console.log(`Puted slot start ${slotStart} - his index at slots = ${indexofStartSlotsPeriod}`)\n                console.log(`Puted slot end ${slotEnd} - his index at slots = ${indexofEndSlotsPeriod}`)\n                console.log(`Saturated  slot start of onion ${saturatedSlotOfOnion[0]} - his index at slots = ${indexOfSaturatedSlotStart}`)\n                console.log(`Saturated  slot end of onion ${saturatedSlotOfOnion[1]} - his index at slots = ${indexOfSaturatedSlotEnd}`)\n                console.log(onion)\n\n            }\n        })\n\n        // console.log(sturatedOnionsFiltredBySlotsPeriod)\n    }\n\n\n    getSatReport('09:00', '11:00')\n\n\n    const onion = {\n        city: \"DNP\",\n        difference: \"D0 vs D7: курьеров -13%, заказов +35%. \",\n        reason_saturation: \"Причина сатурации - прирост заказов и уменьшилось количество активных курьеров в сравнении с прошлой неделей. \",\n        area: \"#A2\",\n        saturation: [\n            \"  19:00 - 20:00: 174 \",\n            \"20:00 - 21:00: 181\",\n            \"21:00 - 22:00: 161\",\n            \"22:00 - 22:30: 137\"\n        ],\n        level_saturation: \" #medium\"\n    }\n\n    return (\n        <div>\n            <form action=\"#\">\n                <select name=\"slotSelector\" id=\"1\">\n                    {slots.map((slot, id) => (\n                        <option value={slot} key={id}>\n                            {slot}\n                        </option>\n                    ))}\n                </select>\n                <select name=\"slotSelector\" id=\"1\">\n                    {slots.map((slot, id) => (\n                        <option value={slot} key={id}>\n                            {slot}\n                        </option>\n                    ))}\n                </select>\n                <button\n                    onClick={e => {\n                        e.preventDefault()\n                    }}\n                >\n                    Get report\n                </button>\n            </form>\n            <div><OnionAnalytic {...onion} /></div>\n\n\n        </div>\n    )\n}\n","import Analytics from './components/Analytics/Analytics.jsx'\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: black;\n\t  color: aliceblue;\n    font-family: Open-Sans, Helvetica, Sans-Serif;\n  }\n`;\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<GlobalStyle/>\n\t\t\t<Analytics />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
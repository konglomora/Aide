{"version":3,"sources":["components/StyledComponents/Flex.jsx","components/StyledComponents/Button.jsx","toolKitRedux/toolkitSlice.js","components/Homepage/Homepage.jsx","components/Reports/slots.js","components/Reports/SaturationReport/Cards/OnionSaturationCard.jsx","components/StyledComponents/Title.jsx","components/StyledComponents/Select.js","axios/axios.js","toolKitRedux/report-slices/saturationPeriodReportSlice.js","components/Reports/SaturationReport/Pages/SaturationByPeriodPage.jsx","components/StyledComponents/StyledLink.jsx","components/Reports/codes.js","toolKitRedux/report-slices/saturationSelectedOnionsSlice.js","components/StyledComponents/TextContent.jsx","components/Reports/SaturationReport/Cards/OnionCodeCard.jsx","components/Reports/SaturationReport/Cards/AreaCodesCard.jsx","components/Reports/SaturationReport/Pages/SaturationBySelectedOnionPage.jsx","components/Reports/Reports.jsx","components/WeatherControlPage/WeatherControlPage.jsx","components/Page404/Page404.jsx","components/Reports/Charts/ChartOfBigOnions.jsx","components/Reports/Charts/ChartOfSmallOnions.jsx","components/Reports/Charts/ChartsPage.jsx","components/Navbar/Navbar.jsx","App.jsx","toolKitRedux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","wrap","justify","margin","width","height","padding","bColor","tDecoration","bBorder","border","bRadius","cursor","Flex","StyledButton","button","bcolor","color","bradius","Button","type","toolkitSlice","createSlice","name","initialState","count","todos","reducers","increment","state","decrement","addTodo","action","push","payload","removeLastTodo","pop","actions","Homepage","dispatch","useDispatch","useSelector","toolkit","onClick","prompt","a","setTimeout","map","todo","slotsRegular","OnionSaturationCard","city","saturation","saturationAtSlotData","id","difference","reason_saturation","slotFilledStr","area","level_sat","StyledTitle","span","decoration","fSize","fWeight","textAlign","display","Title","SelectStyle","background","borderRadius","appearance","outline","aideApiAxios","axios","create","baseURL","headers","Authorization","axiosGetSaturatedOnionsByPeriod","createAsyncThunk","periodStart","periodEnd","rejectWithValue","get","saturatedOnions","console","log","statusText","Error","data","message","axiosGetSaturatedOnionAnalyseObject","onionCode","saturatedOnionData","JSON","parse","onionReportObject","charAt","getSaturationReport","getState","clearReport","getUniqueSaturatedOnionCodes","saturatedUniqueSortedOnionCodesArray","saturationPeriodReport","forEach","kyiv_report","setError","status","error","setLoading","saturationPeriodReportSlice","mio_report","small_report","saturatedOnionsObjectsArray","periodReport","setPeriodOfReport","allSaturatedOnionCodes","reduce","accum","onion","some","obj","uniqueOnionCodes","filter","index","indexOf","sort","addOnionObjToPeriodReport","extraReducers","fulfilled","rejected","isKyiv","isMio","pending","SaturationByPeriodPage","saturationReport","useState","sendRequestForReport","setSendRequestForReport","selectChangeHandler","e","target","value","substr","useEffect","getReport","style","onChange","slot","preventDefault","onionReport","key","SNavLink","NavLink","text_align","background_color","radius","StyledNavLink","to","text","kyivCodes","mioCodes","smallCodes","onionCodesArray","selectedOnionsReport","selectedOnionsReportSlice","areaCodes","selectedOnionCodes","selectedOnionsByUser","selectOnion","codesArray","code","deselectOnion","includes","indexOfCodeAtInitialArray","splice","StyledSpan","TextContent","OnionCode","AreaCodesCard","cardTitle","codes","React","memo","onionCodesSelectHandler","outerText","title","Reports","useRouteMatch","path","url","stylesForStyledLink","exact","component","SaturationBySelectedOnionPage","WeatherControlPage","Page404","ChartOfBigOnions","ChartOfSmallOnions","ChartsPage","Navbar","GlobalStyle","createGlobalStyle","App","persistConfig","storage","rootReducer","combineReducers","saturationSelectedOnionsSlice","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95a4e4a8.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.direction || 'row'};\n    align-items: ${({ align }) => align || 'stretch'};\n    flex-wrap: ${({ wrap }) => wrap || ''};\n    justify-content: ${({ justify }) => justify || 'stretch'};\n    margin: ${({ margin }) => margin || '0'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    border-bottom: ${({ bBorder }) => bBorder || ''};\n    border: ${({ border }) => border || ''};\n    border-radius: ${({ bRadius }) => bRadius || ''};\n    cursor: ${({ cursor }) => cursor || ''};\n`\n\nexport default function Flex(props) {\n    return <StyledFlex {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    width: ${({ width }) => width || '100px'};\n    background-color: ${({ bcolor }) => bcolor || 'rgb(0, 0 ,0)'};\n    color: ${({ color }) => color || 'white'};\n    font-weight: 500;\n    padding: ${({ padding }) => padding || '7px'};\n    border-radius: ${({ bradius }) => bradius || '5px'};\n    border: ${({ border }) => border || '2px solid white'};\n    cursor: pointer;\n`\n\nexport default function Button(props) {\n    return <StyledButton type={props.type} {...props} />\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const addAsyncTodo = () => {\n    return async (dispatch) => {\n        setTimeout(() => {\n            dispatch(addTodo('ASYNC TODO'))\n        }, 2000)\n    }\n}\n\nconst toolkitSlice = createSlice({\n    name: 'toolkit',\n    initialState: {\n        count: 21,\n        todos: ['Умыться', 'Покушать', 'Уснуть'],\n    },\n    reducers: {\n        increment(state) {\n            state.count = state.count + 1\n        },\n        decrement(state) {\n            state.count = state.count - 1\n        },\n        addTodo(state, action) {\n            state.todos.push(action.payload)\n        },\n        removeLastTodo(state) {\n            state.todos.pop()\n        },\n    },\n})\n\nexport const { increment, decrement, addTodo, removeLastTodo } =\n    toolkitSlice.actions\nexport default toolkitSlice.reducer\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport Button from '../StyledComponents/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    addAsyncTodo,\n    addTodo,\n    decrement,\n    increment,\n    removeLastTodo,\n} from '../../toolKitRedux/toolkitSlice'\n\nconst Homepage = () => {\n    const dispatch = useDispatch()\n    const count = useSelector((state) => state.toolkit.count)\n    const todos = useSelector((state) => state.toolkit.todos)\n\n    return (\n        <Flex>\n            <div>{count}</div>\n            <Button onClick={() => dispatch(increment())}>Инкремент</Button>\n            <Button onClick={() => dispatch(decrement())}>Декремент</Button>\n            <Button onClick={() => dispatch(addTodo(prompt()))}>\n                Добавить туду\n            </Button>\n            <Button onClick={() => dispatch(removeLastTodo())}>\n                Удалить последний туду\n            </Button>\n            <Button onClick={() => dispatch(addAsyncTodo())}>\n                Добавить асинк туду\n            </Button>\n            {todos.map((todo) => (\n                <div>{todo}</div>\n            ))}\n        </Flex>\n    )\n}\n\nexport default Homepage\n","export const slotsRegular = [\n    '00:00',\n    '01:00',\n    '02:00',\n    '03:00',\n    '04:00',\n    '05:00',\n    '06:00',\n    '07:00',\n    '08:00',\n    '09:00',\n    '10:00',\n    '11:00',\n    '12:00',\n    '13:00',\n    '14:00',\n    '15:00',\n    '16:00',\n    '17:00',\n    '18:00',\n    '19:00',\n    '20:00',\n    '21:00',\n    '22:00',\n    '23:00',\n]\n\nexport const slotsFlexible = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react'\nimport Flex from '../../../StyledComponents/Flex'\n\nconst OnionSaturationCard = (props) => {\n    return (\n        <Flex\n            border={'2px solid white'}\n            bRadius={'15px'}\n            padding={'25px'}\n            margin={'10px'}\n        >\n            <div>\n                <h1>{props.city}</h1>\n                <div>\n                    {props.saturation.map((saturationAtSlotData, id) => (\n                        <div key={id}>{saturationAtSlotData}</div>\n                    ))}\n                </div>\n                <div>{props.difference}</div>\n                <div>{props.reason_saturation}</div>\n                <div>{props.slotFilledStr}</div>\n                <div>\n                    <span>{props.area}</span>\n                    <span>{props.level_sat}</span>\n                </div>\n            </div>\n        </Flex>\n    )\n}\n\nexport default OnionSaturationCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.span`\n\ttext-align: ${({ align }) => align || 'center'};\n\tmargin: ${({ margin }) => margin || '0'};\n\tcolor: ${({ color }) => color || 'white'};\n\ttext-decoration: ${({ decoration }) => decoration || 'none'};\n\tfont-size: ${({ fSize }) => fSize || '2em'};\n\tfont-weight: ${({ fWeight }) => fWeight || '300'};\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tmargin: ${({ margin }) => margin || '0'};\n\ttext-align: ${({ textAlign }) => textAlign || 'start'};\n\tcursor: ${({ cursor }) => cursor || ''};\n\tdisplay: ${({ display }) => display || 'inline'};\n\ttext-decoration: ${({tDecoration}) => tDecoration || 'none'};\n\tbackground-color: ${({bColor}) => bColor || 'transparent'};\n`\n\nexport default function Title(props) {\n\treturn <StyledTitle {...props} />\n}\n","export const SelectStyle = {\n    background: 'none',\n    borderRadius: '10px',\n    color: 'white',\n    padding: '8px',\n    appearance: 'none',\n    width: '3.5rem',\n    border: '3px solid white',\n    outline: 'none',\n    margin: '0 10px'\n}","import axios from 'axios'\nconst ACCESS_TOKEN = '0a4fcce5995c4f7478bd0b891b265a73d0289ba4'\nconst ACCESS_TOKEN2 = 'ace68d53680920b040d5e419b048c4d99be6d65f'\nconst apiURL = 'https://www.aideindustries.tk'\n\nexport const aideApiAxios = axios.create({\n    baseURL: apiURL,\n    headers: {\n        Authorization: `Token ${ACCESS_TOKEN2}`,\n    },\n})\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\n\nexport const axiosGetSaturatedOnionsByPeriod = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionsByPeriod',\n    async function ({ periodStart, periodEnd }, { rejectWithValue }) {\n        try {\n            const saturatedOnions = await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=yes`\n            )\n            console.log({ saturatedOnions })\n            if (saturatedOnions.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            return saturatedOnions.data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue, dispatch }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n            console.log(onionReportObject)\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'saturation-period/getSaturationReport',\n    async function ({ periodStart, periodEnd }, { dispatch, getState }) {\n        await dispatch(clearReport())\n        await dispatch(\n            axiosGetSaturatedOnionsByPeriod({ periodStart, periodEnd })\n        )\n        await dispatch(getUniqueSaturatedOnionCodes())\n\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().saturationPeriodReport\n                .saturatedUniqueSortedOnionCodesArray\n        console.log(saturatedUniqueSortedOnionCodesArray)\n        saturatedUniqueSortedOnionCodesArray.forEach((onionCode) => {\n            return dispatch(\n                axiosGetSaturatedOnionAnalyseObject({\n                    onionCode,\n                    periodStart,\n                    periodEnd,\n                })\n            )\n        })\n        // console.log(getState())\n        const reportArray = [...getState().saturationPeriodReport.kyiv_report]\n    }\n)\n// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nconst saturationPeriodReportSlice = createSlice({\n    name: 'saturation-period',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        saturatedOnionsObjectsArray: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state) {\n            const allSaturatedOnionCodes =\n                state.saturatedOnionsObjectsArray.reduce((accum, onion) => {\n                    if (!accum.some((obj) => obj.city === onion.city)) {\n                        accum.push(onion.city)\n                    }\n                    return accum\n                }, [])\n            const uniqueOnionCodes = allSaturatedOnionCodes.filter(\n                (onionCode, index) =>\n                    allSaturatedOnionCodes.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n            // console.log(state.saturatedUniqueSortedOnionCodesArray)\n            state.status = 'loading'\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionsByPeriod.fulfilled]: (state, action) => {\n            state.saturatedOnionsObjectsArray = action.payload\n        },\n        [axiosGetSaturatedOnionsByPeriod.rejected]: setError,\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const isKyiv =\n                action.payload.city === 'KIE' || action.payload.city === 'KYI'\n            const isMio =\n                action.payload.city === 'DNP' ||\n                action.payload.city === 'KHA' ||\n                action.payload.city === 'LVI' ||\n                action.payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(action.payload)\n            } else if (isMio) {\n                state.mio_report.push(action.payload)\n            } else {\n                state.small_report.push(action.payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.periodReport = [\n                ...state.kyiv_report,\n                ...state.mio_report,\n                ...state.small_report,\n            ]\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const { setPeriodOfReport, getUniqueSaturatedOnionCodes, clearReport } =\n    saturationPeriodReportSlice.actions\n\nexport default saturationPeriodReportSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    getSaturationReport,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationPeriodReportSlice'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function SaturationByPeriodPage() {\n    const dispatch = useDispatch()\n    const {\n        status,\n        error,\n        periodStart,\n        periodEnd,\n        periodReport,\n        kyiv_report,\n        mio_report,\n        small_report,\n    } = useSelector((state) => state.saturationPeriodReport)\n\n    const saturationReport = [...kyiv_report, ...mio_report, ...small_report]\n    const [sendRequestForReport, setSendRequestForReport] = useState(false)\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    useEffect(() => {\n        async function getReport() {\n            dispatch(\n                getSaturationReport({\n                    periodStart: periodStart,\n                    periodEnd: periodEnd,\n                })\n            )\n        }\n        getReport()\n    }, [sendRequestForReport])\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'4em 0 0 0'}>\n            <Flex justify={'center'}>\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={`${periodStart}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={`${periodEnd}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            setSendRequestForReport(!sendRequestForReport)\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report by period\n                    </Button>\n                </form>\n            </Flex>\n            <Flex direction={'column'} width={'50%'}>\n                <Title\n                    fWeight={'800'}\n                >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                <div>\n                    {saturationReport.map((onionReport, id) => {\n                        if (status === 'resolved') {\n                            return (\n                                <OnionSaturationCard\n                                    {...onionReport}\n                                    key={id}\n                                />\n                            )\n                        }\n                    })}\n                </div>\n            </Flex>\n            {status === 'loading' && <h2>Loading...</h2>}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst SNavLink = styled(NavLink)`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ text_align }) => text_align || 'start'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ background_color }) => background_color || 'violet'};\n    border-radius: ${({ radius }) => radius || '0px'};\n    border: ${({ border }) => border || ''};\n    &.active {\n        background-color: blueviolet;\n    }\n`\n\nconst StyledNavLink = (props) => {\n    return (\n        <SNavLink to={props.to} {...props}>\n            {props.text}\n        </SNavLink>\n    )\n}\n\nexport default StyledNavLink\n","export const kyivCodes = ['KIE', 'KYI']\nexport const mioCodes = ['DNP', 'KHA', 'LVI', 'ODS']\nexport const smallCodes = [\n    'BRO',\n    'BTA',\n    'CHE',\n    'CHN',\n    'CHK',\n    'IRP',\n    'IVF',\n    'KAM',\n    'KHE',\n    'KHM',\n    'KRK',\n    'KRO',\n    'KRR',\n    'LUT',\n    'MKL',\n    'MPL',\n    'ODE',\n    'POL',\n    'RVN',\n    'SUM',\n    'TNP',\n    'UMA',\n    'UZH',\n    'VNT',\n    'ZHY',\n    'ZPR',\n]\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport { kyivCodes, mioCodes, smallCodes } from '../../components/Reports/codes'\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'selected-onions/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'selected-onions/getSaturationReport',\n    async function (\n        { onionCodesArray, periodStart, periodEnd },\n        { dispatch, getState }\n    ) {\n        await dispatch(clearReport())\n        await dispatch(getUniqueSaturatedOnionCodes(onionCodesArray))\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().selectedOnionsReport.saturatedUniqueSortedOnionCodesArray\n        saturatedUniqueSortedOnionCodesArray.forEach((onionCode) => {\n            return dispatch(\n                axiosGetSaturatedOnionAnalyseObject({\n                    onionCode,\n                    periodStart,\n                    periodEnd,\n                })\n            )\n        })\n        const reportArray = [...getState().selectedOnionsReport.kyiv_report]\n    }\n)\n// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nconst selectedOnionsReportSlice = createSlice({\n    name: 'selected-onions',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        areaCodes: [[...kyivCodes], [...mioCodes], [...smallCodes]],\n        selectedOnionCodes: [],\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        selectedOnionsByUser: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state, action) {\n            const { payload } = action\n            const uniqueOnionCodes = payload.filter(\n                (onionCode, index) => payload.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        selectOnion(state, action) {\n            // Удаляем из списка онионов выбранный онион и добавляем в массив который потом передаем для получения репорта\n            state.areaCodes = state.areaCodes.map((codesArray) =>\n                codesArray.filter((code) => code !== action.payload)\n            )\n            state.selectedOnionCodes.push(action.payload)\n        },\n        deselectOnion(state, action) {\n            const onionCode = action.payload\n            state.selectedOnionCodes = state.selectedOnionCodes.filter(\n                (code) => code !== onionCode\n            )\n\n            if (kyivCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = kyivCodes.indexOf(onionCode)\n                state.areaCodes[0].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else if (mioCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = mioCodes.indexOf(onionCode)\n                state.areaCodes[1].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else {\n                const indexOfCodeAtInitialArray = smallCodes.indexOf(onionCode)\n                state.areaCodes[2].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            }\n            // state.areaCodes = state.areaCodes.map((codesArray) =>\n            //   codesArray.filter((code) => code !== action.payload)\n            // )\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const { payload } = action\n            const isKyiv = payload.city === 'KIE' || payload.city === 'KYI'\n            const isMio =\n                payload.city === 'DNP' ||\n                payload.city === 'KHA' ||\n                payload.city === 'LVI' ||\n                payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(payload)\n            } else if (isMio) {\n                state.mio_report.push(payload)\n            } else {\n                state.small_report.push(payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.periodReport = [\n                ...state.kyiv_report,\n                ...state.mio_report,\n                ...state.small_report,\n            ]\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const {\n    setPeriodOfReport,\n    getUniqueSaturatedOnionCodes,\n    selectOnion,\n    deselectOnion,\n    clearReport,\n} = selectedOnionsReportSlice.actions\n\nexport default selectedOnionsReportSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n\tcolor: ${({ color }) => color || 'white'};\n\ttext-decoration: ${({ decoration }) => decoration || 'none'};\n\tfont-size: ${({ fSize }) => fSize || '1em'};\n\tfont-weight: ${({ fWeight }) => fWeight || '300'};\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tmargin: ${({ margin }) => margin || '0'};\n\ttext-align: ${({ textAlign }) => textAlign || 'start'};\n\tcursor: ${({ cursor }) => cursor || ''};\n\tdisplay: ${({ display }) => display || 'inline'};\n\ttext-decoration: ${({tDecoration}) => tDecoration || 'none'};\n\tbackground-color: ${({bColor}) => bColor || 'transparent'};\n`\n\nexport default function TextContent(props) {\n\treturn <StyledSpan {...props} />\n}\n","import React, { useEffect, useState } from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\n\nconst OnionCode = ({ code, onClick, value }) => {\n    const backgroundColor = 'transparent'\n    const color = 'white'\n    const border = '3px solid white'\n\n    return (\n        <Flex\n            cursor={'pointer'}\n            border={border}\n            width={'3em'}\n            padding={'3px'}\n            bRadius={'5px'}\n            justify={'space-around'}\n            margin={'5px'}\n            bColor={backgroundColor}\n            onClick={(e) => onClick(e)}\n        >\n            <TextContent fWeight={400} color={color} textAlign={'center'}>\n                {code}\n            </TextContent>\n        </Flex>\n    )\n}\n\nexport default OnionCode\n","import Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport React from 'react'\nimport OnionCode from './OnionCodeCard'\n\nconst AreaCodesCard = ({ cardTitle, codes, onClick }) => {\n    return (\n        <Flex\n            direction={'column'}\n            align={'center'}\n            border={'3px solid white'}\n            width={'35%'}\n            bRadius={'5px'}\n            margin={'8px 0'}\n            padding={'10px'}\n        >\n            <TextContent textAlign={'center'}>{cardTitle}</TextContent>\n            <Flex justify={'center'} wrap={'wrap'}>\n                {codes.map((code) => (\n                    <OnionCode key={code} code={code} onClick={onClick} />\n                ))}\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default AreaCodesCard\n","import React, { useEffect, useState } from 'react'\nimport { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    deselectOnion,\n    getSaturationReport,\n    selectOnion,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationSelectedOnionsSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport OnionCode from '../Cards/OnionCodeCard'\nimport { kyivCodes, mioCodes, smallCodes } from '../../codes'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport AreaCodesCard from '../Cards/AreaCodesCard'\n\nexport default React.memo(function SaturationBySelectedOnion() {\n    const dispatch = useDispatch()\n    const {\n        status,\n        error,\n        periodStart,\n        periodEnd,\n        kyiv_report,\n        mio_report,\n        small_report,\n        areaCodes,\n        selectedOnionCodes,\n    } = useSelector((state) => state.selectedOnionsReport)\n\n    const saturationReport = [...kyiv_report, ...mio_report, ...small_report]\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    // const onionCodesArray = onionCodes.split(',').map((code) => code.trim())\n\n    // const onionCodes = [[...kyivCodes], [...mioCodes], [...smallCodes]]\n\n    function onionCodesSelectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(selectOnion(onionCode))\n    }\n\n    function onionDeselectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(deselectOnion(onionCode))\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getSaturationReport({\n                onionCodesArray: selectedOnionCodes,\n                periodStart: periodStart,\n                periodEnd: periodEnd,\n            })\n        )\n    }\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'2em 0 0 0'}>\n            <Flex direction={'column'} align={'center'}>\n                {areaCodes.map((onionCodesArray, index) => {\n                    let title = ''\n                    index === 0\n                        ? (title = 'Kyiv')\n                        : index === 1\n                        ? (title = 'MIO')\n                        : (title = 'Small')\n                    return (\n                        <AreaCodesCard\n                            key={title}\n                            cardTitle={title}\n                            codes={onionCodesArray}\n                            onClick={onionCodesSelectHandler}\n                        />\n                    )\n                })}\n            </Flex>\n            <AreaCodesCard\n                cardTitle=\"Selected onions for report\"\n                codes={selectedOnionCodes}\n                onClick={onionDeselectHandler}\n            />\n            <Flex justify={'center'}>\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={`${periodStart}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={`${periodEnd}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            sendRequestForReport()\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report by period\n                    </Button>\n                </form>\n            </Flex>\n\n            <Flex direction={'column'} width={'50%'}>\n                <Title\n                    fWeight={'800'}\n                >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                <div>\n                    {saturationReport.map((onionReport, id) => {\n                        if (status === 'resolved') {\n                            return (\n                                <OnionSaturationCard\n                                    {...onionReport}\n                                    key={id}\n                                />\n                            )\n                        }\n                    })}\n                </div>\n            </Flex>\n            {status === 'loading' && <h2>Loading...</h2>}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n})\n","import React from 'react'\nimport SaturationByPeriodPage from './SaturationReport/Pages/SaturationByPeriodPage'\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport Flex from '../StyledComponents/Flex'\nimport { stylesForStyledLink } from '../Navbar/Navbar'\nimport SaturationByOnionsPage from './SaturationReport/Pages/SaturationByOnionsPage'\nimport SaturationBySelectedOnionPage from './SaturationReport/Pages/SaturationBySelectedOnionPage.jsx'\n\nconst Reports = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex direction={'column'}>\n            {/*<StyledNavLink*/}\n            {/*    exact*/}\n            {/*    to={`${url}`}*/}\n            {/*    {...stylesForStyledLink}*/}\n            {/*    text={'Period(Basic)'}*/}\n            {/*/>*/}\n            <Flex\n                justify={'space-evenly'}\n                bBorder={'3px solid white'}\n                padding={'0px 0px 12px 0px'}\n            >\n                <StyledNavLink\n                    to={`${url}/period`}\n                    {...stylesForStyledLink}\n                    text={'Auto-report'}\n                />\n                <StyledNavLink\n                    to={`${url}/onion-select`}\n                    {...stylesForStyledLink}\n                    text={'Report by selected onions'}\n                    width={'300px'}\n                />\n            </Flex>\n\n            {/*<Route*/}\n            {/*    exact*/}\n            {/*    path={`${path}`}*/}\n            {/*    component={SaturationByOnionsPage}*/}\n            {/*/>*/}\n            <Route\n                exact\n                path={`${path}/period`}\n                component={SaturationByPeriodPage}\n            />\n            <Route\n                path={`${path}/onion-select`}\n                component={SaturationBySelectedOnionPage}\n            />\n            <Route exact path={path}>\n                <Redirect to={`${path}/period`} />\n            </Route>\n        </Flex>\n    )\n}\n\nexport default Reports\n","import React from 'react';\n\nconst WeatherControlPage = () => {\n    return (\n        <div>\n            Camcorders with weather at onions\n        </div>\n    );\n};\n\nexport default WeatherControlPage;","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport TextContent from '../StyledComponents/TextContent'\n\nexport default function Page404() {\n    return (\n        <Flex margin=\"auto\" justify=\"center\" align=\"center\">\n            <TextContent textAlign='center' margin='20% auto' fSize=\"4em\">😞 😞 😞 404: Page not found 😞😞😞</TextContent>\n        </Flex>\n    )\n}\n","import React from 'react';\n\nconst ChartOfBigOnions = () => {\n    return (\n        <div>\n            Big onions chart\n        </div>\n    );\n};\n\nexport default ChartOfBigOnions;","import React from 'react';\n\nconst ChartOfSmallOnions = () => {\n    return (\n        <div>\n            Samll onion chart\n        </div>\n    );\n};\n\nexport default ChartOfSmallOnions;","import React from 'react';\nimport ChartOfBigOnions from \"./ChartOfBigOnions\";\nimport ChartOfSmallOnions from \"./ChartOfSmallOnions\";\n\nconst ChartsPage = () => {\n    return (\n        <div>\n            Charts page\n            <ChartOfBigOnions />\n            <ChartOfSmallOnions/>\n        </div>\n    );\n};\n\nexport default ChartsPage;","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Homepage from '../Homepage/Homepage'\nimport Reports from '../Reports/Reports'\nimport WeatherControlPage from '../WeatherControlPage/WeatherControlPage'\nimport Page404 from '../Page404/Page404'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport ChartsPage from '../Reports/Charts/ChartsPage'\n\nexport const stylesForStyledLink = {\n    width: '10%',\n    padding: '9px',\n    radius: '15px',\n    background_color: 'rgb(93,68,165)',\n    border: '3px solid white',\n    text_align: 'center',\n}\n\nconst Navbar = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex direction={'column'}>\n            <Flex\n                height={'30%'}\n                bColor={'rgb(61,45,108)'}\n                padding={'12px 0px'}\n                justify={'space-evenly'}\n                bBorder={'3px solid white'}\n                margin={'0px 0px 20px 0px'}\n            >\n                <StyledNavLink\n                    exact\n                    {...stylesForStyledLink}\n                    to={'/Aide/'}\n                    text={'Home'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/charts'}\n                    text={'Charts'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/reports'}\n                    text={'Reports'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/weather'}\n                    text={'Weather'}\n                />\n            </Flex>\n\n            <Switch>\n                <Route exact path={'/Aide/'} component={Homepage} />\n                <Route path={'/Aide/charts'} component={ChartsPage} />\n                <Route path={'/Aide/reports'} component={Reports} />\n                <Route path={'/Aide/weather'} component={WeatherControlPage} />\n                <Route path=\"*\" component={Page404} />\n            </Switch>\n        </Flex>\n    )\n}\n\nexport default Navbar\n","import { createGlobalStyle } from 'styled-components'\nimport Navbar from './components/Navbar/Navbar'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: rgb(61, 45, 108);\n    color: aliceblue;\n    font-family: Sans-Serif;\n  }\n`\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Navbar />\n        </>\n    )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport toolkitSlice from './toolkitSlice'\nimport saturationPeriodReportSlice from './report-slices/saturationPeriodReportSlice'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport saturationSelectedOnionsSlice from './report-slices/saturationSelectedOnionsSlice'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst rootReducer = combineReducers({\n    toolkit: toolkitSlice,\n    saturationPeriodReport: saturationPeriodReportSlice,\n    selectedOnionsReport: saturationSelectedOnionsSlice,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n})\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistor }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { persistor, store } from './toolKitRedux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
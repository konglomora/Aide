{"version":3,"sources":["components/Reports/slots.js","components/Reports/SaturationReport/OnionSaturationCard.jsx","components/Reports/SaturationReport/SaturationReportPage.jsx","components/StyledComponents/Flex.jsx","components/Homepage/Homepage.jsx","components/Reports/WeatherActionPlanReport/WeatherActionPlanPage.jsx","components/Reports/Reports.jsx","components/WeatherControlPage/WeatherControlPage.jsx","components/StyledComponents/TextContent.jsx","components/Page404/Page404.jsx","components/StyledComponents/StyledLink.jsx","components/Reports/Charts/ChartOfBigOnions.jsx","components/Reports/Charts/ChartOfSmallOnions.jsx","components/Reports/Charts/ChartsPage.jsx","components/Navbar/Navbar.jsx","App.jsx","index.js"],"names":["slots","OnionSaturationCard","props","city","saturation","map","saturationAtSlotData","id","difference","reason_saturation","area","level_sat","SaturationReportPage","ACCESS_TOKEN","todayDataURL","jsonReportURL","useState","startPeriodSlotSelected","setStartPeriodSlotSelected","endPeriodSlotSelected","setEndPeriodSlotSelected","level_saturation","saturationPeriodReport","setSaturationPeriodReport","sendRequestForReport","setSendRequestForReport","selectChangeHandler","e","name","target","value","getHighSaturatedOnions","url","a","axios","get","headers","response","dataOfOnionsToday","data","console","error","filter","onion","Saturation","includes","split","join","getOnionSaturationInfo","onionName","slotStart","slotEnd","info","log","getSatReport","indexofStartSlotsPeriod","indexOf","indexofEndSlotsPeriod","todaySaturatedOnions","sturatedOnionsFilteredBySlotsPeriod","saturatedSlotOfOnion","Slot","indexOfSaturatedSlotStart","indexOfSaturatedSlotEnd","codesOfSaturatedOnionsAtSelectedPeriod","reduce","accum","some","obj","City","push","onionCode","index","uniqueCodesOfSaturatedOnions","Promise","all","slotStartHour","substr","slotEndHour","toLowerCase","onionSaturationReport","JSON","parse","reportArray","useEffect","action","onChange","slot","onClick","preventDefault","key","StyledFlex","styled","div","direction","align","justify","margin","width","height","padding","bColor","tDecoration","bBorder","Flex","Homepage","WeatherActionPlanPage","Reports","WeatherControlPage","StyledSpan","span","color","decoration","fSize","textAlign","cursor","display","TextContent","Page404","SNavLink","NavLink","radius","border","StyledNavLink","to","link","ChartOfBigOnions","ChartOfSmallOnions","ChartsPage","stylesForStyledLink","Navbar","exact","path","component","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1925105f.chunk.js","sourcesContent":["export const slots = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react';\n\nconst OnionSaturationCard = (props) => {\n    return (\n        <div>\n            <h1>{props.city}</h1>\n            <div>{props.saturation.map((saturationAtSlotData, id) =>  <div key={id} >{saturationAtSlotData}</div>)}</div>\n            <div>{props.difference}</div>\n            <div>{props.reason_saturation}</div>\n            <div>\n\n                <span>{props.area}</span>\n                <span>{props.level_sat}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default OnionSaturationCard;","import axios from 'axios'\nimport React, {useEffect, useState} from 'react'\nimport {slots} from '../slots'\nimport OnionSaturationCard from \"./OnionSaturationCard\";\nimport {logDOM} from \"@testing-library/react\";\n\nexport default function SaturationReportPage() {\n\n    const ACCESS_TOKEN = '0a4fcce5995c4f7478bd0b891b265a73d0289ba4'\n    const stateReprort = [{\n        city: \"DNP\",\n        difference: \"D0 vs D7: курьеров -13%, заказов +35%. \",\n        reason_saturation: \"Причина сатурации - прирост заказов и уменьшилось количество активных курьеров в сравнении с прошлой неделей. \",\n        area: \"#A2\",\n        saturation: [\n            \"19:00 - 20:00: 174\",\n            \"20:00 - 21:00: 181\",\n            \"21:00 - 22:00: 161\",\n            \"22:00 - 22:30: 137\"\n        ],\n        level_saturation: \" #medium\"\n    }]\n\n    const todayDataURL = 'http://www.aideindustries.tk:5000/today'\n    const weekDataURL = 'http://www.aideindustries.tk:5000/week'\n    const averageURL = 'http://www.aideindustries.tk:5000/avrg/'\n    const jsonReportURL = 'http://www.aideindustries.tk:8000/analysis/'\n    const newApiJSONLink = 'http://www.aideindustries.tk:8000/search/'\n    const [startPeriodSlotSelected, setStartPeriodSlotSelected] = useState('00:00')\n    const [endPeriodSlotSelected, setEndPeriodSlotSelected] = useState('02:00')\n    const [saturationPeriodReport, setSaturationPeriodReport] = useState(stateReprort)\n    const [sendRequestForReport, setSendRequestForReport] = useState(false)\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            setStartPeriodSlotSelected(e.target.value)\n        } else if (name === 'slotEndPeriodSelector') {\n            setEndPeriodSlotSelected(e.target.value)\n        }\n\n    }\n\n    async function getHighSaturatedOnions(url) {\n        let dataOfOnionsToday\n        try {\n            const response = await axios.get(url, {\n                headers: {\n                    'Authorization': `Token ${ACCESS_TOKEN}`\n                }\n            })\n            dataOfOnionsToday = response.data.data\n        } catch (error) {\n            console.error(error)\n        }\n\n        return await dataOfOnionsToday.filter(onion => {\n            const firstLevelSaturationTrashHold = 150\n\n            const onionSaturationValid =\n                onion.Saturation !== 0 && onion.Saturation.includes('%')\n            if (onionSaturationValid) {\n                const saturationNumber = +onion.Saturation.split('%').join('')\n                if (saturationNumber > firstLevelSaturationTrashHold) {\n                    return onion\n                }\n            }\n        })\n    }\n\n    async function getOnionSaturationInfo(onionName, slotStart, slotEnd) {\n        let info\n        try {\n            const response = await axios.get(`${jsonReportURL}${onionName}/${slotStart}/${slotEnd}`, {\n                headers: {\n                    'Authorization': `Token ${ACCESS_TOKEN}`\n                }\n            })\n            info = await response.data\n        } catch (error) {\n            console.log(error)\n        }\n        return info\n    }\n\n\n    async function getSatReport(slotStart, slotEnd) {\n        let indexofStartSlotsPeriod = slots.indexOf(slotStart)\n        let indexofEndSlotsPeriod = slots.indexOf(slotEnd) === 0 ? 10000 : slots.indexOf(slotEnd)\n\n        const todaySaturatedOnions = await getHighSaturatedOnions(todayDataURL)\n\n        const sturatedOnionsFilteredBySlotsPeriod = todaySaturatedOnions.filter(onion => {\n            const saturatedSlotOfOnion = onion.Slot.split(\" - \")\n            const indexOfSaturatedSlotStart = slots.indexOf(saturatedSlotOfOnion[0])\n            const indexOfSaturatedSlotEnd = slots.indexOf(saturatedSlotOfOnion[1]) === 0 ? 1000 : slots.indexOf(saturatedSlotOfOnion[1])\n            const saturatedSlotIsAtSelectedPeriod = indexofStartSlotsPeriod <= indexOfSaturatedSlotStart && indexofEndSlotsPeriod >= indexOfSaturatedSlotEnd\n\n            if (saturatedSlotIsAtSelectedPeriod) {\n                return onion\n            }\n        })\n\n        const codesOfSaturatedOnionsAtSelectedPeriod = sturatedOnionsFilteredBySlotsPeriod.reduce((accum, onion) => {\n            if (!accum.some(obj => obj.City === onion.City)) {\n                accum.push(onion.City)\n            }\n            return accum\n        }, [])\n\n        const uniqueCodesOfSaturatedOnions = await codesOfSaturatedOnionsAtSelectedPeriod.filter((onionCode, index) => codesOfSaturatedOnionsAtSelectedPeriod.indexOf(onionCode) === index)\n        console.log(uniqueCodesOfSaturatedOnions)\n\n\n        const reportArray = await Promise.all(uniqueCodesOfSaturatedOnions.map(async name => {\n            const slotStartHour = slotStart.substr(0, 2)\n            const slotEndHour = slotEnd.substr(0, 2)\n            const onionCode = name.toLowerCase()\n            const onionSaturationReport = await getOnionSaturationInfo(onionCode, slotStartHour, slotEndHour)\n            return JSON.parse(await onionSaturationReport)\n        }, []))\n\n        console.log(reportArray)\n\n        return reportArray\n    }\n\n    useEffect(async () => {\n            setSaturationPeriodReport(await getSatReport(startPeriodSlotSelected, endPeriodSlotSelected))\n        }, [sendRequestForReport]\n    )\n\n    return (\n        <div>\n            <form action=\"#\">\n                <select name=\"slotStartPeriodSelector\" id=\"1\" value={startPeriodSlotSelected}\n                        onChange={(e) => selectChangeHandler(e)}>\n                    {slots.map((slot, id) => (\n                        <option value={slot} key={id}>\n                            {slot}\n                        </option>\n                    ))}\n                </select>\n                <select name=\"slotEndPeriodSelector\" id=\"2\" value={endPeriodSlotSelected}\n                        onChange={(e) => selectChangeHandler(e)}>\n                    {slots.map((slot, id) => (\n                        <option value={slot} key={id}>\n                            {slot}\n                        </option>\n                    ))}\n                </select>\n                <button\n                    onClick={e => {\n                        getSatReport(startPeriodSlotSelected, endPeriodSlotSelected)\n                        e.preventDefault()\n                        setSendRequestForReport(true)\n                    }}\n                >\n                    Get report\n                </button>\n            </form>\n\n            <div>{saturationPeriodReport.map((onion, id) => <OnionSaturationCard {...onion} key={id}/>)}</div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFlex = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  margin: ${({margin}) => margin || '0'};\n  width: ${({width}) => width || '100%'};\n  height: ${({height}) => height || '100%'};\n  padding: ${({padding}) => padding || '0'};\n  background-color: ${({bColor}) => bColor || 'transparent'};\n  text-decoration: ${({tDecoration}) => tDecoration || 'none'};\n  border-bottom: ${({bBorder}) => bBorder || ''};\n`\n\nexport default function Flex(props) {\n    return <StyledFlex {...props} />\n}\n","import React from 'react';\n\nconst Homepage = () => {\n    return (\n        <div>\n            <h1>Hello user!</h1>\n        </div>\n    );\n};\n\nexport default Homepage;","import React from 'react';\n\nconst WeatherActionPlanPage = () => {\n    return (\n        <div>\n            \n        </div>\n    );\n};\n\nexport default WeatherActionPlanPage;","import React from 'react';\nimport SaturationReportPage from \"./SaturationReport/SaturationReportPage\";\nimport WeatherActionPlanPage from \"./WeatherActionPlanReport/WeatherActionPlanPage\";\n\nconst Reports = () => {\n    return (\n        <div>\n            <SaturationReportPage />\n            <WeatherActionPlanPage />\n        </div>\n    );\n};\n\nexport default Reports;","import React from 'react';\n\nconst WeatherControlPage = () => {\n    return (\n        <div>\n            Camcorders with weather at onions\n        </div>\n    );\n};\n\nexport default WeatherControlPage;","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n\tcolor: ${({ color }) => color || 'white'};\n\ttext-decoration: ${({ decoration }) => decoration || 'none'};\n\tfont-size: ${({ fSize }) => fSize || '1em'};\n\twidth: ${({ width }) => width || '100%'};\n\theight: ${({ height }) => height || '100%'};\n\tmargin: ${({ margin }) => margin || '0'};\n\ttext-align: ${({ textAlign }) => textAlign || 'start'};\n\tcursor: ${({ cursor }) => cursor || ''};\n\tdisplay: ${({ display }) => display || 'inline'};\n\ttext-decoration: ${({tDecoration}) => tDecoration || 'none'};\n\tbackground-color: ${({bColor}) => bColor || 'transparent'};\n`\n\nexport default function TextContent(props) {\n\treturn <StyledSpan {...props} />\n}\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport TextContent from '../StyledComponents/TextContent'\n\nexport default function Page404() {\n    return (\n        <Flex margin=\"auto\" justify=\"center\" align=\"center\">\n            <TextContent textAlign='center' margin='20% auto' fSize=\"4em\">😞 😞 😞 404: Page not found 😞😞😞</TextContent>\n        </Flex>\n    )\n}\n","import React from 'react';\nimport styled from \"styled-components\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst SNavLink = styled(NavLink)`\n  color: ${({color}) => color || 'white'};\n  text-decoration: ${({decoration}) => decoration || 'none'};\n  font-size: ${({fSize}) => fSize || '1em'};\n  width: ${({width}) => width || '100%'};\n  height: ${({height}) => height || '100%'};\n  padding: ${({padding}) => padding || '0'};\n  margin: ${({margin}) => margin || '0'};\n  text-align: ${({textAlign}) => textAlign || 'start'};\n  cursor: ${({cursor}) => cursor || ''};\n  display: ${({display}) => display || 'inline'};\n  text-decoration: ${({tDecoration}) => tDecoration || 'none'};\n  background-color: ${({bColor}) => bColor || 'violet'};\n  border-radius: ${({radius}) => radius || '0px'};\n  border: ${({border}) => border || ''};\n  &.active {\n    background-color: blueviolet;\n  }\n`\n\n\nconst StyledNavLink = (props) => {\n    return (\n        <SNavLink to={props.link} {...props}>{props.name}</SNavLink>\n\n    );\n};\n\nexport default StyledNavLink;","import React from 'react';\n\nconst ChartOfBigOnions = () => {\n    return (\n        <div>\n            Big onions chart\n        </div>\n    );\n};\n\nexport default ChartOfBigOnions;","import React from 'react';\n\nconst ChartOfSmallOnions = () => {\n    return (\n        <div>\n            Samll onion chart\n        </div>\n    );\n};\n\nexport default ChartOfSmallOnions;","import React from 'react';\nimport ChartOfBigOnions from \"./ChartOfBigOnions\";\nimport ChartOfSmallOnions from \"./ChartOfSmallOnions\";\n\nconst ChartsPage = () => {\n    return (\n        <div>\n            Charts page\n            <ChartOfBigOnions />\n            <ChartOfSmallOnions/>\n        </div>\n    );\n};\n\nexport default ChartsPage;","import React from 'react';\nimport Flex from \"../StyledComponents/Flex\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Homepage from \"../Homepage/Homepage\";\nimport Reports from \"../Reports/Reports\";\nimport WeatherControlPage from \"../WeatherControlPage/WeatherControlPage\";\nimport Page404 from \"../Page404/Page404\";\nimport StyledNavLink from \"../StyledComponents/StyledLink\";\nimport ChartsPage from \"../Reports/Charts/ChartsPage\";\n\nconst stylesForStyledLink = {\n    width: '10%',\n    padding: '9px',\n    radius: '15px',\n    bColor: 'rgb(93,68,165)',\n    border: '3px solid white',\n    textAlign: 'center',\n}\n\nconst Navbar = () => {\n    return (\n        <Flex direction={'column'}>\n            <Flex height={'30%'} bColor={'rgb(61,45,108)'} padding={'7px'} justify={'space-evenly'}\n                  bBorder={'3px dashed white'}>\n                <StyledNavLink exact {...stylesForStyledLink} link={'/Aide/'} name={'Home'}/>\n                <StyledNavLink exact {...stylesForStyledLink} link={'/Aide/charts'} name={'Charts'}/>\n                <StyledNavLink exact {...stylesForStyledLink} link={'/Aide/reports'} name={'Reports'}/>\n                <StyledNavLink exact {...stylesForStyledLink} link={'/Aide/weather'} name={'Weather'}/>\n            </Flex>\n\n            <Switch>\n                <Route exact path={'/Aide/'} component={Homepage}/>\n                <Route exact path={'/Aide/charts'} component={ChartsPage}/>\n                <Route exact path={'/Aide/reports'} component={Reports}/>\n                <Route exact path={'/Aide/weather'} component={WeatherControlPage}/>\n                <Route path='*' component={Page404}/>\n            </Switch>\n        </Flex>\n    );\n};\n\nexport default Navbar;","import SaturationReportPage from './components/Reports/SaturationReport/SaturationReportPage.jsx'\n\nimport {createGlobalStyle} from 'styled-components';\nimport Navbar from \"./components/Navbar/Navbar\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background: rgb(61, 45, 108);\n    color: aliceblue;\n    font-family: Sans-Serif;\n  }\n`;\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle/>\n            <Navbar/>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {BrowserRouter as Router} from 'react-router-dom'\n// TODO: Сделать роуты на стрнице\n\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>\n    ,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}
{"version":3,"sources":["components/StyledComponents/Flex.jsx","components/StyledComponents/Button.jsx","toolKitRedux/toolkitSlice.js","components/Homepage/Homepage.jsx","components/Reports/slots.js","components/StyledComponents/Title.jsx","components/Reports/SaturationReport/Cards/OnionSaturationCard.jsx","components/StyledComponents/Select.js","axios/axios.js","components/Reports/saturationReasons.js","toolKitRedux/report-slices/saturationPeriodReportSlice.js","components/StyledComponents/TextContent.jsx","components/Reports/SaturationReport/Pages/SaturationByPeriodPage.jsx","components/StyledComponents/StyledLink.jsx","components/Reports/codes.js","toolKitRedux/report-slices/saturationSelectedOnionsSlice.js","components/Reports/SaturationReport/Cards/OnionCodeCard.jsx","components/Reports/SaturationReport/Cards/AreaCodesCard.jsx","components/Reports/SaturationReport/Pages/SaturationBySelectedOnionPage.jsx","components/Reports/Reports.jsx","components/WeatherControlPage/WeatherControlPage.jsx","components/Page404/Page404.jsx","components/Charts/ChartOfBigOnions.jsx","components/Charts/ChartOfSmallOnions.jsx","components/Charts/ChartsPage.jsx","components/Navbar/Navbar.jsx","assets/img/Background.svg","App.jsx","toolKitRedux/store.js","index.js"],"names":["StyledFlex","styled","div","props","direction","align","wrap","justify","margin","width","height","mHeight","padding","bColor","background","bFilter","tDecoration","bBorder","tBorder","lBorder","rBorder","border","bRadius","cursor","position","top","left","right","bottom","Flex","StyledButton","button","bcolor","color","bradius","Button","type","toolkitSlice","createSlice","name","initialState","count","todos","reducers","increment","state","console","log","decrement","addTodo","action","push","payload","removeLastTodo","pop","actions","Homepage","dispatch","useDispatch","useSelector","toolkit","onClick","prompt","a","setTimeout","map","todo","slotsRegular","StyledTitle","span","decoration","fSize","fWeight","display","Title","OnionSaturationCard","city","saturation","saturationAtSlotData","id","difference","forAutoReport","reason_saturation","slotFilledStr","area","level_sat","SelectStyle","borderRadius","appearance","outline","aideApiAxios","axios","create","baseURL","headers","Authorization","lessCouriers","moreOrders","lessCouriersAndMoreOrdersOrders","axiosGetSaturatedOnionsByPeriod","createAsyncThunk","periodStart","periodEnd","rejectWithValue","get","saturatedOnions","statusText","Error","data","message","axiosGetSaturatedOnionAnalyseObject","onionCode","saturatedOnionData","JSON","parse","onionReportObject","charAt","getSaturationReport","getState","clearReport","getUniqueSaturatedOnionCodes","saturatedUniqueSortedOnionCodesArray","saturationPeriodReport","Promise","all","saturationReport","kyiv_report","mio_report","small_report","sortReportBySaturationReasons","setError","status","error","setLoading","saturationPeriodReportSlice","sortedReportBySaturationReason","lessCouriersSaturatedOnions","moreOrdersSaturatedOnions","lessCouriersAndMoreOrdersOrdersSaturatedOnions","saturatedOnionsObjectsArray","periodReport","setPeriodOfReport","allSaturatedOnionCodes","reduce","accum","onion","some","obj","uniqueOnionCodes","filter","index","indexOf","sort","addOnionObjToPeriodReport","saturationReason","extraReducers","fulfilled","rejected","isKyiv","isMio","pending","StyledSpan","textAlign","TextContent","SaturationByPeriodPage","selectChangeHandler","e","target","value","substr","style","onChange","slot","preventDefault","length","onionReport","key","SNavLink","NavLink","text_align","background_color","radius","StyledNavLink","to","text","kyivCodes","mioCodes","smallCodes","onionCodesArray","selectedOnionsReport","selectedOnionsReportSlice","areaCodes","selectedOnionCodes","selectedOnionsByUser","selectOnion","codesArray","code","deselectOnion","includes","indexOfCodeAtInitialArray","splice","OnionCode","AreaCodesCard","cardTitle","codes","React","memo","onionCodesSelectHandler","outerText","title","stylesForStyledLink","Reports","useRouteMatch","path","url","exact","component","SaturationBySelectedOnionPage","WeatherControlPage","Page404","ChartOfBigOnions","ChartOfSmallOnions","ChartsPage","Navbar","localStorage","clear","GlobalStyle","createGlobalStyle","img","App","persistConfig","storage","whitelist","rootReducer","combineReducers","saturationSelectedOnionsSlice","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8d85c75.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.direction || 'row'};\n    align-items: ${({ align }) => align || 'stretch'};\n    flex-wrap: ${({ wrap }) => wrap || ''};\n    justify-content: ${({ justify }) => justify || 'stretch'};\n    margin: ${({ margin }) => margin || '0'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    min-height: ${({ mHeight }) => mHeight || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n    background: ${({ background }) => background || ''};\n    backdrop-filter: ${({ bFilter }) => bFilter || ''};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    border-bottom: ${({ bBorder }) => bBorder || ''};\n    border-top: ${({ tBorder }) => tBorder || ''};\n    border-left: ${({ lBorder }) => lBorder || ''};\n    border-right: ${({ rBorder }) => rBorder || ''};\n    border: ${({ border }) => border || ''};\n    border-radius: ${({ bRadius }) => bRadius || ''};\n    cursor: ${({ cursor }) => cursor || ''};\n    position: ${({ position }) => position || ''};\n    top: ${({ top }) => top || ''};\n    left: ${({ left }) => left || ''};\n    right: ${({ right }) => right || ''};\n    bottom: ${({ bottom }) => bottom || ''};\n`\n\nexport default function Flex(props) {\n    return <StyledFlex {...props} />\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledButton = styled.button`\n    width: ${({ width }) => width || '100px'};\n    background-color: ${({ bcolor }) => bcolor || 'rgb(0, 0 ,0)'};\n    color: ${({ color }) => color || 'white'};\n    font-weight: 500;\n    padding: ${({ padding }) => padding || '7px'};\n    border-radius: ${({ bradius }) => bradius || '5px'};\n    border: ${({ border }) => border || '2px solid white'};\n    cursor: pointer;\n`\n\nexport default function Button(props) {\n    return <StyledButton type={props.type} {...props} />\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const addAsyncTodo = () => {\n    return async (dispatch) => {\n        setTimeout(() => {\n            dispatch(addTodo('ASYNC TODO'))\n        }, 2000)\n    }\n}\n\nconst toolkitSlice = createSlice({\n    name: 'toolkit',\n    initialState: {\n        count: 21,\n        todos: ['Умыться', 'Покушать', 'Уснуть'],\n    },\n    reducers: {\n        increment(state) {\n            console.log(state.count)\n            state.count = state.count + 1\n        },\n        decrement(state) {\n            state.count = state.count - 1\n        },\n        addTodo(state, action) {\n            state.todos.push(action.payload)\n        },\n        removeLastTodo(state) {\n            state.todos.pop()\n        },\n    },\n})\n\nexport const { increment, decrement, addTodo, removeLastTodo } =\n    toolkitSlice.actions\nexport default toolkitSlice.reducer\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport Button from '../StyledComponents/Button'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    addAsyncTodo,\n    addTodo,\n    decrement,\n    increment,\n    removeLastTodo,\n} from '../../toolKitRedux/toolkitSlice'\n\nconst Homepage = () => {\n    const dispatch = useDispatch()\n    const count = useSelector((state) => state.toolkit.count)\n    const todos = useSelector((state) => state.toolkit.todos)\n\n    return (\n        <Flex width={'90%'}>\n            <div>{count}</div>\n            <Button onClick={() => dispatch(increment())}>Инкремент</Button>\n            <Button onClick={() => dispatch(decrement())}>Декремент</Button>\n            <Button onClick={() => dispatch(addTodo(prompt()))}>\n                Добавить туду\n            </Button>\n            <Button onClick={() => dispatch(removeLastTodo())}>\n                Удалить последний туду\n            </Button>\n            <Button onClick={() => dispatch(addAsyncTodo())}>\n                Добавить асинк туду\n            </Button>\n            {todos.map((todo) => (\n                <div>{todo}</div>\n            ))}\n        </Flex>\n    )\n}\n\nexport default Homepage\n","export const slotsRegular = [\n    '00:00',\n    '01:00',\n    '02:00',\n    '03:00',\n    '04:00',\n    '05:00',\n    '06:00',\n    '07:00',\n    '08:00',\n    '09:00',\n    '10:00',\n    '11:00',\n    '12:00',\n    '13:00',\n    '14:00',\n    '15:00',\n    '16:00',\n    '17:00',\n    '18:00',\n    '19:00',\n    '20:00',\n    '21:00',\n    '22:00',\n    '23:00',\n]\n\nexport const slotsFlexible = [\n    '00:00',\n    '00:30',\n    '01:00',\n    '01:30',\n    '02:00',\n    '02:30',\n    '03:00',\n    '03:30',\n    '04:00',\n    '04:30',\n    '05:00',\n    '05:30',\n    '06:00',\n    '06:30',\n    '07:00',\n    '07:30',\n    '08:00',\n    '08:30',\n    '09:00',\n    '09:30',\n    '10:00',\n    '10:30',\n    '11:00',\n    '11:30',\n    '12:00',\n    '12:30',\n    '13:00',\n    '13:30',\n    '14:00',\n    '14:30',\n    '15:00',\n    '15:30',\n    '16:00',\n    '16:30',\n    '17:00',\n    '17:30',\n    '18:00',\n    '18:30',\n    '19:00',\n    '19:30',\n    '20:00',\n    '20:30',\n    '21:00',\n    '21:30',\n    '22:00',\n    '22:30',\n    '23:00',\n    '23:30',\n]\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledTitle = styled.span`\n    text-align: ${({ align }) => align || 'center'};\n    margin: ${({ margin }) => margin || '0'};\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '2em'};\n    font-weight: ${({ fWeight }) => fWeight || '300'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    margin: ${({ margin }) => margin || '0'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n`\n\nexport default function Title(props) {\n    return <StyledTitle {...props} />\n}\n","import React from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\n\nconst OnionSaturationCard = (props) => {\n    return (\n        <Flex\n            border={'2px solid white'}\n            bRadius={'15px'}\n            padding={'15px'}\n            margin={'10px'}\n            width={'18%'}\n            mHeight={'100%'}\n            height={' '}\n            bColor={'rgb(24 25 26 / 78%);'}\n        >\n            <div>\n                <Title fWeight={'600'} fSize={'1.5em'}>\n                    {props.city}\n                </Title>\n                <div>\n                    {props.saturation.map((saturationAtSlotData, id) => (\n                        <div key={id}>{saturationAtSlotData}</div>\n                    ))}\n                </div>\n                <div>{props.difference}</div>\n                <div>{props.forAutoReport ? '' : props.reason_saturation}</div>\n                <div>{props.slotFilledStr}</div>\n                <div>\n                    <span>{props.area}</span>\n                    <span>{props.level_sat}</span>\n                </div>\n                <div> </div>\n            </div>\n        </Flex>\n    )\n}\n\nexport default OnionSaturationCard\n","export const SelectStyle = {\n    background: 'none',\n    borderRadius: '10px',\n    color: 'white',\n    padding: '8px',\n    appearance: 'none',\n    width: '3.5rem',\n    border: '3px solid white',\n    outline: 'none',\n    margin: '0 10px'\n}","import axios from 'axios'\nconst ACCESS_TOKEN = '0a4fcce5995c4f7478bd0b891b265a73d0289ba4'\nconst ACCESS_TOKEN2 = 'ace68d53680920b040d5e419b048c4d99be6d65f'\nconst apiURL = 'https://www.aideindustries.tk'\n\nexport const aideApiAxios = axios.create({\n    baseURL: apiURL,\n    headers: {\n        Authorization: `Token ${ACCESS_TOKEN2}`,\n    },\n})\n","export const lessCouriers = 'lessCouriersSaturatedOnions'\nexport const moreOrders = 'moreOrdersSaturatedOnions'\nexport const lessCouriersAndMoreOrdersOrders =\n    'lessCouriersAndMoreOrdersOrdersSaturatedOnions'\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport {\n    lessCouriers,\n    lessCouriersAndMoreOrdersOrders,\n    moreOrders,\n} from '../../components/Reports/saturationReasons'\n\nexport const axiosGetSaturatedOnionsByPeriod = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionsByPeriod',\n    async function ({ periodStart, periodEnd }, { rejectWithValue }) {\n        try {\n            const saturatedOnions = await aideApiAxios.get(\n                `/data/filter/?sat=low&start=${periodStart}&end=${periodEnd}&today=yes`\n            )\n            if (saturatedOnions.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            return saturatedOnions.data\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'saturation-period/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue, dispatch }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n\n            onionReportObject['forAutoReport'] = true\n\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n\n            if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации - уменьшилось количество активных курьеров в разрезе с прошлой неделей. '\n            ) {\n                onionReportObject['saturationReason'] = lessCouriers\n            } else if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации - прирост количества заказов в разрезе с прошлой неделей. '\n            ) {\n                onionReportObject['saturationReason'] = moreOrders\n            } else if (\n                onionReportObject.reason_saturation ===\n                'Причина сатурации - прирост заказов и уменьшилось количество активных курьеров в сравнении с прошлой неделей. '\n            ) {\n                onionReportObject['saturationReason'] =\n                    lessCouriersAndMoreOrdersOrders\n            }\n\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'saturation-period/getSaturationReport',\n    async function ({ periodStart, periodEnd }, { dispatch, getState }) {\n        await dispatch(clearReport())\n        await dispatch(\n            axiosGetSaturatedOnionsByPeriod({ periodStart, periodEnd })\n        )\n        await dispatch(getUniqueSaturatedOnionCodes())\n\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().saturationPeriodReport\n                .saturatedUniqueSortedOnionCodesArray\n        const getAllAnalyseObjectsAction = await Promise.all(\n            saturatedUniqueSortedOnionCodesArray.map(async (onionCode) => {\n                await dispatch(\n                    axiosGetSaturatedOnionAnalyseObject({\n                        onionCode,\n                        periodStart,\n                        periodEnd,\n                    })\n                )\n            })\n        )\n\n        const saturationReport = [\n            ...getState().saturationPeriodReport.kyiv_report,\n            ...getState().saturationPeriodReport.mio_report,\n            ...getState().saturationPeriodReport.small_report,\n        ]\n        await dispatch(\n            sortReportBySaturationReasons({\n                saturationReport,\n            })\n        )\n    }\n)\n// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nconst saturationPeriodReportSlice = createSlice({\n    name: 'saturation-period',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        sortedReportBySaturationReason: {\n            lessCouriersSaturatedOnions: [],\n            moreOrdersSaturatedOnions: [],\n            lessCouriersAndMoreOrdersOrdersSaturatedOnions: [],\n        },\n        saturatedOnionsObjectsArray: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state) {\n            const allSaturatedOnionCodes =\n                state.saturatedOnionsObjectsArray.reduce((accum, onion) => {\n                    if (!accum.some((obj) => obj.city === onion.city)) {\n                        accum.push(onion.city)\n                    }\n                    return accum\n                }, [])\n            const uniqueOnionCodes = allSaturatedOnionCodes.filter(\n                (onionCode, index) =>\n                    allSaturatedOnionCodes.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n            state.status = 'loading'\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        sortReportBySaturationReasons(state, action) {\n            const { saturationReport } = action.payload\n\n            saturationReport.map((onion) => {\n                if (onion.saturationReason === lessCouriers) {\n                    state.sortedReportBySaturationReason.lessCouriersSaturatedOnions.push(\n                        onion\n                    )\n                } else if (onion.saturationReason === moreOrders) {\n                    state.sortedReportBySaturationReason.moreOrdersSaturatedOnions.push(\n                        onion\n                    )\n                } else if (\n                    onion.saturationReason === lessCouriersAndMoreOrdersOrders\n                ) {\n                    state.sortedReportBySaturationReason.lessCouriersAndMoreOrdersOrdersSaturatedOnions.push(\n                        onion\n                    )\n                }\n            })\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n            state.sortedReportBySaturationReason.lessCouriersSaturatedOnions =\n                state.sortedReportBySaturationReason.moreOrdersSaturatedOnions =\n                state.sortedReportBySaturationReason.lessCouriersAndMoreOrdersOrdersSaturatedOnions =\n                    []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionsByPeriod.fulfilled]: (state, action) => {\n            state.saturatedOnionsObjectsArray = action.payload\n        },\n        [axiosGetSaturatedOnionsByPeriod.rejected]: setError,\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const isKyiv =\n                action.payload.city === 'KIE' || action.payload.city === 'KYI'\n            const isMio =\n                action.payload.city === 'DNP' ||\n                action.payload.city === 'KHA' ||\n                action.payload.city === 'LVI' ||\n                action.payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(action.payload)\n            } else if (isMio) {\n                state.mio_report.push(action.payload)\n            } else {\n                state.small_report.push(action.payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const {\n    setPeriodOfReport,\n    getUniqueSaturatedOnionCodes,\n    sortReportBySaturationReasons,\n    clearReport,\n} = saturationPeriodReportSlice.actions\n\nexport default saturationPeriodReportSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledSpan = styled.span`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    font-weight: ${({ fWeight }) => fWeight || '300'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ textAlign }) => textAlign || 'center'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ bColor }) => bColor || 'transparent'};\n`\n\nexport default function TextContent(props) {\n    return <StyledSpan {...props} />\n}\n","import { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    getSaturationReport,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationPeriodReportSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\n\nexport default function SaturationByPeriodPage() {\n    const dispatch = useDispatch()\n    const { status, error, periodStart, periodEnd } = useSelector(\n        (state) => state.saturationPeriodReport\n    )\n\n    const {\n        lessCouriersSaturatedOnions,\n        moreOrdersSaturatedOnions,\n        lessCouriersAndMoreOrdersOrdersSaturatedOnions,\n    } = useSelector(\n        (state) => state.saturationPeriodReport.sortedReportBySaturationReason\n    )\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getSaturationReport({\n                periodStart: periodStart,\n                periodEnd: periodEnd,\n            })\n        )\n    }\n\n    return (\n        <Flex direction={'column'} align={'center'} margin={'4em 0 0 0'}>\n            <Flex justify={'center'}>\n                <form action=\"#\">\n                    <select\n                        style={SelectStyle}\n                        name=\"slotStartPeriodSelector\"\n                        id=\"1\"\n                        value={`${periodStart}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <select\n                        style={SelectStyle}\n                        name=\"slotEndPeriodSelector\"\n                        id=\"2\"\n                        value={`${periodEnd}:00`}\n                        onChange={(e) => selectChangeHandler(e)}\n                    >\n                        {slotsRegular.map((slot, id) => (\n                            <option value={slot} key={id}>\n                                {slot}\n                            </option>\n                        ))}\n                    </select>\n                    <Button\n                        onClick={(e) => {\n                            e.preventDefault()\n                            sendRequestForReport()\n                        }}\n                        bcolor={'black'}\n                        color={'white'}\n                        bradius={'10px'}\n                        border={'3px solid white'}\n                    >\n                        Get report\n                    </Button>\n                </form>\n            </Flex>\n            <Flex direction={'column'} width={'90%'}>\n                <Flex>\n                    {lessCouriersSaturatedOnions.length > 0 && (\n                        <Flex wrap={'wrap'}>\n                            <Title\n                                margin={'10px 0px'}\n                                fWeight={'700'}\n                            >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                            <div> </div>\n                            <Flex\n                                wrap={'wrap'}\n                                border={'2px solid white'}\n                                justify={'space-evenly'}\n                                align={'stretch'}\n                                padding={'10px'}\n                                bRadius={'10px'}\n                                bFilter={'blur(2px)'}\n                                margin={'10px 0px'}\n                            >\n                                <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                    Уменьшилось количество активных курьеров в\n                                    разрезе с прошлой неделей:\n                                </TextContent>\n                                {lessCouriersSaturatedOnions.map(\n                                    (onionReport, id) => (\n                                        <OnionSaturationCard\n                                            {...onionReport}\n                                            key={id}\n                                        />\n                                    )\n                                )}\n                            </Flex>\n                        </Flex>\n                    )}\n                </Flex>\n                <Flex>\n                    {moreOrdersSaturatedOnions.length > 0 && (\n                        <Flex\n                            wrap={'wrap'}\n                            border={'2px solid white'}\n                            justify={'space-evenly'}\n                            align={'stretch'}\n                            padding={'10px'}\n                            bRadius={'10px'}\n                            bFilter={'blur(2px)'}\n                            margin={'10px 0px'}\n                        >\n                            <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                Прирост количества заказов в разрезе с прошлой\n                                неделей:\n                            </TextContent>\n                            {moreOrdersSaturatedOnions.map(\n                                (onionReport, id) => (\n                                    <OnionSaturationCard\n                                        {...onionReport}\n                                        key={id}\n                                    />\n                                )\n                            )}{' '}\n                        </Flex>\n                    )}\n                </Flex>\n                <Flex>\n                    {lessCouriersAndMoreOrdersOrdersSaturatedOnions.length >\n                        0 && (\n                        <Flex\n                            wrap={'wrap'}\n                            border={'2px solid white'}\n                            justify={'space-evenly'}\n                            align={'stretch'}\n                            padding={'10px'}\n                            bRadius={'10px'}\n                            bFilter={'blur(2px)'}\n                            margin={'10px 0px'}\n                        >\n                            <TextContent fSize={'1.3em'} fWeight={'800'}>\n                                Прирост заказов и уменьшилось количество\n                                активных курьеров в сравнении с прошлой неделей:\n                            </TextContent>\n\n                            {lessCouriersAndMoreOrdersOrdersSaturatedOnions.map(\n                                (onionReport, id) => (\n                                    <OnionSaturationCard\n                                        {...onionReport}\n                                        key={id}\n                                    />\n                                )\n                            )}\n                        </Flex>\n                    )}\n                </Flex>\n            </Flex>\n            {status === 'loading' && (\n                <Flex justify={'center'} align={'center'} margin={'15% 0 0 0'}>\n                    <Loader\n                        type=\"Watch\"\n                        color=\"white\"\n                        height={200}\n                        width={300}\n                    />\n                </Flex>\n            )}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { NavLink } from 'react-router-dom'\n\nconst SNavLink = styled(NavLink)`\n    color: ${({ color }) => color || 'white'};\n    text-decoration: ${({ decoration }) => decoration || 'none'};\n    font-size: ${({ fSize }) => fSize || '1em'};\n    width: ${({ width }) => width || '100%'};\n    height: ${({ height }) => height || '100%'};\n    padding: ${({ padding }) => padding || '0'};\n    margin: ${({ margin }) => margin || '0'};\n    text-align: ${({ text_align }) => text_align || 'start'};\n    cursor: ${({ cursor }) => cursor || ''};\n    display: ${({ display }) => display || 'inline'};\n    text-decoration: ${({ tDecoration }) => tDecoration || 'none'};\n    background-color: ${({ background_color }) => background_color || ''};\n    border-radius: ${({ radius }) => radius || '0px'};\n    border: ${({ border }) => border || ''};\n    &.active {\n        color: rgb(186, 143, 255);\n    }\n`\n\nconst StyledNavLink = (props) => {\n    return (\n        <SNavLink to={props.to} {...props}>\n            {props.text}\n        </SNavLink>\n    )\n}\n\nexport default StyledNavLink\n","export const kyivCodes = ['KIE', 'KYI']\nexport const mioCodes = ['DNP', 'KHA', 'LVI', 'ODS']\nexport const smallCodes = [\n    'BRO',\n    'BTA',\n    'CHE',\n    'CHN',\n    'CHK',\n    'IRP',\n    'IVF',\n    'KAM',\n    'KHE',\n    'KHM',\n    'KRK',\n    'KRO',\n    'KRR',\n    'LUT',\n    'MKL',\n    'MPL',\n    'ODE',\n    'POL',\n    'RVN',\n    'SUM',\n    'TNP',\n    'UMA',\n    'UZH',\n    'VNT',\n    'ZHY',\n    'ZPR',\n]\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { aideApiAxios } from '../../axios/axios'\nimport { kyivCodes, mioCodes, smallCodes } from '../../components/Reports/codes'\n\nexport const axiosGetSaturatedOnionAnalyseObject = createAsyncThunk(\n    'selected-onions/axiosGetSaturatedOnionObject',\n    async function (\n        { onionCode, periodStart, periodEnd },\n        { rejectWithValue }\n    ) {\n        try {\n            const saturatedOnionData = await aideApiAxios.get(\n                `/analysis/${onionCode}/${periodStart}/${periodEnd}`\n            )\n\n            if (saturatedOnionData.statusText !== 'OK') {\n                throw new Error('Error братан из сервачка прилетел')\n            }\n            const onionReportObject = await JSON.parse(saturatedOnionData.data)\n            if (onionReportObject.difference.charAt(19) === '+') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - постепенно заполнялись.'\n            } else if (onionReportObject.difference.charAt(19) === '-') {\n                onionReportObject['slotFilledStr'] =\n                    'Заранее расширяли слоты - слабо заполнялись.'\n            }\n            return onionReportObject\n        } catch (error) {\n            return rejectWithValue(error.message)\n        }\n    }\n)\n\nexport const getSaturationReport = createAsyncThunk(\n    'selected-onions/getSaturationReport',\n    async function (\n        { onionCodesArray, periodStart, periodEnd },\n        { dispatch, getState }\n    ) {\n        await dispatch(clearReport())\n        await dispatch(getUniqueSaturatedOnionCodes(onionCodesArray))\n        const saturatedUniqueSortedOnionCodesArray =\n            getState().selectedOnionsReport.saturatedUniqueSortedOnionCodesArray\n        const getAllAnaluzeObjectsAction = await Promise.all(\n            saturatedUniqueSortedOnionCodesArray.map(async (onionCode) => {\n                await dispatch(\n                    axiosGetSaturatedOnionAnalyseObject({\n                        onionCode,\n                        periodStart,\n                        periodEnd,\n                    })\n                )\n            })\n        )\n    }\n)\n// Helper for handling errors from rejectWithValue\nconst setError = (state, action) => {\n    state.status = 'rejected'\n    state.error = action.payload\n}\n\nconst setLoading = (state) => {\n    state.status = 'loading'\n    state.error = null\n}\n\nconst selectedOnionsReportSlice = createSlice({\n    name: 'selected-onions',\n    initialState: {\n        status: null,\n        error: null,\n        periodStart: '16',\n        periodEnd: '18',\n        areaCodes: [[...kyivCodes], [...mioCodes], [...smallCodes]],\n        selectedOnionCodes: [],\n        kyiv_report: [],\n        mio_report: [],\n        small_report: [],\n        selectedOnionsByUser: [],\n        saturatedUniqueSortedOnionCodesArray: [],\n        periodReport: [],\n    },\n    reducers: {\n        setPeriodOfReport(state, action) {\n            state.periodStart = action.payload.periodStart\n            state.periodEnd = action.payload.periodEnd\n        },\n        // Получаем уникальные имена онионов в которых была сатурация за выбраный период\n        getUniqueSaturatedOnionCodes(state, action) {\n            const { payload } = action\n            const uniqueOnionCodes = payload.filter(\n                (onionCode, index) => payload.indexOf(onionCode) === index\n            )\n            state.saturatedUniqueSortedOnionCodesArray = uniqueOnionCodes.sort()\n        },\n        addOnionObjToPeriodReport(state, action) {\n            state.periodReport.push(action.payload)\n        },\n        selectOnion(state, action) {\n            // Удаляем из списка онионов выбранный онион и добавляем в массив который потом передаем для получения репорта\n            state.areaCodes = state.areaCodes.map((codesArray) =>\n                codesArray.filter((code) => code !== action.payload)\n            )\n            state.selectedOnionCodes.push(action.payload)\n        },\n        deselectOnion(state, action) {\n            const onionCode = action.payload\n            state.selectedOnionCodes = state.selectedOnionCodes.filter(\n                (code) => code !== onionCode\n            )\n\n            if (kyivCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = kyivCodes.indexOf(onionCode)\n                state.areaCodes[0].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else if (mioCodes.includes(onionCode)) {\n                const indexOfCodeAtInitialArray = mioCodes.indexOf(onionCode)\n                state.areaCodes[1].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            } else {\n                const indexOfCodeAtInitialArray = smallCodes.indexOf(onionCode)\n                state.areaCodes[2].splice(\n                    indexOfCodeAtInitialArray,\n                    0,\n                    onionCode\n                )\n            }\n        },\n        clearReport(state) {\n            state.kyiv_report = state.mio_report = state.small_report = []\n        },\n    },\n    extraReducers: {\n        [axiosGetSaturatedOnionAnalyseObject.fulfilled]: (state, action) => {\n            // Сортируем обьекты репортов по соответствующих массивах\n            const { payload } = action\n            const isKyiv = payload.city === 'KIE' || payload.city === 'KYI'\n            const isMio =\n                payload.city === 'DNP' ||\n                payload.city === 'KHA' ||\n                payload.city === 'LVI' ||\n                payload.city === 'ODS'\n            if (isKyiv) {\n                state.kyiv_report.push(payload)\n            } else if (isMio) {\n                state.mio_report.push(payload)\n            } else {\n                state.small_report.push(payload)\n            }\n        },\n        [axiosGetSaturatedOnionAnalyseObject.pending]: setLoading,\n        [axiosGetSaturatedOnionAnalyseObject.rejected]: setError,\n        [getSaturationReport.fulfilled]: (state) => {\n            state.periodReport = [\n                ...state.kyiv_report,\n                ...state.mio_report,\n                ...state.small_report,\n            ]\n            state.status = 'resolved'\n        },\n        [getSaturationReport.pending]: setLoading,\n    },\n})\n\nexport const {\n    setPeriodOfReport,\n    getUniqueSaturatedOnionCodes,\n    selectOnion,\n    deselectOnion,\n    clearReport,\n} = selectedOnionsReportSlice.actions\n\nexport default selectedOnionsReportSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\n\nconst OnionCode = ({ code, onClick, value }) => {\n    const backgroundColor = 'transparent'\n    const color = 'white'\n    const border = '3px solid white'\n\n    return (\n        <Flex\n            cursor={'pointer'}\n            border={border}\n            width={'3em'}\n            padding={'3px'}\n            bRadius={'5px'}\n            justify={'space-around'}\n            margin={'5px'}\n            bColor={backgroundColor}\n            onClick={(e) => onClick(e)}\n        >\n            <TextContent fWeight={400} color={color} textAlign={'center'}>\n                {`${code}`}\n            </TextContent>\n        </Flex>\n    )\n}\n\nexport default OnionCode\n","import Flex from '../../../StyledComponents/Flex'\nimport TextContent from '../../../StyledComponents/TextContent'\nimport React from 'react'\nimport OnionCode from './OnionCodeCard'\n\nconst AreaCodesCard = ({ cardTitle, codes, onClick }) => {\n    return (\n        <Flex\n            direction={'column'}\n            width={`80%`}\n            bRadius={'5px'}\n            margin={'8px auto'}\n            padding={'10px'}\n        >\n            <TextContent width={' '} textAlign={'center'}>\n                {cardTitle}\n            </TextContent>\n            <Flex justify={'center'} wrap={'wrap'}>\n                {codes.map((code) => (\n                    <OnionCode key={code} code={code} onClick={onClick} />\n                ))}\n            </Flex>\n        </Flex>\n    )\n}\n\nexport default AreaCodesCard\n","import React, { useEffect, useState } from 'react'\nimport { slotsRegular } from '../../slots'\nimport OnionSaturationCard from '../Cards/OnionSaturationCard'\nimport Flex from '../../../StyledComponents/Flex'\nimport Title from '../../../StyledComponents/Title'\nimport Button from '../../../StyledComponents/Button'\nimport { SelectStyle } from '../../../StyledComponents/Select'\nimport {\n    deselectOnion,\n    getSaturationReport,\n    selectOnion,\n    setPeriodOfReport,\n} from '../../../../toolKitRedux/report-slices/saturationSelectedOnionsSlice'\nimport { useDispatch, useSelector } from 'react-redux'\nimport AreaCodesCard from '../Cards/AreaCodesCard'\nimport Loader from 'react-loader-spinner'\n\nexport default React.memo(function SaturationBySelectedOnion() {\n    const dispatch = useDispatch()\n    const {\n        status,\n        error,\n        periodStart,\n        periodEnd,\n        kyiv_report,\n        mio_report,\n        small_report,\n        areaCodes,\n        selectedOnionCodes,\n    } = useSelector((state) => state.selectedOnionsReport)\n\n    const saturationReport = [...kyiv_report, ...mio_report, ...small_report]\n\n    function selectChangeHandler(e) {\n        const name = e.target.name\n        if (name === 'slotStartPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: e.target.value.substr(0, 2),\n                    periodEnd: periodEnd,\n                })\n            )\n        } else if (name === 'slotEndPeriodSelector') {\n            dispatch(\n                setPeriodOfReport({\n                    periodStart: periodStart,\n                    periodEnd: e.target.value.substr(0, 2),\n                })\n            )\n        }\n    }\n\n    function onionCodesSelectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(selectOnion(onionCode))\n    }\n\n    function onionDeselectHandler(e) {\n        const onionCode = e.target.outerText\n        dispatch(deselectOnion(onionCode))\n    }\n\n    function sendRequestForReport() {\n        dispatch(\n            getSaturationReport({\n                onionCodesArray: selectedOnionCodes,\n                periodStart: periodStart,\n                periodEnd: periodEnd,\n            })\n        )\n    }\n\n    return (\n        <Flex direction={'column'}>\n            <Flex\n                width={'95%'}\n                align={'start'}\n                margin={'2em auto'}\n                direction={'column'}\n                border={'2px solid white'}\n                bFilter={'blur(2px)'}\n            >\n                <Flex\n                    direction={'row'}\n                    width={'100%'}\n                    justify={'space-evenly'}\n                    bBorder={'2px dashed white'}\n                >\n                    {areaCodes.map((onionCodesArray, index) => {\n                        const title =\n                            index === 0 ? 'Kyiv' : index === 1 ? 'MIO' : 'Small'\n                        const width = title === 'Small' ? '60%' : '10%'\n                        return (\n                            <AreaCodesCard\n                                width={width}\n                                key={title}\n                                cardTitle={title}\n                                codes={onionCodesArray}\n                                onClick={onionCodesSelectHandler}\n                            />\n                        )\n                    })}\n                </Flex>\n                <AreaCodesCard\n                    cardTitle=\"Selected onions for report\"\n                    codes={selectedOnionCodes}\n                    onClick={onionDeselectHandler}\n                />\n                <Flex\n                    justify={'center'}\n                    tBorder={'2px solid white'}\n                    padding={'15px 0'}\n                >\n                    <form action=\"#\">\n                        <select\n                            style={SelectStyle}\n                            name=\"slotStartPeriodSelector\"\n                            id=\"1\"\n                            value={`${periodStart}:00`}\n                            onChange={(e) => selectChangeHandler(e)}\n                        >\n                            {slotsRegular.map((slot, id) => (\n                                <option value={slot} key={id}>\n                                    {slot}\n                                </option>\n                            ))}\n                        </select>\n                        <select\n                            style={SelectStyle}\n                            name=\"slotEndPeriodSelector\"\n                            id=\"2\"\n                            value={`${periodEnd}:00`}\n                            onChange={(e) => selectChangeHandler(e)}\n                        >\n                            {slotsRegular.map((slot, id) => (\n                                <option value={slot} key={id}>\n                                    {slot}\n                                </option>\n                            ))}\n                        </select>\n                        <Button\n                            onClick={(e) => {\n                                e.preventDefault()\n                                sendRequestForReport()\n                            }}\n                            bcolor={'black'}\n                            color={'white'}\n                            bradius={'10px'}\n                            border={'3px solid white'}\n                        >\n                            Get report\n                        </Button>\n                    </form>\n                </Flex>\n            </Flex>\n\n            {status === 'resolved' && saturationReport.length > 0 && (\n                <Flex\n                    wrap={'wrap'}\n                    width={'90%'}\n                    border={'2px solid white'}\n                    justify={'space-evenly'}\n                    align={'stretch'}\n                    padding={'10px'}\n                    bRadius={'10px'}\n                    bFilter={'blur(2px)'}\n                    margin={'10px auto'}\n                >\n                    <Title\n                        fWeight={'800'}\n                    >{`Апдейт по сатурации с ${periodStart}:00 по ${periodEnd}:00`}</Title>\n                    {saturationReport.map((onionReport, id) => {\n                        if (status === 'resolved') {\n                            return (\n                                <OnionSaturationCard\n                                    {...onionReport}\n                                    key={id}\n                                />\n                            )\n                        }\n                    })}\n                </Flex>\n            )}\n\n            {status === 'loading' && (\n                <Flex justify={'center'} align={'center'} margin={'15% 0 0 0'}>\n                    <Loader\n                        type=\"ThreeDots\"\n                        color=\"white\"\n                        height={200}\n                        width={300}\n                    />\n                </Flex>\n            )}\n            {error && <h2>An error occurred: {error}</h2>}\n        </Flex>\n    )\n})\n","import React from 'react'\nimport SaturationByPeriodPage from './SaturationReport/Pages/SaturationByPeriodPage'\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport Flex from '../StyledComponents/Flex'\nimport SaturationByOnionsPage from './SaturationReport/Pages/SaturationByOnionsPage'\nimport SaturationBySelectedOnionPage from './SaturationReport/Pages/SaturationBySelectedOnionPage.jsx'\n\nconst stylesForStyledLink = {\n    width: '20%',\n    height: '2em',\n    radius: '15px',\n    text_align: 'center',\n}\n\nconst Reports = () => {\n    const { path, url } = useRouteMatch()\n\n    return (\n        <Flex direction={'column'} width={'90%'}>\n            <Flex\n                justify={'space-evenly'}\n                bBorder={'3px solid white'}\n                padding={'20px 0px 10px'}\n                bColor={'rgb(24,25,26)'}\n            >\n                <StyledNavLink\n                    to={`${url}/period`}\n                    {...stylesForStyledLink}\n                    text={'Saturation report'}\n                />\n                <StyledNavLink\n                    to={`${url}/onion-select`}\n                    {...stylesForStyledLink}\n                    text={'Onions saturation'}\n                    width={'300px'}\n                />\n                <StyledNavLink\n                    to={`${url}/action-plan`}\n                    {...stylesForStyledLink}\n                    text={'Action plan'}\n                    width={'300px'}\n                />\n            </Flex>\n            <Route\n                exact\n                path={`${path}/period`}\n                component={SaturationByPeriodPage}\n            />\n            <Route\n                path={`${path}/onion-select`}\n                component={SaturationBySelectedOnionPage}\n            />\n            <Route exact path={path}>\n                <Redirect to={`${path}/period`} />\n            </Route>\n        </Flex>\n    )\n}\n\nexport default Reports\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\n\nconst WeatherControlPage = () => {\n    return <Flex width={'90%'}>Camcorders with weather at onions</Flex>\n}\n\nexport default WeatherControlPage\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport TextContent from '../StyledComponents/TextContent'\n\nexport default function Page404() {\n    return (\n        <Flex margin=\"auto\" justify=\"center\" align=\"center\">\n            <TextContent textAlign='center' margin='20% auto' fSize=\"4em\">😞 😞 😞 404: Page not found 😞😞😞</TextContent>\n        </Flex>\n    )\n}\n","import React from 'react';\n\nconst ChartOfBigOnions = () => {\n    return (\n        <div>\n            Big onions chart\n        </div>\n    );\n};\n\nexport default ChartOfBigOnions;","import React from 'react';\n\nconst ChartOfSmallOnions = () => {\n    return (\n        <div>\n            Samll onion chart\n        </div>\n    );\n};\n\nexport default ChartOfSmallOnions;","import React from 'react'\nimport ChartOfBigOnions from './ChartOfBigOnions'\nimport ChartOfSmallOnions from './ChartOfSmallOnions'\nimport Flex from '../StyledComponents/Flex'\n\nconst ChartsPage = () => {\n    return (\n        <Flex width={'90%'}>\n            Charts page\n            <ChartOfBigOnions />\n            <ChartOfSmallOnions />\n        </Flex>\n    )\n}\n\nexport default ChartsPage\n","import React from 'react'\nimport Flex from '../StyledComponents/Flex'\nimport { Route, Switch, useRouteMatch } from 'react-router-dom'\nimport Homepage from '../Homepage/Homepage'\nimport Reports from '../Reports/Reports'\nimport WeatherControlPage from '../WeatherControlPage/WeatherControlPage'\nimport Page404 from '../Page404/Page404'\nimport StyledNavLink from '../StyledComponents/StyledLink'\nimport ChartsPage from '../Charts/ChartsPage'\nimport Button from '../StyledComponents/Button'\n\nexport const stylesForStyledLink = {\n    width: '90%',\n    height: '3em',\n    radius: '15px',\n    text_align: 'center',\n}\n\nconst Navbar = () => {\n    const { path, url } = useRouteMatch()\n    function clearLocalStorage() {\n        localStorage.clear()\n    }\n\n    return (\n        <Flex>\n            <Flex\n                height={' '}\n                mHeight={'100vh'}\n                width={'10%'}\n                bColor={'rgb(37,37,38)'}\n                padding={' 1em 1.1em'}\n                rBorder={'2px solid white'}\n                align={'center'}\n                direction={'column'}\n            >\n                <StyledNavLink\n                    exact\n                    {...stylesForStyledLink}\n                    to={'/Aide/'}\n                    text={'Home 🏠'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/charts'}\n                    text={'Charts 📈'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/reports'}\n                    text={'Reports 📰'}\n                />\n                <StyledNavLink\n                    {...stylesForStyledLink}\n                    to={'/Aide/weather'}\n                    text={'Weather ⛈'}\n                />\n                <Button\n                    title={'Delete saved data if app crashes'}\n                    onClick={() => clearLocalStorage()}\n                >\n                    Clear app data\n                </Button>\n            </Flex>\n\n            <Switch>\n                <Route exact path={'/Aide/'} component={Homepage} />\n                <Route path={'/Aide/charts'} component={ChartsPage} />\n                <Route path={'/Aide/reports'} component={Reports} />\n                <Route path={'/Aide/weather'} component={WeatherControlPage} />\n                <Route path=\"*\" component={Page404} />\n            </Switch>\n        </Flex>\n    )\n}\n\nexport default Navbar\n","export default __webpack_public_path__ + \"static/media/Background.67dc55cf.svg\";","import { createGlobalStyle } from 'styled-components'\nimport Navbar from './components/Navbar/Navbar'\nimport img from './assets/img/Background.svg'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    background-size: 45%;\n    background-color: rgb(55, 56, 70);\n    background-image: url(${img});\n    color: aliceblue;\n    font-family: Sans-Serif;\n  }\n`\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle />\n            <Navbar />\n        </>\n    )\n}\n\nexport default App\n","import { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport toolkitSlice from './toolkitSlice'\nimport saturationPeriodReportSlice from './report-slices/saturationPeriodReportSlice'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport saturationSelectedOnionsSlice from './report-slices/saturationSelectedOnionsSlice'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: [''],\n}\n\nconst rootReducer = combineReducers({\n    toolkit: toolkitSlice,\n    saturationPeriodReport: saturationPeriodReportSlice,\n    selectedOnionsReport: saturationSelectedOnionsSlice,\n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n})\n\nexport const persistor = persistStore(store)\n\nexport default { store, persistor }\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { persistor, store } from './toolKitRedux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nReactDOM.render(\n    <Router>\n        <Provider store={store}>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </Router>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}